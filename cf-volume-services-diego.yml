groups:
- name: all-jobs
  jobs:
  - bbl-up-long-running-gcp-environment
  - cats-nfs-long-running-gcp-environment
  - cats-smb-long-running-gcp-environment
  - cf-deployment-nightly
  - deploy-cf
  - deploy-nfs-brokers
  - deploy-smb-broker
  - drats-nfs-smb
  - manual-bump-mapfs-major
  - manual-bump-mapfs-minor
  - manual-bump-mapfs-patch
  - manual-bump-nfs-major
  - manual-bump-nfs-minor
  - manual-bump-nfs-patch
  - manual-bump-smb-major
  - manual-bump-smb-minor
  - manual-bump-smb-patch
  - mapfs-release-job-tests
  - nfs-volume-release-job-tests
  - pats-nfs-docker-long-running-gcp-environment
  - pats-nfs-legacy-long-running-gcp-environment
  - pats-nfs-long-running-gcp-environment
  - pats-smb-long-running-gcp-environment
  - shipit-mapfs
  - shipit-nfs
  - shipit-smb
  - smb-volume-release-job-tests

- name: upgrade-environment-test-nfs-smb
  jobs:
  - bbl-up-long-running-gcp-environment
  - cf-deployment-nightly
  - deploy-cf
  - deploy-nfs-brokers
  - deploy-smb-broker
  - pats-nfs-long-running-gcp-environment
  - pats-nfs-docker-long-running-gcp-environment
  - pats-nfs-legacy-long-running-gcp-environment
  - cats-nfs-long-running-gcp-environment
  - cats-smb-long-running-gcp-environment
  - drats-nfs-smb
  - pats-smb-long-running-gcp-environment

- name: release-nfs
  jobs:
  - shipit-nfs
  - manual-bump-nfs-patch
  - manual-bump-nfs-minor
  - manual-bump-nfs-major

- name: release-smb
  jobs:
  - shipit-smb
  - manual-bump-smb-patch
  - manual-bump-smb-minor
  - manual-bump-smb-major

- name: release-mapfs
  jobs:
  - shipit-mapfs
  - manual-bump-mapfs-patch
  - manual-bump-mapfs-minor
  - manual-bump-mapfs-major

resources:

- name: persi-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/persi-ci.git

- name: cf-volume-services-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-volume-services-acceptance-tests.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: nightly
  type: time
  source:
    start: 12:00 AM
    stop: 1:00 AM
    location: America/Los_Angeles

- name: nfsvolume-version
  type: semver
  source:
    access_key_id: {{nfsvolume-uploader_aws_ID}}
    bucket: nfsvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{nfsvolume-uploader_aws_secret}}

- name: nfs-volume-release
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/nfs-volume-release.git
    ignore_paths:
    - scripts

- name: nfs-volume-release-concourse-tasks
  type: git
  source:
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/nfs-volume-release.git

- name: github-release-nfs
  type: github-release
  source:
    user: cloudfoundry
    repository: nfs-volume-release
    drafts: true
    access_token: {{github-release-token-nfsvolumerelease}}

- name: smb-volume-release
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/smb-volume-release.git

- name: smb-volume-release-concourse-tasks
  type: git
  source:
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/smb-volume-release.git

- name: smb-volume-version
  type: semver
  source:
    access_key_id: {{smbvolume-uploader_aws_ID}}
    bucket: smb-volume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{smbvolume-uploader_aws_secret}}

- name: github-release-smb
  type: github-release
  source:
    user: cloudfoundry
    repository: smb-volume-release
    drafts: true
    access_token: {{github-release-token-smbvolumerelease}}

- name: mapfs-version
  type: semver
  source:
    access_key_id: {{mapfs-uploader_aws_ID}}
    bucket: mapfs-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{mapfs-uploader_aws_secret}}

- name: mapfs-release
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/mapfs-release.git

- name: mapfs-release-concourse-tasks
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/mapfs-release.git

- name: github-release-mapfs
  type: github-release
  source:
    user: cloudfoundry
    repository: mapfs-release
    drafts: true
    access_token: {{github-release-token-mapfs}}

- name: cf-deployment
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: bbl-state
  type: git
  source:
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    branch: master
    private_key: {{deployments-persi-key}}

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: {{github-release-token-bbr}}

- name: disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests.git

jobs:

- name: nfs-volume-release-job-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: nfs-volume-release-concourse-tasks
      - get: mapfs-release
      - get: nfs-volume-release
        trigger: true
  - task: rspec
    file: persi-ci/scripts/ci/run-rspec.build.yml
    input_mapping:
      test-repo: nfs-volume-release
  - task: bosh-release-test
    attempts: 3
    file: nfs-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
    privileged: true

- name: mapfs-release-job-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: mapfs-release
        trigger: true
      - get: mapfs-release-concourse-tasks
  - task: bosh-release-test
    file: mapfs-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
    privileged: true
    timeout: 1h

- name: shipit-nfs
  serial_groups:
  - nfs-version
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: release
        resource: nfs-volume-release
        passed:
        - pats-nfs-long-running-gcp-environment
      - get: version
        resource: nfsvolume-version
        params:
          bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      BASE_RELEASE_NAME: nfs-volume
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{nfsvolume-uploader_aws_ID}}
      S3_ACCESS_KEY: {{nfsvolume-uploader_aws_secret}}
  - put: nfs-volume-version
    resource: nfsvolume-version
    params:
      file: version/number
  - task: generate-github-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      BASE_RELEASE_NAME: nfs-volume
    input_mapping:
      volume-release: release
      volume-version: version
  - put: nfs-volume-release
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: github-release-nfs
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs: []
  - put: nfsvolume-version
    params:
      bump: patch
  - task: pipeline-success
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: johnajimenez/ubuntu-bash-jq-curl-git
          tag: latest
      inputs:
        - name: nfs-volume-release
      run:
        path: bash
        args:
          - -exc
          - |
            cd nfs-volume-release
            export LATEST_GIT_SHA=$(curl -H "X-TrackerToken: 362c51fbe83dee2a2a5a57ac98fd306d" "https://www.pivotaltracker.com/services/v5/projects/1518687/cicd/7b387f7f765bae4500147d6ca1100093" | jq -r '.latest_git_sha')
            git config --global core.pager cat
            if git log $LATEST_GIT_SHA~..$LATEST_GIT_SHA; then
              true # all is well
            else
              echo "$LATEST_GIT_SHA missing, assuming the worst"
              export LATEST_GIT_SHA=null
            fi
            export NEW_LATEST_GIT_SHA=$(git rev-parse HEAD)
            if [ "$LATEST_GIT_SHA" == "null" ]; then
              export STORY_IDS=($(git log -10 | grep -E "\[.*\]" | grep -oE "\[.*\]" | grep -oE "([0-9]+)"))
            else
              export STORY_IDS=($(git log $LATEST_GIT_SHA..HEAD | grep -E "\[.*\]" | grep -oE "\[.*\]" | grep -oE "([0-9]+)"))
            fi
            if [ -z "$STORY_IDS" ]; then
              STORY_IDS=[]
            fi
            curl -X POST -H "X-TrackerToken: 362c51fbe83dee2a2a5a57ac98fd306d" -H "Content-Type: application/json" -d '{"status":"passed", "uuid":"7b387f7f765bae4500147d6ca1100093", "story_ids":['$(IFS=,; echo "${STORY_IDS[*]}")'], "latest_git_sha":"'$NEW_LATEST_GIT_SHA'"}' "https://www.pivotaltracker.com/services/v5/projects/1518687/cicd"
- name: manual-bump-nfs-patch
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: patch

- name: manual-bump-nfs-minor
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: minor

- name: manual-bump-nfs-major
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: major

- name: shipit-mapfs
  serial_groups:
  - mapfs-version
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: release
        resource: mapfs-release
        passed:
        - pats-nfs-long-running-gcp-environment
        - pats-nfs-legacy-long-running-gcp-environment
      - get: version
        resource: mapfs-version
        params:
          bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      BASE_RELEASE_NAME: mapfs
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{mapfs-uploader_aws_ID}}
      S3_ACCESS_KEY: {{mapfs-uploader_aws_secret}}
  - put: version
    resource: mapfs-version
    params:
      file: version/number
  - task: generate-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      BASE_RELEASE_NAME: mapfs
  - put: mapfs-release
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: github-release-mapfs
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs: []
  - put: mapfs-version
    params:
      bump: patch
  - task: pipeline-success
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: johnajimenez/ubuntu-bash-jq-curl-git
          tag: latest
      inputs:
        - name: mapfs-release
      run:
        path: bash
        args:
          - -exc
          - |
            cd mapfs-release
            export LATEST_GIT_SHA=$(curl -H "X-TrackerToken: 362c51fbe83dee2a2a5a57ac98fd306d" "https://www.pivotaltracker.com/services/v5/projects/1518687/cicd/134ec8d86be91855383cce879ea79eae" | jq -r '.latest_git_sha')
            git config --global core.pager cat
            if git log $LATEST_GIT_SHA~..$LATEST_GIT_SHA; then
              true # all is well
            else
              echo "$LATEST_GIT_SHA missing, assuming the worst"
              export LATEST_GIT_SHA=null
            fi
            export NEW_LATEST_GIT_SHA=$(git rev-parse HEAD)
            if [ "$LATEST_GIT_SHA" == "null" ]; then
              export STORY_IDS=($(git log -10 | grep -E "\[.*\]" | grep -oE "\[.*\]" | grep -oE "([0-9]+)"))
            else
              export STORY_IDS=($(git log $LATEST_GIT_SHA..HEAD | grep -E "\[.*\]" | grep -oE "\[.*\]" | grep -oE "([0-9]+)"))
            fi
            if [ -z "$STORY_IDS" ]; then
              STORY_IDS=[]
            fi
            curl -X POST -H "X-TrackerToken: 362c51fbe83dee2a2a5a57ac98fd306d" -H "Content-Type: application/json" -d '{"status":"passed", "uuid":"134ec8d86be91855383cce879ea79eae", "story_ids":['$(IFS=,; echo "${STORY_IDS[*]}")'], "latest_git_sha":"'$NEW_LATEST_GIT_SHA'"}' "https://www.pivotaltracker.com/services/v5/projects/1518687/cicd"

- name: manual-bump-mapfs-patch
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: patch
- name: manual-bump-mapfs-minor
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: minor
- name: manual-bump-mapfs-major
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: major

- name: deploy-nfs-brokers
  serial_groups:
  - nfs
  - gorgophone-errands
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: bbl-state
      - get: nfs-volume-release
        passed:
        - deploy-cf
        trigger: true
      - get: cf-deployment
        passed:
        - deploy-cf
        trigger: true
      - get: cf-deployment-concourse-tasks
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      ERRAND_NAME: nfsbrokerpush

- name: pats-nfs-long-running-gcp-environment
  serial_groups:
  - nfs
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: mapfs-release
        passed:
        - deploy-cf
        trigger: true
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: bbl-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_BOGUS_CONFIG: '{"uid":"1000","gid":"1000"}'
      BIND_CONFIG: '["{\"uid\":\"1000\",\"gid\":\"1000\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"3.0\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"version\": \"3.0\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.1\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"version\": \"4.1\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.2\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"version\": \"4.2\",\"mount\": \"/var/vcap/data/foo\"}"]'
      CREATE_BOGUS_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/nonexistensevol"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: bbl-state
    attempts: 3
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      PARALLEL_NODES: 2
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: pats-nfs-legacy-long-running-gcp-environment
  serial_groups:
  - nfs
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: mapfs-release
        passed:
        - deploy-cf
        trigger: true
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: bbl-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_BOGUS_CONFIG: '{"uid":"1000","gid":"1000"}'
      BIND_CONFIG: '["{\"uid\":\"1000\",\"gid\":\"1000\"}"]'
      CREATE_BOGUS_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/nonexistensevol"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users", "version":"3.0"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs-legacy
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    attempts: 3
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: pats-nfs-docker-long-running-gcp-environment
  serial_groups:
  - nfs
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: bbl-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '["{\"uid\":\"1000\",\"gid\":\"1000\"}"]'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      TEST_DOCKER_PORA: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: cats-nfs-long-running-gcp-environment
  serial_groups:
  - nfs
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: cf-deployment
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: persi-ci
      - get: bbl-state
      - get: cf-acceptance-tests
  - task: run-cats
    file: persi-ci/scripts/ci/run_cats.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      BBL_IAAS: gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_USERNAME: admin
      SERVICE_NAME: nfs
      PLAN_NAME: Existing

- name: cats-smb-long-running-gcp-environment
  serial_groups:
  - smb
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release
        passed:
        - deploy-smb-broker
        trigger: true
      - get: cf-deployment
        passed:
        - deploy-smb-broker
        trigger: true
      - get: persi-ci
      - get: bbl-state
      - get: cf-acceptance-tests
  - task: run-cats
    file: persi-ci/scripts/ci/run_cats.build.yml
    input_mapping:
      director-state: bbl-state
      cf-acceptance-tests: cf-acceptance-tests
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      BBL_IAAS: gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_USERNAME: admin
      SERVICE_NAME: smb
      PLAN_NAME: Existing
      CREATE_CONFIG: '{\"share\": \"((smb_cats_remote_path))\", \"username\": \"((smb_cats_username))\", \"password\": \"((smb_cats_password))\"}'


- name: smb-volume-release-job-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: smb-volume-release-concourse-tasks
      - get: smb-volume-release
        trigger: true
  - task: bosh-release-test
    file: smb-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
    privileged: true
    attempts: 3

- name: deploy-smb-broker
  serial_groups:
  - smb
  - gorgophone-errands
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: bbl-state
      - get: smb-volume-release
        passed:
        - deploy-cf
        trigger: true
      - get: cf-deployment
        passed:
        - deploy-cf
        trigger: true
      - get: cf-deployment-concourse-tasks
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      ERRAND_NAME: smbbrokerpush

- name: pats-smb-long-running-gcp-environment
  serial_groups:
  - smb
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release-concourse-tasks
        params:
          submodules: none
      - get: smb-volume-release
        passed:
        - deploy-smb-broker
        - smb-volume-release-job-tests
        trigger: true
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: bbl-state
  - in_parallel:
      fail_fast: true
      steps:
      - task: generate-bind-create-configs
        file: smb-volume-release-concourse-tasks/scripts/ci/generate_bind_create_config.build.yml
        params:
          SMB_REMOTE_PATH: {{smb_pats_remote_path}}
          SMB_USERNAME: {{smb_pats_username}}
          SMB_PASSWORD: {{smb_pats_password}}
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      DISALLOWED_OVERRIDE_BIND_CONFIG: '{"share"://smbtestservertwo.service.cf.internal/vol2}'
      PLAN_NAME: Existing
      SERVICE_NAME: smb
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      TEST_READ_ONLY: true

- name: shipit-smb
  serial_groups:
  - smb-version
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: release
        resource: smb-volume-release
        passed:
        - pats-smb-long-running-gcp-environment
      - get: version
        resource: smb-volume-version
        params:
          bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      BASE_RELEASE_NAME: smb-volume
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{smbvolume-uploader_aws_ID}}
      S3_ACCESS_KEY: {{smbvolume-uploader_aws_secret}}
  - put: smb-volume-version
    resource: smb-volume-version
    params:
      file: version/number
  - task: generate-github-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      BASE_RELEASE_NAME: smb-volume
  - put: smb-volume-release
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: github-release-smb
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs: []
  - put: smb-volume-version
    params:
      bump: patch
  - task: pipeline-success
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: johnajimenez/ubuntu-bash-jq-curl-git
          tag: latest
      inputs:
        - name: smb-volume-release
      run:
        path: bash
        args:
          - -exc
          - |
            cd smb-volume-release
            export LATEST_GIT_SHA=$(curl -H "X-TrackerToken: 362c51fbe83dee2a2a5a57ac98fd306d" "https://www.pivotaltracker.com/services/v5/projects/1518687/cicd/d526b7901a2001a6f01869ef334b3068" | jq -r '.latest_git_sha')
            git config --global core.pager cat
            if git log $LATEST_GIT_SHA~..$LATEST_GIT_SHA; then
              true # all is well
            else
              echo "$LATEST_GIT_SHA missing, assuming the worst"
              export LATEST_GIT_SHA=null
            fi
            export NEW_LATEST_GIT_SHA=$(git rev-parse HEAD)
            if [ "$LATEST_GIT_SHA" == "null" ]; then
              export STORY_IDS=($(git log -10 | grep -E "\[.*\]" | grep -oE "\[.*\]" | grep -oE "([0-9]+)"))
            else
              export STORY_IDS=($(git log $LATEST_GIT_SHA..HEAD | grep -E "\[.*\]" | grep -oE "\[.*\]" | grep -oE "([0-9]+)"))
            fi
            if [ -z "$STORY_IDS" ]; then
              STORY_IDS=[]
            fi
            curl -X POST -H "X-TrackerToken: 362c51fbe83dee2a2a5a57ac98fd306d" -H "Content-Type: application/json" -d '{"status":"passed", "uuid":"d526b7901a2001a6f01869ef334b3068", "story_ids":['$(IFS=,; echo "${STORY_IDS[*]}")'], "latest_git_sha":"'$NEW_LATEST_GIT_SHA'"}' "https://www.pivotaltracker.com/services/v5/projects/1518687/cicd"
- name: manual-bump-smb-patch
  serial_groups:
  - smb-version
  plan:
  - get: smb-volume-version
    resource: smb-volume-version
    params:
      bump: final
  - put: smb-volume-version
    params:
      bump: patch
- name: manual-bump-smb-minor
  serial_groups:
  - smb-version
  plan:
  - get: smb-volume-version
    resource: smb-volume-version
    params:
      bump: final
  - put: smb-volume-version
    params:
      bump: minor
- name: manual-bump-smb-major
  serial_groups:
  - smb-version
  plan:
  - get: smb-volume-version
    resource: smb-volume-version
    params:
      bump: final
  - put: smb-volume-version
    params:
      bump: major

- name: cf-deployment-nightly
  public: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nightly
        trigger: true
      - get: cf-deployment

- name: bbl-up-long-running-gcp-environment
  serial_groups:
  - nfs
  - smb
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment-concourse-tasks
      - get: bbl-state
      - get: cf-deployment
        passed:
        - cf-deployment-nightly
        trigger: true
      - get: persi-ci
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_ENV_NAME: gorgophone
      BBL_GCP_REGION: us-west1
      BBL_GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
      BBL_IAAS: gcp
      BBL_LB_CERT: {{gorgophone_lbs_ssl_cert}}
      BBL_LB_KEY: {{gorgophone_lbs_ssl_signing_key}}
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      GIT_COMMIT_EMAIL: cf-diego-persistence@pivotal.io
      LB_DOMAIN: gorgophone.cf-app.com
    input_mapping:
      bbl-config: bbl-state
    ensure:
      put: bbl-state
      params:
        repository: updated-bbl-state
        rebase: true
      on_error:
        put: bbl-state
        params:
          repository: updated-bbl-state
          rebase: true

- name: deploy-cf
  serial_groups:
  - nfs
  - smb
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment-concourse-tasks
      - get: bbl-state
      - get: cf-deployment
        passed:
        - bbl-up-long-running-gcp-environment
        trigger: true
      - get: persi-ci
      - get: nfs-volume-release
        passed: [ nfs-volume-release-job-tests ]
      - get: mapfs-release
        passed: [ mapfs-release-job-tests ]
      - get: smb-volume-release
        passed: [ smb-volume-release-job-tests ]
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/scale-up-routers-and-cells.yml
                      operations/enable-nfs-test-server-two.yml
                      operations/enable-smb-test-server-two.yml"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_IAAS: gcp
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      GENERATE_DATADOG_VARS: true
      GENERATE_NFS_VARS: true
      GENERATE_SMB_VARS: true
      GENERATE_GCS_BLOBSTORE_VARS: true
      DATADOG_API_KEY: {{gorgophone-datadog-api-key}}
      DATADOG_METRIC_PREFIX: gorgophone
      SMB_USERNAME: {{smb_pats_username_two}}
      SMB_PASSWORD: {{smb_pats_password_two}}
  - task: bosh-deploy-cf
    file: persi-ci/scripts/ci/deploy-cf-with-multiple-releases.build.yml
    input_mapping:
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      SYSTEM_DOMAIN: gorgophone.cf-app.com
      VARS_FILES: "nfs-vars.yml datadog-vars.yml smb-vars.yml gcs-blobstore-vars.yml"
      OPS_FILES: "operations/use-compiled-releases.yml
                  operations/scale-to-one-az.yml
                  operations/scale-up-routers-and-cells.yml
                  operations/enable-nfs-volume-service.yml
                  operations/enable-nfs-test-server-two.yml
                  operations/test/enable-nfs-test-server.yml
                  operations/test/enable-smb-test-server.yml
                  operations/backup-and-restore/enable-backup-restore.yml
                  operations/backup-and-restore/enable-restore-nfs-broker.yml
                  operations/enable-smb-volume-service.yml
                  operations/enable-smb-test-server-two.yml"
  - task: enable-docker
    attempts: 2
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      SYSTEM_DOMAIN: gorgophone.cf-app.com
      ENABLED_FEATURE_FLAGS: |
        diego_docker
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      ERRAND_NAME: smoke_tests
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      CLEAN_ALL: true

- name: drats-nfs-smb
  serial: true
  serial_groups:
  - gorgophone
  - nfs
  - smb
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: smb-volume-release
        passed:
        - deploy-smb-broker
        trigger: true
      - get: bbr-binary-release
      - get: disaster-recovery-acceptance-tests
      - get: bbl-state
      - get: persi-ci
  - task: update-integration-config
    file: disaster-recovery-acceptance-tests/ci/credhub-compatible/update-integration-config/task.yml
    input_mapping:
      integration-configs: persi-ci
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      INTEGRATION_CONFIG_FILE_PATH: config/drats.json
      SYSTEM_DOMAIN: gorgophone.cf-app.com
  - task: add-timeout
    config:
      platform: linux
      image_resource:
        type:  docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: latest
      inputs:
      - name: updated-integration-configs
      outputs:
      - name: updated-integration-configs-timeout
      run:
        path: /bin/bash
        args: ["-c", "mkdir -p updated-integration-configs-timeout/config && jq '.timeout_in_minutes=15' updated-integration-configs/config/drats.json > updated-integration-configs-timeout/config/drats.json"]
  - task: acceptance-tests
    file: disaster-recovery-acceptance-tests/ci/drats-with-integration-config/task.yml
    attempts: 3
    privileged: true
    input_mapping:
      drats-integration-config: updated-integration-configs-timeout
    params:
      CONFIG_FILE_PATH: config/drats.json

