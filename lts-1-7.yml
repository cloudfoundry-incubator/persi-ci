resources:
- name: nfs-volume-release
  type: git
  source:
    branch: {{lts-nfs-branch}}
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/nfs-volume-release.git

- name: nfs-volume-release-concourse-tasks
  type: git
  source:
    branch: {{lts-nfs-branch}}
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/nfs-volume-release.git

- name: mapfs-release
  type: git
  source:
    branch: master
    tag_filter: {{mapfs-tag}}
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/mapfs-release.git

- name: nfsvolume-version
  type: semver
  source:
    access_key_id: {{lts-nfsvolume-uploader_aws_ID}}
    bucket: lts-nfsvolume-release-versions
    initial_version: {{nfs-semver-initial-version}}
    key: {{lts-nfs-branch}}
    region_name: us-west-2
    secret_access_key: {{lts-nfsvolume-uploader_aws_secret}}

- name: github-release-nfs
  type: github-release
  source:
    user: cloudfoundry
    repository: nfs-volume-release
    drafts: true
    access_token: {{github-release-token-nfsvolumerelease}}

- name: cf-deployment
  type: git
  source:
    branch: master
    tag_filter: {{cf-d-version-tag}} #e.g. v12.1.0
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    tag_filter: {{cf-d-tasks-version-tag}} #e.g. v10.9.0
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-volume-services-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-volume-services-acceptance-tests.git

- name: bbl-state
  type: git
  source:
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    branch: master
    private_key: {{deployments-persi-key}}

- name: env-creation-gate-lock
  type: pool
  source:
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    branch: master
    pool: gate-locks
    private_key: {{deployments-persi-key}}


- name: persi-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/persi-ci.git


- name: docker_driver_integration_tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/docker_driver_integration_tests

- name: credhub
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/credhub

- name: nfs-volume-release-tarball
  type: s3
  source:
    access_key_id: {{lts-nfsvolume-uploader_aws_ID}}
    bucket: nfs-volume-release-tarballs
    regexp: {{nfs-volume-release-tarball-regexp}}
    secret_access_key: {{lts-nfsvolume-uploader_aws_secret}}

jobs:
- name: nfs-security-scan
  plan:
    - in_parallel:
        - get: persi-ci
        - get: nfs-volume-release
          trigger: true
    - task: build
      file: persi-ci/scripts/ci/security-scan.build.yml
      params:
        PATHS: "src/code.cloudfoundry.org/nfsv3driver/:src/code.cloudfoundry.org/nfsbroker/"
        RELEASE_DIR: nfs-volume-release
      input_mapping:
        release-dir: nfs-volume-release

- name: nfsdriver-unit
  public: true
  plan:
  - in_parallel:
    - get: nfs-volume-release-concourse-tasks
      params:
        submodules: none
    - get: nfs-volume-release
      trigger: true
  - task: build
    file: nfs-volume-release-concourse-tasks/scripts/ci/run_driver_unit.build.yml

- name: nfsbroker-tests
  public: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release-concourse-tasks
        params:
          submodules: none
      - get: nfs-volume-release
        trigger: true
      - get: credhub
  - task: run-test
    file: nfs-volume-release-concourse-tasks/scripts/ci/run_broker_integration.build.yml

- name: nfs-volume-release-job-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: nfs-volume-release-concourse-tasks
      - get: mapfs-release
      - get: nfs-volume-release
        trigger: true
  - task: rspec
    file: persi-ci/scripts/ci/run-rspec.build.yml
    input_mapping:
      test-repo: nfs-volume-release
  - task: bosh-release-test
    attempts: 3
    file: nfs-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
    privileged: true

- name: nfsdriver-integration
  serial: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: docker_driver_integration_tests
      - get: nfs-volume-release-concourse-tasks
        params:
          submodules: none
      - get: nfs-volume-release
        passed:
        - nfsdriver-unit
        - nfsbroker-tests
        trigger: true
      - get: mapfs-release
        trigger: true
  - in_parallel:
      fail_fast: true
      steps:
      - task: run_docker_driver_integration_tests
        file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml
        privileged: true
        params:
          TEST_PACKAGE: docker_driver_integration_tests/
      - task: run_docker_driver_lazy_unmount_integration_tests
        file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml
        privileged: true
        params:
          TEST_PACKAGE: docker_driver_integration_tests/lazy_unmount
      - task: run_driver_broker_compatibility_tests
        privileged: true
        input_mapping:
          director-state: bbl-state
        params:
          TEST_PACKAGE: docker_driver_integration_tests/compatibility
        file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml

- name: create-nfs-volume-release
  serial_groups:
  - nfs-version
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - nfsdriver-integration
        - nfs-volume-release-job-tests
        trigger: true
      - get: nfs-volume-version
        resource: nfsvolume-version
        params:
          pre: rc
      - get: persi-ci
  - put: nfs-volume-version
    resource: nfsvolume-version
    params:
      file: nfs-volume-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: nfs-volume-release
      release-version: nfs-volume-version
    params:
      RELEASE_NAME: nfs-volume
  - put: nfs-volume-release-tarball
    params:
      file: release-tarball/nfs-volume-*.tgz



- name: acquire-lock-ephemeral-environment
  build_logs_to_retain: 100
  serial: true
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: nfs-volume-release
            passed:
              - create-nfs-volume-release
          - get: nfs-volume-release-tarball
            passed:
              - create-nfs-volume-release
            trigger: true
          - get: nfsvolume-version
            passed:
              - create-nfs-volume-release
    - put: env-creation-gate-lock
      params:
        claim: lts-ephemeral-environment
      timeout: 3h



- name: bbl-up-ephemeral-environment
  serial_groups: [deploy-cf-ephemeral-environment]
  build_logs_to_retain: 100
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: persi-ci
          - get: cf-deployment-concourse-tasks
          - get: env-creation-gate-lock
            passed:
              - acquire-lock-ephemeral-environment
            trigger: true
          - get: bbl-state
          - get: nfs-volume-release
            passed:
              - acquire-lock-ephemeral-environment
          - get: nfs-volume-release-tarball
            passed:
              - acquire-lock-ephemeral-environment
          - get: nfsvolume-version
            passed:
              - acquire-lock-ephemeral-environment
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_IAAS: gcp
        BBL_ENV_NAME: lts-ephemeral-environment
        BBL_GCP_REGION: us-west1
        BBL_GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
        BBL_LB_CERT: {{ephemeral-environment_lbs_ssl_cert}}
        BBL_LB_KEY: {{ephemeral-environment_lbs_ssl_private_key}}
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment
        LB_DOMAIN: lts-ephemeral-environment.persi.cf-app.com
        GIT_COMMIT_EMAIL: cf-diego-persistence@pivotal.io
      input_mapping:
        bbl-config: bbl-state
      ensure:
        put: bbl-state
        params:
          repository: updated-bbl-state
          rebase: true
        on_error:
          put: bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
    - task: update-route-53
      file: persi-ci/scripts/ci/update_route_53.build.yml
      params:
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment
        AWS_ACCESS_KEY_ID: {{route53-updater_aws_ID}}
        AWS_SECRET_ACCESS_KEY: {{route53-updater_aws_secret}}
        AWS_DEFAULT_REGION: us-east-1
        AWS_HOSTED_ZONE: {{route53-aws-hosted-zone}}
        NS_RECORD_NAME: lts-ephemeral-environment.persi.cf-app.com.
      input_mapping:
        director-state: bbl-state

- name: deploy-cf-ephemeral-environment
  public: true
  build_logs_to_retain: 100
  serial_groups: [deploy-cf-ephemeral-environment]
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: cf-deployment
          - get: cf-deployment-concourse-tasks
          - get: env-creation-gate-lock
            passed:
              - bbl-up-ephemeral-environment
            trigger: true
          - get: bbl-state
          - get: persi-ci
          - get: nfs-volume-release
            passed:
              - bbl-up-ephemeral-environment
          - get: nfs-volume-release-tarball
            passed:
              - bbl-up-ephemeral-environment
          - get: nfsvolume-version
            passed:
              - bbl-up-ephemeral-environment
    - task: collect-tarballs
      file: persi-ci/scripts/ci/collect-tarballs.build.yml
      params:
        COLLECT_NFS_TARBALL: true
        COLLECT_SMB_TARBALL: false
        COLLECT_MAPFS_TARBALL: false
      #this task requires a lot of inputs that we don't need for this instance--we're feeding in
      #nfsvolume-version as a dummy input because it is tiny and easy to copy
      input_mapping:
        persi-ci: persi-ci
        nfs-tarball: nfs-volume-release-tarball
        mapfs-tarball: nfsvolume-version #dummy
        smb-tarball: nfsvolume-version #dummy
        nfs-version: nfsvolume-version
        mapfs-version: nfsvolume-version #dummy
        smb-version: nfsvolume-version #dummy
    - task: collect-tarball-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: cf-deployment
        new-ops-files: collected-tarballs
      params:
        BASE_OPS_FILE_DIR: "operations"
        NEW_OPS_FILES: "operations/update-releases.yml"
    - task: collect-enable-nfs-ldap-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: collected-ops-files
        new-ops-files: persi-ci
      params:
        BASE_OPS_FILE_DIR: "operations"
        NEW_OPS_FILES: "operations/enable-nfs-test-ldapserver.yml"
    - task: add-tarballs
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: collected-ops-files
        new-ops-files: collected-tarballs
      params:
        BASE_OPS_FILE_DIR: "."
        NEW_OPS_FILES: "nfs.tgz"
    - task: generate-variables
      file: persi-ci/scripts/ci/generate_variables.build.yml
      input_mapping:
        director-state: bbl-state
      params:
        BBL_IAAS: gcp
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment
        GENERATE_NFS_VARS: true
        GENERATE_S3_BLOBSTORE_VARS: true
        LDAP_HOST: "nfstestldapserver.service.cf.internal"
        LDAP_SVC_USER: {{ldap-svc-user}}
        LDAP_SVC_PASS: {{ldap-svc-pass}}
        LDAP_PORT: 636
        LDAP_PROTO: tcp
        LDAP_USER_FQDN: {{ldap-user-fqdn}}
    - task: bosh-deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
#      on_failure:
#        put: env-creation-gate-lock
#        params:
#          release: env-creation-gate-lock
      input_mapping:
        cf-deployment: cf-deployment
        ops-files: collected-ops-files
        vars-files: generated-vars
      params:
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment
        SYSTEM_DOMAIN: lts-ephemeral-environment.persi.cf-app.com
        VARS_FILES: "nfs-vars.yml"
        OPS_FILES: "operations/scale-to-one-az.yml \
                  operations/use-compiled-releases.yml \
                  operations/enable-nfs-volume-service.yml \
                  operations/enable-nfs-ldap.yml \
                  operations/test/enable-nfs-test-server.yml \
                  operations/enable-nfs-test-ldapserver.yml \
                  operations/update-releases.yml"
    - task: enable-docker
      attempts: 2
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      params:
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment
        SYSTEM_DOMAIN: lts-ephemeral-environment.persi.cf-app.com
        ENABLED_FEATURE_FLAGS: |
          diego_docker

- name: deploy-nfs-broker-ephemeral-environment
  serial_groups: [deploy-cf-ephemeral-environment]
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: cf-deployment-concourse-tasks
          - get: env-creation-gate-lock
            passed:
              - deploy-cf-ephemeral-environment
            trigger: true
          - get: bbl-state
    - task: run-broker-errand
      file: cf-deployment-concourse-tasks/run-errand/task.yml
      params:
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment
        ERRAND_NAME: nfsbrokerpush

- name: pats-nfs-ldap-ephemeral-environment
  serial_groups: [deploy-cf-ephemeral-environment]
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: env-creation-gate-lock
            passed:
              - deploy-nfs-broker-ephemeral-environment
            trigger: true
          - get: bbl-state
          - get: cf-volume-services-acceptance-tests
          - get: persi-ci
    - task: generate-pats-config
      file: persi-ci/scripts/ci/generate_pats_config.build.yml
      input_mapping:
        director-state: bbl-state
      params:
        BBL_IAAS: gcp
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment
        APPS_DOMAIN: lts-ephemeral-environment.persi.cf-app.com
        CF_API_ENDPOINT: api.lts-ephemeral-environment.persi.cf-app.com
        CF_USERNAME: admin
        BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
        CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
        DISALLOWED_LDAP_BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
        PLAN_NAME: Existing
        SERVICE_NAME: nfs
    - task: run-pats
      file: persi-ci/scripts/ci/run-pats.build.yml
      input_mapping:
        director-state: bbl-state
      params:
        BBL_IAAS: gcp
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment
        TEST_DOCKER_PORA: true

- name: pats-nfs-ldap-legacy-ephemeral-environment
  serial_groups: [deploy-cf-ephemeral-environment]
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: env-creation-gate-lock
            passed:
              - deploy-nfs-broker-ephemeral-environment
            trigger: true
          - get: bbl-state
          - get: cf-volume-services-acceptance-tests
          - get: persi-ci
    - task: generate-pats-config
      file: persi-ci/scripts/ci/generate_pats_config.build.yml
      input_mapping:
        director-state: bbl-state
      params:
        BBL_IAAS: gcp
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment
        APPS_DOMAIN: lts-ephemeral-environment.persi.cf-app.com
        CF_API_ENDPOINT: api.lts-ephemeral-environment.persi.cf-app.com
        CF_USERNAME: admin
        BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
        CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
        DISALLOWED_LDAP_BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
        PLAN_NAME: Existing
        SERVICE_NAME: nfs-legacy
    - task: run-pats
      file: persi-ci/scripts/ci/run-pats.build.yml
      input_mapping:
        director-state: bbl-state
      params:
        BBL_IAAS: gcp
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment

- name: delete-cf-ephemeral-environment-passed-pats
  serial_groups: [deploy-cf-ephemeral-environment]
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: cf-deployment-concourse-tasks
          - get: env-creation-gate-lock
            passed:
              - pats-nfs-ldap-ephemeral-environment
              - pats-nfs-ldap-legacy-ephemeral-environment
            trigger: true
          - get: bbl-state
    - task: delete-cf
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment

- name: bbl-destroy-cf-ephemeral-environment-passed-migration
  serial_groups: [deploy-cf-ephemeral-environment]
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: cf-deployment-concourse-tasks
          - get: env-creation-gate-lock
            passed:
              - delete-cf-ephemeral-environment-passed-pats
            trigger: true
          - get: bbl-state
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_IAAS: gcp
        BBL_ENV_NAME: lts-ephemeral-environment
        BBL_GCP_REGION: us-west1
        BBL_GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
        BBL_LB_CERT: {{ephemeral-environment_lbs_ssl_cert}}
        BBL_LB_KEY: {{ephemeral-environment_lbs_ssl_private_key}}
        BBL_STATE_DIR: lts-bbl-state-ephemeral-environment
        LB_DOMAIN: lts-ephemeral-environment.persi.cf-app.com
        GIT_COMMIT_EMAIL: cf-diego-persistence@pivotal.io
      input_mapping:
        bbl-config: bbl-state
      ensure:
        put: bbl-state
        params:
          repository: updated-bbl-state
          rebase: true
        on_error:
          put: bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
    - put: env-creation-gate-lock
      params:
        release: env-creation-gate-lock

- name: shipit-nfs
  serial_groups:
    - nfs-version
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: persi-ci
          - get: nfs-volume-release-tarball
            passed:
              - deploy-cf-ephemeral-environment
          - get: nfs-volume-release
            passed:
              - deploy-cf-ephemeral-environment
          - get: nfsvolume-version
            params:
              bump: final
    - task: finalize-release
      file: persi-ci/scripts/ci/finalize_release.build.yml
      params:
        BASE_RELEASE_NAME: nfs-volume
        GIT_USER: {{github-user}}
        GIT_EMAIL: {{github-email}}
        S3_ACCESS_KEY_ID: {{lts-nfsvolume-uploader_aws_ID}}
        S3_ACCESS_KEY: {{lts-nfsvolume-uploader_aws_secret}}
      input_mapping:
        release: nfs-volume-release
        version: nfsvolume-version
        release-tarball: nfs-volume-release-tarball
    - task: generate-github-release
      file: persi-ci/scripts/ci/generate_github_release.build.yml
      params:
        BASE_RELEASE_NAME: nfs-volume
      input_mapping:
        release: nfs-volume-release
        version: nfsvolume-version
    - put: nfs-volume-release
      params:
        repository: finalized-release/release
        tag: nfsvolume-version/number
        tag_prefix: v
    - put: github-release-nfs
      params:
        commitish: generated-release/commitish
        name: generated-release/name
        tag: generated-release/version
        globs: []
    - put: nfsvolume-version
      params:
        bump: patch
