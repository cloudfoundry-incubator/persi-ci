######################################################################################################################
###################################### GROUPS SECTION ################################################################
######################################################################################################################
groups:
- name: gorgophone
  jobs:
  - volman-unit
  - volman-inigo
  - nfsdriver-unit
  - nfsbroker-unit
  - nfsdriver-certification
  - efsdriver-unit
  - efsbroker-unit
  - efsdriver-certification
  - csi-local-controller-plugin-unit
  - csi-local-node-plugin-unit
  - csi-plugin-certification
  - certification-test-builds
  - certification-test-publish
  - cifs-smbdriver-unit
  - cifs-azurefilebroker-unit
  - ecs-broker-unit
  - localdriver-unit
  - localbroker-unit
  - localdriver-certification
  - localdriver-docker-certification
  - cephfs-driver-unit
  - cephfs-broker-unit
  - cephdriver-certification
  - deploy-cephfs-cluster
  - cifs-smbdriver-certification
  - create-local-volume-release
  - create-nfs-volume-release
  - create-efs-volume-release
  - create-csi-local-volume-release
  - create-cephfs-release
  - create-diego-release
  - create-ecs-release
  - create-smb-volume-release
  - deploy-smb-cluster
  - setup-cf-infrastructure
  - deploy-ecs-broker-cf-deployment
  - pats-nfs-cf-deployment
  - pats-efs-cf-deployment
  - create-isilon-volume
  - pats-isilon-cf-deployment
  - pats-nfs-docker-cf-deployment
  - pats-nfs-ldap-cf-deployment
  - pats-nfs-pushed-broker-cf-deployment
  - pats-drats
  - pats-csi-local
  - pats-ecs-cf-deployment
  - persi-load-test
  - pats-local-cf-deployment
  - pats-cephfs-cf-deployment

- name: csi
  jobs:
  - csi-local-controller-plugin-unit
  - csi-local-node-plugin-unit
  - csi-plugin-certification
  - pats-csi-local
  - create-csi-local-volume-release
  - setup-cf-infrastructure
  - pats-drats

- name: nfs
  jobs:
  - nfsdriver-unit
  - nfsbroker-unit
  - nfsdriver-certification
  - create-nfs-volume-release
  - pats-nfs-cf-deployment
  - pats-nfs-docker-cf-deployment
  - pats-nfs-ldap-cf-deployment
  - pats-nfs-pushed-broker-cf-deployment
  - setup-cf-infrastructure
  - pats-drats

- name: efs
  jobs:
  - efsdriver-unit
  - efsbroker-unit
  - efsdriver-certification
  - create-efs-volume-release
  - pats-efs-cf-deployment
  - setup-cf-infrastructure
  - pats-drats

- name: ecs
  jobs:
  - ecs-broker-unit
  - create-ecs-release
  - deploy-ecs-broker-cf-deployment
  - pats-ecs-cf-deployment
  - setup-cf-infrastructure
  - pats-drats

- name: cephfs
  jobs:
  - cephfs-driver-unit
  - cephfs-broker-unit
  - cephdriver-certification
  - deploy-cephfs-cluster
  - create-cephfs-release
  - pats-cephfs-cf-deployment
  - setup-cf-infrastructure
  - pats-drats

- name: cifs
  jobs:
  - cifs-smbdriver-unit
  - cifs-azurefilebroker-unit
  - create-smb-volume-release
  - deploy-smb-cluster
  - cifs-smbdriver-certification
  - setup-cf-infrastructure

- name: local
  jobs:
  - localdriver-unit
  - localbroker-unit
  - localdriver-certification
  - localdriver-docker-certification
  - create-local-volume-release
  - pats-local-cf-deployment
  - setup-cf-infrastructure
  - pats-drats

- name: util
  jobs:
  - persi-load-test
  - bbl-destroy
- name: release-nfs
  jobs:
  - shipit-nfs
  - manual-bump-nfs-patch
  - manual-bump-nfs-minor
  - manual-bump-nfs-major

###################################### END GROUPS SECTION ############################################################

######################################################################################################################
###################################### RESOURCES SECTION #############################################################
######################################################################################################################
resources:

#### Misc resources ###############################################################################################
- name: persi-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/persi-ci.git
#### END Misc resources ###############################################################################################

#### CEPH resources ###############################################################################################
- name: cephfs-bosh-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/cephfs-bosh-release.git
- name: cephfs-bosh-release-tarball
  type: s3
  source:
    bucket: cephfs-bosh-release-tarballs
    regexp: cephfs-(.*).tgz
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
- name: cephfs-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: cephfs-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
#### END CEPH resources ###############################################################################################

#### NFS resources ###############################################################################################
- name: nfs-volume-release-tarball
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: nfs-volume-release-tarballs
    regexp: nfsvolume-(.*).tgz
    secret_access_key: {{aws-secret-access-key}}
- name: nfsvolume-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: nfsvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: nfsvolume-final-release
  type: s3
  source:
    bucket: nfsvolume-final-releases
    regexp: nfs-volume-(.*).tgz
    access_key_id: {{nfsvolume-uploader_aws_ID}}
    secret_access_key: {{nfsvolume-uploader_aws_secret}}
- name: nfs-volume-release
  type: git
  source:
    username: {{github-user}}
    password: {{github-password}}
    branch: master
    uri: https://github.com/cloudfoundry/nfs-volume-release.git
- name: github-release-nfs
  type: github-release
  source:
    user: cloudfoundry
    repository: nfs-volume-release
    drafts: true
    access_token: {{github-release-token}}
- name: lib-nfs
  type: git
  source:
    branch: master
    uri: https://github.com/sahlberg/libnfs.git
- name: fuse-nfs
  type: git
  source:
    branch: master
    uri: https://github.com/sahlberg/fuse-nfs.git
#### END NFS resources ###############################################################################################

#### local volume resources ##########################################################################################
- name: local-volume-release-tarball
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: local-volume-release-tarballs
    regexp: localvolume-(.*).tgz
    secret_access_key: {{aws-secret-access-key}}
- name: localvolume-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: localvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: local-volume-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/local-volume-release.git
#### END local volume resources ######################################################################################

#### EFS resources ################################################################################################
- name: efs-volume-release-tarball
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: efs-volume-release-tarballs
    regexp: efsvolume-(.*).tgz
    secret_access_key: {{aws-secret-access-key}}
- name: efsvolume-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: efsvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: efs-volume-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/efs-volume-release.git
#### END EFS resources ################################################################################################

#### Diego resources ################################################################################################
- name: diego-dev-release
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: persi-diego-dev-releases
    regexp: diego-0\.1476\.1-dev\.(\d+)\.tgz
    secret_access_key: {{aws-secret-access-key}}
- name: diego-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: persi-diego-release-versions
    initial_version: 9999.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: garden-runc-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release
# - name: garden-windows-release-tarball
#   type: bosh-io-release
#   source:
#     repository: cloudfoundry-incubator/garden-windows-bosh-release
- name: garden-runc-release-master
  type: git
  source:
    uri: https://github.com/cloudfoundry/garden-runc-release
    branch: master
- name: diego-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/diego-ci
- name: diego-release
  type: git
  source:
    branch: develop
    fetch:
    - master
    ignore_paths:
    - dev_releases
    - git-hooks
    - releases
    - .final_builds
    uri: https://github.com/cloudfoundry/diego-release
- name: routing-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/routing-release.git
- name: routing-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cf-routing-release
#### End Diego resources ################################################################################################

#### Persi resources ################################################################################################
- name: deployments-persi
  type: git
  source:
    private_key: {{deployments-persi-key}}
    uri: git@github.com:cloudfoundry/deployments-persi.git

#### End Persi resources ################################################################################################

#### ECS resources ###################################################################################################
- name: ecs-release
  type: git
  source:
    uri: https://github.com/EMC-Dojo/ecs-release.git
- name: ecs-release-tarball
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: ecs-release-tarballs
    regexp: ecs-release-(.*).tgz
    secret_access_key: {{aws-secret-access-key}}
- name: ecs-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: ecs-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: ecs-cf-service-broker
  type: git
  source:
    uri: https://github.com/codedellemc/ecs-cf-service-broker
#### End ECS resources ###############################################################################################

#### CSI resources ###################################################################################################
- name: csi-local-volume-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/csi-local-volume-release.git

- name: csi-cert
  type: git
  source:
    uri: https://github.com/paulcwarren/csi-cert

- name: csi-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: csi-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}

- name: csi-binaries
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    versioned_file: csi-cert.test.tgz
    bucket: csi-binaries
    secret_access_key: {{aws-secret-access-key}}

- name: csi-local-volume-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: csi-local-volume-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}

- name: csi-local-volume-release-tarball
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: csi-local-volume-release-tarballs
    regexp: csi-local-volume-(.*).tgz
    secret_access_key: {{aws-secret-access-key}}

- name: github-release-csi
  type: github-release
  source:
    user: paulcwarren
    repository: csi-cert
    drafts: true
    access_token: {{github-release-token}}

#### End CSI resources ###############################################################################################

#### Start SMB resources ###############################################################################################
- name: smb-volume-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/smb-volume-release.git

- name: smb-volume-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: smb-volume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}

- name: smb-volume-release-tarball
  type: s3
  source:
    bucket: smb-volume-release-tarballs
    regexp: smbvolume-(.*).tgz
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

#### End SMB resources ###############################################################################################

#### cf-deployment resources #########################################################################################
- name: cf-deployment-develop
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: gorgophone-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    private_key: {{deployments-persi-key}}
    paths:
    - bbl-state.json

- name: gorgophone-env
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    private_key: {{deployments-persi-key}}

- name: gorgophone-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    private_key: {{deployments-persi-key}}
    paths:
    - deployment-vars.yml
#   - datadog-deployment-vars.yml
#   - rds-vars.yml

- name: bbr-release
  type: pivnet
  source:
    api_token: {{pivnet-api-token}}
    product_slug: p-bosh-backup-and-restore

- name: spring-music
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: persi-assets
    regexp: (.*).jar
    secret_access_key: {{aws-secret-access-key}}
    region_name: us-west-1

- name: persistence-load-tests
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/persistence-load-tests.git
    private_key: {{deployments-persi-key}}

#### End cf-deployment resources #####################################################################################

###################################### END RESOURCES SECTION #########################################################


######################################################################################################################
###################################### RESOURCE_TYPES SECTION ########################################################
######################################################################################################################
resource_types:
- name: bosh-config
  type: docker-image
  source:
    repository: dellemcdojo/bosh-config-resource
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
###################################### END RESOURCE_TYPES SECTION ####################################################


jobs:
##### CEPH related jobs ################################################################################################
- name: cephfs-driver-unit
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      trigger: true
  - task: build
    file: cephfs-bosh-release/scripts/ci/run_cephdriver_unit.build.yml
- name: cephfs-broker-unit
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      trigger: true
  - task: build
    file: cephfs-bosh-release/scripts/ci/run_cephbroker_unit.build.yml

- name: deploy-cephfs-cluster
  serial_groups: [cephfs]
  plan:
  - aggregate:
    - get: persi-ci
    - get: gorgophone-env-director-state
    - get: gorgophone-env
    - get: cephfs-bosh-release
      passed:
      - create-cephfs-release
      trigger: true
    - get: cephfs-bosh-release-tarball

  - task: get-bosh-env
    file: persi-ci/scripts/ci/bbl_get_bosh_env.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
  - task: bosh-deploy-cephfs
    file: persi-ci/scripts/ci/deploy-ceph.yml
    input_mapping:
      vars-store: gorgophone-env
      bosh-env: bosh-env
    params:
      CEPHFS_KEYRING: {{gorgophone-cephfs-keyring}}

- name: create-cephfs-release
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      passed:
      - cephfs-broker-unit
      - cephfs-driver-unit
      trigger: true
    - get: ceph-version
      resource: cephfs-version
      params:
        pre: rc
  - put: ceph-version
    resource: cephfs-version
    params:
      file: ceph-version/number
  - task: create-release
    file: cephfs-bosh-release/scripts/ci/create_cephfs_release.build.yml
  - put: cephfs-bosh-release-tarball
    params:
      file: created-cephfs-bosh-release/cephfs-*.tgz

- name: cephdriver-certification
  serial_groups: [cephfs]
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      passed:
      - deploy-cephfs-cluster
      - setup-cf-infrastructure
      trigger: true
    - get: gorgophone-env-director-state
    - get: persi-ci

  - task: get-bosh-env
    file: persi-ci/scripts/ci/bbl_get_bosh_env.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
  - task: certification
    tags: ["jumpbox"]
    privileged: true
    file: cephfs-bosh-release/scripts/ci/run_driver_cert.build.yml
- name: pats-cephfs-cf-deployment
  serial_groups:
  - cephfs
  - gorgophone
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      passed:
      - cephdriver-certification
      trigger: true
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: cephfs-bosh-release/scripts/ci/run_pats_ceph.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: cephfs-bosh-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://ceph-broker.gorgophone.cf-app.com
      BROKER_USER: admin
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: ceph-plan
      SERVICE_NAME: ceph-service
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false
#### END CEPH #########################################################################################################

#### Local Volume related jobs ########################################################################################
- name: localdriver-unit
  plan:
  - get: local-volume-release
    trigger: true
  - task: build
    file: local-volume-release/scripts/ci/run_driver_unit.build.yml
- name: localbroker-unit
  plan:
  - get: local-volume-release
    trigger: true
  - task: build
    file: local-volume-release/scripts/ci/run_broker_unit.build.yml
- name: localdriver-certification
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - localdriver-unit
      trigger: true
  - task: build
    file: local-volume-release/scripts/ci/run_driver_cert.build.yml
- name: localdriver-docker-certification
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - localdriver-unit
      trigger: true
  - task: build
    privileged: true
    file: local-volume-release/scripts/ci/run_docker_cert.build.yml
- name: create-local-volume-release
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - localdriver-certification
      - localdriver-docker-certification
      - localbroker-unit
      trigger: true
    - get: local-volume-version
      resource: localvolume-version
      params:
        pre: rc
  - put: local-volume-version
    resource: localvolume-version
    params:
      file: local-volume-version/number
  - task: create-release
    file: local-volume-release/scripts/ci/create_local_volume_release.build.yml
  - put: local-volume-release-tarball
    params:
      file: created-local-volume-release/local*.tgz
#### END Local volume #################################################################################################

#### NFS related jobs #################################################################################################
- name: nfsdriver-unit
  plan:
  - get: nfs-volume-release
    trigger: true
  - task: build
    file: nfs-volume-release/scripts/ci/run_driver_unit.build.yml
- name: nfsbroker-unit
  plan:
  - get: nfs-volume-release
    trigger: true
  - task: build
    file: nfs-volume-release/scripts/ci/run_broker_unit.build.yml
- name: nfsdriver-certification
  serial_groups:
  - nfs-test-server-deployment
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - create-nfs-volume-release
      trigger: true
    - get: lib-nfs
    - get: fuse-nfs
  - task: fuse-nfs-cert
    tags: ["jumpbox"]
    privileged: true
    file: nfs-volume-release/scripts/ci/run_fuse_nfs_cert.build.yml
    params:
      FUSE_MOUNT: nfs://testnfsserver.gorgophone.cf-app.com/export2/certs?uid=3000&gid=3050
      NFS_MOUNT: testnfsserver.gorgophone.cf-app.com:/export2/certs
  - task: driver-cert
    tags: ["jumpbox"]
    privileged: true
    file: nfs-volume-release/scripts/ci/run_driver_cert_tcp.build.yml
    params:
      SOURCE: nfs://testnfsserver.gorgophone.cf-app.com/export2/certs
- name: create-nfs-volume-release
  serial_groups:
  - nfs-version
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - nfsdriver-unit
      - nfsbroker-unit
      trigger: true
    - get: nfs-volume-version
      resource: nfsvolume-version
      params:
        pre: rc
  - put: nfs-volume-version
    resource: nfsvolume-version
    params:
      file: nfs-volume-version/number
  - task: create-release
    file: nfs-volume-release/scripts/ci/create_nfs_volume_release.build.yml
  - put: nfs-volume-release-tarball
    params:
      file: created-nfs-volume-release/nfs*.tgz
- name: shipit-nfs
  serial_groups:
  - nfs-version
  plan:
  - aggregate:
    - get: persi-ci
    - get: nfs-volume-release-tarball
      passed:
      - pats-nfs-cf-deployment
    - get: nfs-volume-release
      passed:
      - pats-nfs-cf-deployment
    - get: nfs-volume-version
      resource: nfsvolume-version
      params:
        bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      VERSION: nfs-volume-version
      RELEASE: nfs-volume-release
      TARBALL: nfs-volume-release-tarball
      BASE_RELEASE_NAME: nfs-volume
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{nfsvolume-uploader_aws_ID}}
      S3_ACCESS_KEY: {{nfsvolume-uploader_aws_secret}}
      S3_BUCKET_NAME: {{nfsvolume-uploader_s3_bucket}}
  - aggregate:
    - put: nfs-volume-version
      resource: nfsvolume-version
      params:
        file: nfs-volume-version/number
    - put: nfsvolume-final-release
      params:
        file: finalized-release/nfs-volume-*.tgz
  - task: generate-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      VERSION: nfs-volume-version
      RELEASE: nfs-volume-release
      BASE_RELEASE_NAME: nfs-volume
  - aggregate:
    - put: nfs-volume-release
      params:
        repository: finalized-release/nfs-volume-release
        tag: nfs-volume-version/number
        tag_prefix: v
    - put: github-release-nfs
      params:
        commitish: generated-release/commitish
        name: generated-release/name
        tag: generated-release/version
        globs: []
        # - nfsvolume-final-release/*.tgz
    - put: nfsvolume-version
      params:
        bump: patch
- name: manual-bump-nfs-patch
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: patch
- name: manual-bump-nfs-minor
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: minor
- name: manual-bump-nfs-major
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: major
#### END NFS #########################################################################################################

#### Isilon related jobs #############################################################################################
- name: create-isilon-volume
  plan:
  - aggregate:
    - get: nfs-volume-release
    - get: nfs-volume-release-tarball
    - get: deployments-persi
    - get: gorgophone-env-director-state
      passed:
      - setup-cf-infrastructure
      trigger: true
  - task: create-share
    file: deployments-persi/persi-ci/deployments/isilon-volume/create-share.build.yml
#### END Isilon ######################################################################################################

#### EFS related jobs ################################################################################################
- name: efsdriver-unit
  plan:
  - get: efs-volume-release
    trigger: true
  - task: build
    file: efs-volume-release/scripts/ci/run_driver_unit.build.yml
- name: efsbroker-unit
  plan:
  - get: efs-volume-release
    trigger: true
  - task: build
    file: efs-volume-release/scripts/ci/run_broker_unit.build.yml
- name: efsdriver-certification
  plan:
  - aggregate:
    - get: efs-volume-release
      passed:
      - efsdriver-unit
      - efsbroker-unit
      trigger: true
  - task: build
    privileged: true
    file: efs-volume-release/scripts/ci/run_driver_cert.build.yml
- name: create-efs-volume-release
  plan:
  - aggregate:
    - get: efs-volume-release
      passed:
      - efsdriver-certification
      - efsdriver-unit
      - efsbroker-unit
      trigger: true
    - get: efs-volume-version
      resource: efsvolume-version
      params:
        pre: rc
  - put: efs-volume-version
    resource: efsvolume-version
    params:
      file: efs-volume-version/number
  - task: create-release
    file: efs-volume-release/scripts/ci/create_efs_volume_release.build.yml
  - put: efs-volume-release-tarball
    params:
      file: created-efs-volume-release/efs*.tgz

#### END EFS ##########################################################################################################


#### CF related jobs ##################################################################################################
- name: volman-unit
  plan:
  - aggregate:
    - get: diego-release
      trigger: true
    - get: persi-ci
  - task: run-unit
    file: persi-ci/scripts/ci/run_volman_unit.build.yml

- name: volman-inigo
  plan:
  - aggregate:
    - get: diego-release
      trigger: true
    - get: garden-runc-release-tarball
    - get: garden-runc-release-master
      params: {submodules: none}
    - get: routing-release
      params: { submodules: none }
    - get: routing-release-tarball
    - get: diego-ci
    - get: persi-ci
  - task: garden-runc-release
    file: diego-ci/concourse/checkout_garden_runc.build.yml
  - task: routing-release
    file: diego-ci/concourse/checkout_routing.build.yml
    input_mapping:
      routing-release-master: routing-release
  - task: build
    privileged: true
    file: persi-ci/scripts/ci/run_volman_inigo.build.yml
    params:
      DEFAULT_EVENTUALLY_TIMEOUT: 5m

- name: create-diego-release
  plan:
  - aggregate:
    - get: diego-release
      trigger: true
      passed:
      - volman-unit
      - volman-inigo
    - get: persi-ci
      trigger: true
    - get: version
      resource: diego-version
      params:
        pre: dev
  - put: version
    resource: diego-version
    params:
      file: version/number
  - task: create-release
    file: persi-ci/scripts/ci/create_diego_dev_release.build.yml
  - put: diego-dev-release
    params:
      file: created-diego-release/diego-*.tgz

#### END CF ###########################################################################################################

#### START ECS related jobs ###########################################################################################
- name: create-ecs-release
  plan:
  - aggregate:
    - get: ecs-release
      trigger: true
    - get: persi-ci
    - get: ecs-version
      resource: ecs-version
      params:
        pre: rc
  - put: ecs-version
    resource: ecs-version
    params:
      file: ecs-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create_ecs_release.build.yml
  - put: ecs-release-tarball
    params:
      file: created-ecs-release/ecs*.tgz

- name: ecs-broker-unit
  plan:
  - aggregate:
    - get: persi-ci
    - get: ecs-cf-service-broker
      trigger: true
  - task: ecs-broker-unit
    file: persi-ci/scripts/ci/ecs_broker_unit.build.yml

- name: deploy-ecs-broker-cf-deployment
  serial_groups:
  - ecs-deploy
  - gorgophone
  plan:
  - aggregate:
    - get: persi-ci
    - get: gorgophone-env-director-state
    - get: ecs-version
      passed: [ setup-cf-infrastructure ]
      trigger: true
  - task: run-broker-errand
    file: persi-ci/scripts/ci/run_ecs_broker_errand_cf_deployment.build.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params: {}

- name: pats-ecs-cf-deployment
  serial_groups:
  - gorgophone
  - ecs-deploy
  plan:
  - aggregate:
    - get: ecs-version
      passed:
      - deploy-ecs-broker-cf-deployment
      trigger: true
    - get: nfs-volume-release
    - get: gorgophone-env-vars-store
    - get: persi-ci
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://ecs-v1.gorgophone.cf-app.com
      BROKER_USER: user
      BROKER_PASSWORD_KEY: ecs-broker-password
      CF_USERNAME: admin
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      PLAN_NAME: 5gb
      SERVICE_NAME: ecs-file-bucket
      BIND_CONFIG: '{}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false
      TEST_READ_ONLY: false
#### END ECS ##########################################################################################################

#### START CSI related jobs ###########################################################################################
- name: csi-local-controller-plugin-unit
  plan:
  - aggregate:
    - get: csi-local-volume-release
      trigger: true
  - task: local-controller-plugin-unit
    file: csi-local-volume-release/scripts/ci/local-controller-plugin-unit.build.yml

- name: csi-local-node-plugin-unit
  plan:
  - aggregate:
    - get: csi-local-volume-release
      trigger: true
  - task: local-node-plugin-unit
    file: csi-local-volume-release/scripts/ci/local-node-plugin-unit.build.yml

- name: csi-plugin-certification
  plan:
  - aggregate:
    - get: csi-local-volume-release
      passed:
      - csi-local-controller-plugin-unit
      - csi-local-node-plugin-unit
      trigger: true
    - get: csi-cert
      trigger: true
  - task: csi-plugin-certification
    file: csi-local-volume-release/scripts/ci/csi-plugin-certification.build.yml

- name: certification-test-builds
  plan:
  - aggregate:
    - get: csi-local-volume-release
      passed:
      - csi-plugin-certification
      trigger: true
    - get: csi-cert
      passed:
      - csi-plugin-certification
      trigger: true
  - task: certificate-test-build
    file: csi-cert/scripts/ci/certificate-test-build.build.yml
  - put: csi-binaries
    params:
      file: binaries/csi-cert.test.tgz

- name: certification-test-publish
  plan:
  - aggregate:
    - get: persi-ci
    - get: csi-version
    - get: csi-binaries
    - get: csi-cert
      passed:
      - certification-test-builds

  - task: generate-release
    file: persi-ci/scripts/ci/generate_csi_github_release.build.yml
    params:
      VERSION: csi-version
      RELEASE: csi-cert
      BASE_RELEASE_NAME: csi-cert

  - put: github-release-csi
    params:
      name: generated-release/name
      tag: generated-release/version
      globs:
      - csi-binaries/*.tgz

  - put: csi-version
    params:
      bump: minor

- name: create-csi-local-volume-release
  plan:
  - aggregate:
    - get: csi-local-volume-release
      passed:
      - csi-local-node-plugin-unit
      - csi-local-controller-plugin-unit
      - csi-plugin-certification
      trigger: true
    - get: csi-local-version
      resource: csi-local-volume-version
      params:
        pre: rc

  - put: csi-local-version
    resource: csi-local-volume-version
    params:
      file: csi-local-version/number

  - task: generate-release
    file: csi-local-volume-release/scripts/ci/create_release.build.yml

  - put: csi-local-volume-release-tarball
    params:
      file: created-csi-local-volume-release/csi*.tgz

#### END CSI related jobs ############################################################################################

#### START SMB related jobs ###########################################################################################
- name: cifs-smbdriver-unit
  plan:
  - aggregate:
    - get: smb-volume-release
      trigger: true
  - task: smbdriver-unit
    file: smb-volume-release/scripts/ci/smbdriver-unit.build.yml

- name: cifs-azurefilebroker-unit
  plan:
  - aggregate:
    - get: smb-volume-release
      trigger: true
  - task: azurefilebroker-unit
    file: smb-volume-release/scripts/ci/azurefilebroker-unit.build.yml

- name: create-smb-volume-release
  plan:
  - aggregate:
    - get: smb-volume-release
      passed:
      - cifs-azurefilebroker-unit
      - cifs-smbdriver-unit
      trigger: true
    - get: smb-volume-version
      resource: smb-volume-version
      params:
        pre: rc
  - put: smb-volume-version
    resource: smb-volume-version
    params:
      file: smb-volume-version/number
  - task: create-release
    file: smb-volume-release/scripts/ci/create_smb_volume_release.build.yml
  - put: smb-volume-release-tarball
    params:
      file: created-smb-volume-release/smbvolume-*.tgz

- name: deploy-smb-cluster
  serial_groups: [smb-volume]
  plan:
  - aggregate:
    - get: persi-ci
    - get: gorgophone-env-director-state
    - get: gorgophone-env
    - get: smb-volume-release
      passed:
      - create-smb-volume-release
      trigger: true
    - get: smb-volume-release-tarball

  - task: get-bosh-env
    file: persi-ci/scripts/ci/bbl_get_bosh_env.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
  - task: bosh-deploy-smb
    file: persi-ci/scripts/ci/deploy-smb.yml
    input_mapping:
      vars-store: gorgophone-env
      bosh-env: bosh-env
    params:
      username: {{smb_server_username}}
      password: {{smb_server_password}}

- name: cifs-smbdriver-certification
  serial_groups:
  - smb-volume
  plan:
  - aggregate:
    - get: persi-ci
    - get: smb-volume-release
      passed:
      - deploy-smb-cluster
      trigger: true
    - get: gorgophone-env-director-state
  - task: get-bosh-env
    file: persi-ci/scripts/ci/bbl_get_bosh_env.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
  - task: driver-cert
    tags: ["jumpbox"]
    privileged: true
    file: smb-volume-release/scripts/ci/run_driver_cert.build.yml
    params:
      username: {{smb_server_username}}
      password: {{smb_server_password}}

#### END SMB related jobs ###########################################################################################

#### START cf-deployment related jobs ################################################################################

- name: bbl-destroy
  serial_groups: [gorgophone]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: gorgophone-env-director-state
  - task: destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_AWS_ACCESS_KEY_ID: {{gorgophone_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{gorgophone_aws_secret_access_key}}
    input_mapping:
      bbl-state: gorgophone-env-director-state

- name: setup-cf-infrastructure
  serial_groups: [gorgophone]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: gorgophone-env-director-state
    - get: cf-deployment-develop
      trigger: true
    - get: gorgophone-env-vars-store
    - get: persi-ci
    - get: diego-dev-release
      passed: [ create-diego-release ]
      trigger: true
    - get: diego-version
      passed: [ create-diego-release ]
    - get: nfs-volume-release
      passed: [ create-nfs-volume-release ]
    - get: nfs-volume-release-tarball
      passed: [ create-nfs-volume-release ]
      trigger: true
    - get: nfsvolume-version
      passed: [ create-nfs-volume-release ]
    - get: efs-volume-release
      passed: [ create-efs-volume-release ]
      trigger: true
    - get: efs-volume-release-tarball
      passed: [ create-efs-volume-release ]
    - get: efsvolume-version
      passed: [ create-efs-volume-release ]
    - get: local-volume-release
      passed: [ create-local-volume-release ]
      trigger: true
    - get: local-volume-release-tarball
      passed: [ create-local-volume-release ]
    - get: localvolume-version
      passed: [ create-local-volume-release ]
    - get: csi-local-volume-release
      passed: [ create-csi-local-volume-release ]
      trigger: true
    - get: csi-local-volume-release-tarball
      passed: [ create-csi-local-volume-release ]
    - get: csi-local-volume-version
      passed: [ create-csi-local-volume-release ]
    - get: ecs-release-tarball
      passed: [ create-ecs-release ]
    - get: ecs-version
      passed: [ create-ecs-release ]
    - get: cephfs-bosh-release-tarball
      passed: [ create-cephfs-release ]
    - get: cephfs-bosh-release
      passed: [ create-cephfs-release ]
      trigger: true
    - get: cephfs-version
      passed: [ create-cephfs-release ]
    - get: smb-volume-release
      passed: [ create-smb-volume-release ]
    - get: smb-volume-release-tarball
      passed: [ create-smb-volume-release ]
      trigger: true
    - get: smb-volume-version
      passed: [ create-smb-volume-release ]

  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-2
      BBL_AWS_ACCESS_KEY_ID: {{gorgophone_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{gorgophone_aws_secret_access_key}}
      BBL_LB_CERT: {{gorgophone_lbs_ssl_cert}}
      BBL_LB_KEY: {{gorgophone_lbs_ssl_signing_key}}
      BBL_ENV_NAME: gorgophone
      LB_DOMAIN: gorgophone.cf-app.com
    input_mapping:
      bbl-state: gorgophone-env-director-state
      ops-files: gorgophone-env-director-state #placeholder since we don't use ops files here yet
    ensure:
      put: gorgophone-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: update-cloud-config
    file: persi-ci/scripts/ci/update_cloud_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      bbl-state: gorgophone-env-director-state
    params:
      INFRASTRUCTURE: aws
  - task: collect-tarballs
    file: persi-ci/scripts/ci/collect-tarballs.build.yml
    params: {}
    input_mapping:
      persi-ci: persi-ci
      diego-tarball: diego-dev-release
      nfs-tarball: nfs-volume-release-tarball
      efs-tarball: efs-volume-release-tarball
      csi-local-tarball: csi-local-volume-release-tarball
      ecs-tarball: ecs-release-tarball
      local-tarball: local-volume-release-tarball
      cephfs-tarball: cephfs-bosh-release-tarball
      smb-tarball: smb-volume-release-tarball
      diego-version: diego-version
      nfs-version: nfsvolume-version
      efs-version: efsvolume-version
      csi-local-version: csi-local-volume-version
      ecs-version: ecs-version
      cephfs-version: cephfs-version
      local-version: localvolume-version
      smb-version: smb-volume-version
  - task: collect-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-develop
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/scale-up-routers-and-cells.yml operations/use-ecs-blobstore.yml operations/enable-nfs-volume-service.yml operations/enable-csi-local-plugin.yml operations/enable-nfs-test-server.yml operations/enable-nfs-ldap.yml operations/enable-nfs-broker-backup.yml operations/deploy-efs-broker-and-install-driver.yml operations/deploy-ecs-broker-errand.yml operations/deploy-ceph-broker-and-install-driver.yml operations/deploy-smb-broker-and-install-driver.yml"
  - task: collect-more-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: local-volume-release
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/enable-local-volume-service.yml"
  - task: collect-even-more-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/update-releases.yml"
  - task: add-tarballs
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "."
      NEW_OPS_FILES: "diego.tgz nfs.tgz efs.tgz local.tgz csi-local.tgz ecs.tgz cephfs.tgz smb.tgz"
  - task: get-bosh-env
    file: persi-ci/scripts/ci/bbl_get_bosh_env.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state

  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    params:
      LDAP_SVC_USER: {{ldap-svc-user}}
      LDAP_SVC_PASS: {{ldap-svc-pass}}
      LDAP_HOST: {{ldap-host}}
      LDAP_PORT: 389
      LDAP_PROTO: tcp
      LDAP_USER_FQDN: {{ldap-user-fqdn}}
      ECS_PASSWORD: {{ecs-password}}
      ECS_USERNAME: {{ecs-user}}
      ECS_IP: 34.206.233.96
      ECS_AWS_ID: {{ecs-blob-user}}
      ECS_AWS_KEY: {{ecs-blob-key}}
      S3_BLOBSTORE_ID: {{s3-blobstore-user}}
      S3_BLOBSTORE_KEY: {{s3-blobstore-key}}
      S3_BLOBSTORE_REGION: {{s3-blobstore-region}}
      APP_PACKAGE_DIRECTORY_KEY: persi-cc-packages
      BUILDPACK_DIRECTORY_KEY: persi-cc-buildpacks
      DROPLET_DIRECTORY_KEY: persi-cc-droplets
      RESOURCE_DIRECTORY_KEY: persi-cc-resources
      AWS_ACCESS_KEY_ID: {{efs-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{efs-secret-access-key}}
      AWS_SECURITY_GROUP: sg-80bfddfd
      AWS_SUBNET_ID: subnet-aced69e4
      AWS_AZ: us-west-2a
      EFS_BROKER_PASSWORD: {{efs-broker-password}}
      DATADOG_API_KEY: {{gorgophone-datadog-api-key}}
      DATADOG_METRIC_PREFIX: gorgophone
      CEPHFS_KEYRING: {{gorgophone-cephfs-keyring}}

  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      cf-deployment: cf-deployment-develop
      vars-store: gorgophone-env-vars-store
      bbl-state: gorgophone-env-director-state
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      MANIFEST_FILE: cf-deployment.yml
      SYSTEM_DOMAIN: gorgophone.cf-app.com # not used, this is a required by the task
      VARS_STORE_FILE: deployment-vars.yml
      VARS_FILES: "nfs-vars.yml cf-vars.yml efs-vars.yml datadog-vars.yml cephfs-vars.yml"
      OPS_FILES: "operations/aws.yml operations/scale-to-one-az.yml operations/scale-up-routers-and-cells.yml operations/enable-nfs-volume-service.yml operations/enable-local-volume-service.yml operations/enable-nfs-test-server.yml operations/enable-csi-local-plugin.yml operations/deploy-efs-broker-and-install-driver.yml operations/deploy-ecs-broker-errand.yml operations/enable-nfs-ldap.yml operations/experimental/enable-backup-restore.yml operations/test/add-datadog-firehose-nozzle.yml operations/enable-nfs-broker-backup.yml operations/deploy-ceph-broker-and-install-driver.yml operations/deploy-smb-broker-and-install-driver.yml operations/update-releases.yml"
    ensure:
      put: gorgophone-env-vars-store
      params:
        repository: updated-vars-store
        rebase: true

- name: pats-csi-local
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: csi-local-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: csi-local-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store

  - task: run-pats
    file: csi-local-volume-release/scripts/ci/run_pats_localvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPS_DOMAIN: gorgophone.cf-app.com
      BIND_CONFIG: '{\"mount\":\"/var/vcap/store\"}'
      BROKER_URL: http://csi-localbroker.gorgophone.cf-app.com
      BROKER_USER: csi-localbroker
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: free
      CREATE_CONFIG: '{\"name\":\"csi-local-storage\",\"volume_capabilities\":[{\"mount\":{}}]}'
      SERVICE_NAME: csilocalfs
      TEST_MULTI_CELL: false
      TEST_MOUNT_OPTIONS: false

- name: pats-isilon-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - create-isilon-volume
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - create-isilon-volume
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://nfs-broker.gorgophone.cf-app.com
      BROKER_USER: nfs-broker
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      CREATE_CONFIG: '{\"share\":\"isilon.persi.cf-app.com/ifs/persi-pats\"}'
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false
      TEST_READ_ONLY: true

- name: pats-efs-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: efs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: efs-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: efs-volume-release/scripts/ci/run_pats_efsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: efs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_PASSWORD: {{pats-broker-password}}
      BROKER_URL: http://efs-broker.gorgophone.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      BROKER_PASSWORD: {{efs-broker-password}}
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: {{cf-username}}
      PLAN_NAME: generalPurpose
      SERVICE_NAME: efs
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false
      DEFAULT_TIMEOUT: 300

- name: pats-nfs-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://nfs-broker.gorgophone.cf-app.com
      BROKER_USER: nfs-broker
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: true
      TEST_READ_ONLY: true

- name: pats-nfs-docker-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://nfs-broker.gorgophone.cf-app.com
      BROKER_USER: nfs-broker
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: true
      TEST_READ_ONLY: true
      TEST_DOCKER_PORA: true

- name: pats-nfs-ldap-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://nfs-broker.gorgophone.cf-app.com
      BROKER_USER: nfs-broker
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
      BIND_CONFIG: '{\"username\":\"user1000\",\"password\":\"abc123!\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false
      TEST_READ_ONLY: false
      TEST_DOCKER_PORA: true

- name: pats-nfs-pushed-broker-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_PASSWORD: foo
      BROKER_URL: http://nfsbrokerpatsapp.gorgophone.cf-app.com
      BROKER_USER: fooser
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      PUSHED_BROKER_NAME: nfsbrokerpatsapp
      DB_DRIVER_NAME: mysql
      DB_HOST: {{gorgophone-nfsbroker-mysql-host}}
      DB_PORT: 3306
      DB_NAME: nfsdb1
      DB_USERNAME: {{gorgophone-nfsbroker-mysql-user}}
      DB_PASSWORD: {{gorgophone-nfsbroker-mysql-password}}
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: true

- name: pats-local-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: local-volume-release/scripts/ci/run_pats_localvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: local-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://local-broker.gorgophone.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: free-local-dist
      SERVICE_NAME: local-volume
      TEST_MULTI_CELL: false
      TEST_MOUNT_OPTIONS: false

- name: pats-drats
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: persi-ci
    - get: bbr-release
    - get: gorgophone-env-director-state
    - get: gorgophone-env-vars-store
    - get: nfs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
  - task: extract-binary
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundrylondon/bbr-pipeline
          tag: release-candidate
      inputs:
      - name: bbr-release
      outputs:
      - name: binary
      run:
        path: sh
        args:
        - -c
        - |
          tar -xvf bbr-release/bbr*.tar
          cp releases/bbr binary/
  - task: get-bosh-env
    file: persi-ci/scripts/ci/bbl_get_bosh_env.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
  - task: drats
    tags: ["jumpbox"]
    file: persi-ci/scripts/ci/drats.build.yml
    input_mapping:
      bosh-env: bosh-env
      persi-ci: persi-ci
      binary: binary
      nfs-volume-release: nfs-volume-release
      vars-store: gorgophone-env-vars-store
    params:
      CF_API_URL: https://api.gorgophone.cf-app.com
      CF_ADMIN_USERNAME: admin
      NFS_BROKER_URL: http://nfs-broker.gorgophone.cf-app.com

- name: persi-load-test
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: persi-ci
    - get: gorgophone-env-director-state
    - get: gorgophone-env-vars-store
    - get: persistence-load-tests
    - get: spring-music

  - task: get-bosh-env
    file: persi-ci/scripts/ci/bbl_get_bosh_env.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
  - task: run-persi-load-test
    tags: ["jumpbox"]
    file: persi-ci/scripts/ci/persi-load-test.build.yml
    input_mapping:
      bosh-env: bosh-env
      vars-store: gorgophone-env-vars-store
    params:
      CF_USERNAME: admin
      DOMAIN_NAME: "gorgophone.cf-app.com"
      NUM_OF_APPS: 10
      CF_DEPLOYMENT: "cf"
      SECONDS_OF_DOWNTIME: 120
      MINUTES_OF_SLEEP: 10

#### END cf-deployment related jobs ##################################################################################

###################################### END JOBS SECTION ##############################################################
