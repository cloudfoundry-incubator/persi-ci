######################################################################################################################
###################################### GROUPS SECTION ################################################################
######################################################################################################################
groups:
- name: persi
  jobs:
  - volman-unit
  - volman-unit-windows
  - volman-inigo
  - nfsdriver-unit
  - volumedriver-units-windows
  - nfsbroker-unit
  - nfs-volume-release-job-tests
  - nfsdriver-certification
  - efsdriver-unit
  - efsbroker-unit
  - efsdriver-certification
  - csi-local-controller-plugin-unit
  - csi-local-node-plugin-unit
  - csi-local-node-plugin-unit-windows
  - csi-broker-unit
  - csi-plugin-certification
  - certification-test-builds
  - certification-test-publish
  - smbdriver-unit
  - smbdriver-unit-windows
  - smb-azurefilebroker-unit
  - smbbroker-unit
  - smb-existingvolumebroker-unit
  - smb-volume-mount-options-unit
  - localdriver-unit
  - localdriver-unit-windows
  - localbroker-unit
  - mapfs-unit
  - localdriver-certification
  - localdriver-certification-windows
  - localdriver-docker-certification
  - smbdriver-certification
  - smbdriver-certification-windows
  - deploy-smb-broker
  - create-local-volume-release
  - create-nfs-volume-release
  - create-efs-volume-release
  - create-csi-local-volume-release
  - create-csi-plugins-release
  - create-mapfs-release
  - create-diego-release
  - create-smb-volume-release
  - cf-deployment-nightly
  - bbl-up-gorgophone
  - deploy-cf
  - acquire-lock-heleus
  - bbl-up-heleus
  - deploy-cf-heleus
  - deploy-nfs-broker-heleus
  - pats-nfs-ldap-heleus
  - pats-nfs-ldap-legacy-heleus
  - pats-efs-heleus
  - delete-cf-heleus-credhub
  - deploy-cf-heleus-sql
  - migrate-nfs-broker-to-credhub-heleus
  - delete-cf-heleus
  - bbl-destroy-heleus
  - deploy-nfs-brokers
  - pats-nfs
  - create-isilon-volume
  - pats-isilon
  - pats-nfs-docker
  - pats-nfs-legacy
  - cats-nfs
  - drats-nfs-smb
  - pats-csi-local
  - pats-csi-nfs
  - pats-smb
  - pats-smb-windows
  - pats-local
  - pats-local-windows
  - background-load-test

- name: gorgophone
  jobs:
  - cf-deployment-nightly
  - bbl-up-gorgophone
  - deploy-cf
  - deploy-nfs-brokers
  - deploy-smb-broker
  - pats-nfs
  - create-isilon-volume
  - pats-isilon
  - pats-nfs-docker
  - pats-nfs-legacy
  - cats-nfs
  - drats-nfs-smb
  - pats-csi-local
  - pats-csi-nfs
  - pats-smb
  - pats-smb-windows
  - pats-local
  - pats-local-windows
  - background-load-test

- name: heleus
  jobs:
  - acquire-lock-heleus
  - bbl-up-heleus
  - deploy-cf-heleus
  - deploy-nfs-broker-heleus
  - pats-nfs-ldap-heleus
  - pats-nfs-ldap-legacy-heleus
  - pats-efs-heleus
  - delete-cf-heleus-credhub
  - deploy-cf-heleus-sql
  - migrate-nfs-broker-to-credhub-heleus
  - delete-cf-heleus
  - bbl-destroy-heleus

- name: csi
  jobs:
  - csi-local-controller-plugin-unit
  - csi-local-node-plugin-unit
  - csi-local-node-plugin-unit-windows
  - csi-plugin-certification
  - csi-broker-unit
  - mapfs-unit
  - certification-test-builds
  - certification-test-publish
  - create-csi-local-volume-release
  - create-csi-plugins-release
  - create-mapfs-release
  - bbl-up-gorgophone
  - deploy-cf
  - pats-csi-local
  - pats-csi-nfs
  - drats-nfs-smb

- name: nfs
  jobs:
  - nfsdriver-unit
  - nfsbroker-unit
  - nfs-volume-release-job-tests
  - nfsdriver-certification
  - create-nfs-volume-release
  - bbl-up-gorgophone
  - deploy-cf
  - deploy-nfs-brokers
  - pats-nfs
  - pats-nfs-docker
  - pats-nfs-legacy
  - cats-nfs
  - drats-nfs-smb
  - create-isilon-volume
  - pats-isilon
  - background-load-test
  - acquire-lock-heleus
  - bbl-up-heleus
  - deploy-cf-heleus
  - deploy-nfs-broker-heleus
  - pats-nfs-ldap-heleus
  - pats-nfs-ldap-legacy-heleus
  - delete-cf-heleus-credhub
  - deploy-cf-heleus-sql
  - migrate-nfs-broker-to-credhub-heleus
  - delete-cf-heleus
  - bbl-destroy-heleus

- name: efs
  jobs:
  - efsdriver-unit
  - efsbroker-unit
  - efsdriver-certification
  - create-efs-volume-release
  - acquire-lock-heleus
  - bbl-up-heleus
  - deploy-cf-heleus
  - pats-efs-heleus
  - delete-cf-heleus
  - bbl-destroy-heleus

- name: ecs
  jobs:
  - ecs-broker-unit
  - create-ecs-release
  - deploy-ecs-cluster
  - deploy-ecs-broker
  - bbl-up-gorgophone
  - deploy-cf
  - pats-ecs
  - drats-nfs-smb

- name: smb
  jobs:
  - smbdriver-unit
  - smbdriver-unit-windows
  - smb-azurefilebroker-unit
  - smbbroker-unit
  - smb-existingvolumebroker-unit
  - smb-volume-mount-options-unit
  - volumedriver-units-windows
  - create-smb-volume-release
  - smbdriver-certification
  - smbdriver-certification-windows
  - bbl-up-gorgophone
  - deploy-cf
  - deploy-smb-broker
  - pats-smb
  - pats-smb-windows
  - drats-nfs-smb

- name: local
  jobs:
  - localdriver-unit
  - localbroker-unit
  - localdriver-unit-windows
  - localdriver-certification
  - localdriver-certification-windows
  - localdriver-docker-certification
  - create-local-volume-release
  - bbl-up-gorgophone
  - deploy-cf
  - pats-local
  - pats-local-windows
  - drats-nfs-smb

- name: diego
  jobs:
  - cf-deployment-nightly
  - volman-unit
  - volman-unit-windows
  - volman-inigo
  - create-diego-release
  - deploy-cf

- name: release-nfs
  jobs:
  - shipit-nfs
  - manual-bump-nfs-patch
  - manual-bump-nfs-minor
  - manual-bump-nfs-major

- name: release-smb
  jobs:
  - shipit-smb
  - manual-bump-smb-patch
  - manual-bump-smb-minor
  - manual-bump-smb-major

- name: release-mapfs
  jobs:
  - shipit-mapfs
  - manual-bump-mapfs-patch
  - manual-bump-mapfs-minor
  - manual-bump-mapfs-major

###################################### END GROUPS SECTION ############################################################

######################################################################################################################
###################################### RESOURCES SECTION #############################################################
######################################################################################################################
resources:

#### Misc resources ###############################################################################################
- name: persi-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/persi-ci.git

- name: persi-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/persi-acceptance-tests.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: bosh-bootloader
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-bootloader.git

- name: nightly
  type: time
  source:
    start: 12:00 AM
    stop: 1:00 AM
    location: America/Los_Angeles

- name: shrinkcf
  type: git
  source:
    branch: master
    uri: git@github.com:davewalter/shrinkcf.git
    private_key: {{deployments-persi-key}}

#### END Misc resources ###############################################################################################

#### NFS resources ###############################################################################################
- name: nfs-volume-release-tarball
  type: s3
  source:
    access_key_id: {{nfsvolume-uploader_aws_ID}}
    bucket: nfs-volume-release-tarballs
    regexp: nfs-volume-(.*).tgz
    secret_access_key: {{nfsvolume-uploader_aws_secret}}

- name: nfsvolume-version
  type: semver
  source:
    access_key_id: {{nfsvolume-uploader_aws_ID}}
    bucket: nfsvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{nfsvolume-uploader_aws_secret}}

- name: nfs-volume-release
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/nfs-volume-release.git
    ignore_paths:
    - scripts

- name: nfs-volume-release-concourse-tasks
  type: git
  source:
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/nfs-volume-release.git

- name: github-release-nfs
  type: github-release
  source:
    user: cloudfoundry
    repository: nfs-volume-release
    drafts: true
    access_token: {{github-release-token}}
#### END NFS resources ###############################################################################################

#### local volume resources ##########################################################################################
- name: local-volume-release-tarball
  type: s3
  source:
    access_key_id: {{localvolume-uploader_aws_ID}}
    bucket: local-volume-release-tarballs
    regexp: local-volume-(.*).tgz
    secret_access_key: {{localvolume-uploader_aws_secret}}

- name: localvolume-version
  type: semver
  source:
    access_key_id: {{localvolume-uploader_aws_ID}}
    bucket: localvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{localvolume-uploader_aws_secret}}

- name: local-volume-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/local-volume-release.git
    ignore_paths:
    - scripts

- name: local-volume-release-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/local-volume-release.git
#### END local volume resources ######################################################################################

#### EFS resources ################################################################################################
- name: efs-volume-release-tarball
  type: s3
  source:
    access_key_id: {{efsvolume-uploader_aws_ID}}
    bucket: efs-volume-release-tarballs
    regexp: efs-volume-(.*).tgz
    secret_access_key: {{efsvolume-uploader_aws_secret}}

- name: efsvolume-version
  type: semver
  source:
    access_key_id: {{efsvolume-uploader_aws_ID}}
    bucket: efsvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{efsvolume-uploader_aws_secret}}

- name: efs-volume-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/efs-volume-release.git
    ignore_paths:
    - scripts

- name: efs-volume-release-concourse-tasks
  type: git
  source:
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry-incubator/efs-volume-release.git
#### END EFS resources ################################################################################################

#### Diego resources ################################################################################################
- name: diego-dev-release-tarball
  type: s3
  source:
    access_key_id: {{diego-uploader_aws_ID}}
    bucket: persi-diego-dev-releases
    regexp: diego-0\.1476\.1-dev\.(\d+)\.tgz
    secret_access_key: {{diego-uploader_aws_secret}}

- name: diego-version
  type: semver
  source:
    access_key_id: {{diego-uploader_aws_ID}}
    bucket: persi-diego-release-versions
    initial_version: 9999.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{diego-uploader_aws_secret}}

- name: garden-runc-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

# - name: garden-windows-release-tarball
#   type: bosh-io-release
#   source:
#     repository: cloudfoundry-incubator/garden-windows-bosh-release

- name: garden-runc-release-master
  type: git
  source:
    uri: https://github.com/cloudfoundry/garden-runc-release
    branch: master

- name: diego-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/diego-ci

- name: diego-release
  type: git
  source:
    branch: develop
    fetch:
    - develop
    ignore_paths:
    - dev_releases
    - git-hooks
    - releases
    - .final_builds
    uri: https://github.com/cloudfoundry/diego-release

- name: routing-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/routing-release.git

- name: routing-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cf-routing-release
#### End Diego resources ################################################################################################

#### Persi resources ################################################################################################
- name: deployments-persi
  type: git
  source:
    private_key: {{deployments-persi-key}}
    uri: git@github.com:cloudfoundry/deployments-persi.git
#### End Persi resources ################################################################################################

#### ECS resources ###################################################################################################
- name: ecs-release
  type: git
  source:
    uri: https://github.com/EMC-Dojo/ecs-release.git

- name: ecs-release-tarball
  type: s3
  source:
    access_key_id: {{ecs-uploader_aws_ID}}
    bucket: ecs-release-tarballs
    regexp: ecs-release-(.*).tgz
    secret_access_key: {{ecs-uploader_aws_secret}}

- name: ecs-version
  type: semver
  source:
    access_key_id: {{ecs-uploader_aws_ID}}
    bucket: ecs-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{ecs-uploader_aws_secret}}

- name: ecs-cf-service-broker
  type: git
  source:
    uri: https://github.com/codedellemc/ecs-cf-service-broker
#### End ECS resources ###############################################################################################

#### CSI resources ###################################################################################################
- name: csi-local-volume-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/csi-local-volume-release.git
    ignore_paths:
    - scripts

- name: csi-local-volume-release-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/csi-local-volume-release.git

- name: csi-cert
  type: git
  source:
    uri: https://github.com/paulcwarren/csi-cert

- name: csi-version
  type: semver
  source:
    access_key_id: {{csivolume-uploader_aws_ID}}
    bucket: csi-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{csivolume-uploader_aws_secret}}

- name: csi-binaries
  type: s3
  source:
    access_key_id: {{csivolume-uploader_aws_ID}}
    versioned_file: csi-cert.test.tgz
    bucket: csi-binaries
    secret_access_key: {{csivolume-uploader_aws_secret}}

- name: csi-local-volume-version
  type: semver
  source:
    access_key_id: {{csivolume-uploader_aws_ID}}
    bucket: csi-local-volume-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{csivolume-uploader_aws_secret}}

- name: csi-plugins-version
  type: semver
  source:
    access_key_id: {{csiplugins-uploader_aws_ID}}
    bucket: csi-plugins-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{csiplugins-uploader_aws_secret}}

- name: csi-local-volume-release-tarball
  type: s3
  source:
    access_key_id: {{csivolume-uploader_aws_ID}}
    bucket: csi-local-volume-release-tarballs
    regexp: csi-local-volume-(.*).tgz
    secret_access_key: {{csivolume-uploader_aws_secret}}

- name: csi-plugins-release-tarball
  type: s3
  source:
    access_key_id: {{csiplugins-uploader_aws_ID}}
    bucket: csi-plugins-release-tarballs
    regexp: csi-plugins-(.*).tgz
    secret_access_key: {{csiplugins-uploader_aws_secret}}

- name: github-release-csi
  type: github-release
  source:
    user: paulcwarren
    repository: csi-cert
    drafts: true
    access_token: {{github-release-token}}

- name: csi-plugins-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/csi-plugins-release.git

#### End CSI resources ###############################################################################################

#### Start SMB resources ###############################################################################################
- name: smb-volume-release
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/smb-volume-release.git
    ignore_paths:
    - scripts

- name: smb-volume-release-concourse-tasks
  type: git
  source:
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/smb-volume-release.git

- name: smb-volume-version
  type: semver
  source:
    access_key_id: {{smbvolume-uploader_aws_ID}}
    bucket: smb-volume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{smbvolume-uploader_aws_secret}}

- name: smb-volume-release-tarball
  type: s3
  source:
    bucket: smb-volume-release-tarballs
    regexp: smb-volume-(.*).tgz
    access_key_id: {{smbvolume-uploader_aws_ID}}
    secret_access_key: {{smbvolume-uploader_aws_secret}}

- name: github-release-smb
  type: github-release
  source:
    user: cloudfoundry
    repository: smb-volume-release
    drafts: true
    access_token: {{github-release-token}}

#### End SMB resources ###############################################################################################

#### mapfs resources ###################################################################################################
- name: mapfs-release-tarball
  type: s3
  source:
    access_key_id: {{mapfs-uploader_aws_ID}}
    bucket: mapfs-release-tarballs
    regexp: mapfs-(.*).tgz
    secret_access_key: {{mapfs-uploader_aws_secret}}

- name: mapfs-version
  type: semver
  source:
    access_key_id: {{mapfs-uploader_aws_ID}}
    bucket: mapfs-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{mapfs-uploader_aws_secret}}

- name: mapfs-release
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/mapfs-release.git

- name: github-release-mapfs
  type: github-release
  source:
    user: cloudfoundry
    repository: mapfs-release
    drafts: true
    access_token: {{github-release-token}}
#### End mapfs resources ###############################################################################################

#### cf-deployment resources #########################################################################################
- name: cf-deployment
  type: git
  source:
    branch: develop
    uri: https://github.com/paulcwarren/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: gorgophone-env-director-state
  type: git
  source:
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    branch: master
    private_key: {{deployments-persi-key}}

- name: gorgophone-env
  type: git
  source:
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    private_key: {{deployments-persi-key}}

- name: env-creation-gate-lock
  type: pool
  source:
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    branch: master
    pool: gate-locks
    private_key: {{deployments-persi-key}}

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: {{github-release-token}}

- name: disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests.git
#### End cf-deployment resources #####################################################################################

###################################### END RESOURCES SECTION #########################################################

######################################################################################################################
###################################### RESOURCE_TYPES SECTION ########################################################
######################################################################################################################
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
###################################### END RESOURCE_TYPES SECTION ####################################################

######################################################################################################################
########################################### JOBS SECTION #############################################################
######################################################################################################################
jobs:
#### Local Volume related jobs ########################################################################################
- name: localdriver-unit
  public: true
  plan:
  - aggregate:
    - get: local-volume-release-concourse-tasks
      params:
        submodules: none
    - get: local-volume-release
      trigger: true
  - task: build
    file: local-volume-release-concourse-tasks/scripts/ci/run_driver_unit.build.yml

- name: localdriver-unit-windows
  public: true
  plan:
  - aggregate:
    - get: local-volume-release-concourse-tasks
      params:
        submodules: none
    - get: local-volume-release
      trigger: true
  - task: build
    file: local-volume-release-concourse-tasks/scripts/ci/run_driver_unit_windows.build.yml

- name: localbroker-unit
  public: true
  plan:
  - aggregate:
    - get: local-volume-release-concourse-tasks
      params:
        submodules: none
    - get: local-volume-release
      trigger: true
  - task: build
    file: local-volume-release-concourse-tasks/scripts/ci/run_broker_unit.build.yml

- name: localdriver-certification
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - localdriver-unit
      trigger: true
    - get: local-volume-release-concourse-tasks
      params:
        submodules: none
  - task: build
    file: local-volume-release-concourse-tasks/scripts/ci/run_driver_cert.build.yml

- name: localdriver-certification-windows
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - localdriver-unit-windows
      trigger: true
    - get: local-volume-release-concourse-tasks
      params:
        submodules: none
  - task: build
    file: local-volume-release-concourse-tasks/scripts/ci/run_driver_cert_windows.build.yml

- name: localdriver-docker-certification
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - localdriver-unit
      trigger: true
    - get: local-volume-release-concourse-tasks
      params:
        submodules: none
  - task: build
    privileged: true
    file: local-volume-release-concourse-tasks/scripts/ci/run_docker_cert.build.yml

- name: create-local-volume-release
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - localdriver-certification
      - localdriver-docker-certification
      - localbroker-unit
      trigger: true
    - get: local-volume-version
      resource: localvolume-version
      params:
        pre: rc
    - get: persi-ci
  - put: local-volume-version
    resource: localvolume-version
    params:
      file: local-volume-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: local-volume-release
      release-version: local-volume-version
    params:
      RELEASE_NAME: local-volume
  - put: local-volume-release-tarball
    params:
      file: release-tarball/local-volume-*.tgz

- name: pats-local
  serial_groups:
  - local
  plan:
  - aggregate:
    - get: diego-dev-release-tarball
      passed:
      - deploy-cf
      trigger: true
    - get: local-volume-release
      passed:
      - deploy-cf
      trigger: true
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BROKER_PASSWORD_KEY: local-broker-password
      BROKER_URL: http://local-broker.gorgophone.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      PLAN_NAME: free-local-dist
      SERVICE_NAME: local-volume
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state

- name: pats-local-windows
  serial_groups:
  - local
  plan:
  - aggregate:
    - get: diego-dev-release-tarball
      passed:
      - deploy-cf
      trigger: true
    - get: local-volume-release
      passed:
      - deploy-cf
      trigger: true
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BROKER_PASSWORD_KEY: local-broker-password
      BROKER_URL: http://local-broker.gorgophone.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      PLAN_NAME: free-local-dist
      SERVICE_NAME: local-volume
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      TEST_WINDOWS_CELL: true

#### END Local volume #################################################################################################

#### NFS related jobs #################################################################################################
- name: nfsdriver-unit
  public: true
  plan:
  - aggregate:
    - get: nfs-volume-release-concourse-tasks
      params:
        submodules: none
    - get: nfs-volume-release
      trigger: true
  - task: build
    file: nfs-volume-release-concourse-tasks/scripts/ci/run_driver_unit.build.yml

- name: nfsbroker-unit
  public: true
  plan:
  - aggregate:
    - get: nfs-volume-release-concourse-tasks
      params:
        submodules: none
    - get: nfs-volume-release
      trigger: true
  - task: build
    file: nfs-volume-release-concourse-tasks/scripts/ci/run_broker_unit.build.yml

- name: nfs-volume-release-job-tests
  plan:
  - aggregate:
    - get: persi-ci
    - get: nfs-volume-release
      trigger: true
  - task: build
    file: persi-ci/scripts/ci/run-rspec.build.yml
    input_mapping:
      test-repo: nfs-volume-release

- name: nfsdriver-certification
  serial: true
  plan:
  - aggregate:
    - get: persi-ci
    - get: nfs-volume-release-concourse-tasks
      params:
        submodules: none
    - get: nfs-volume-release
      passed:
      - nfsdriver-unit
      - nfsbroker-unit
      - nfs-volume-release-job-tests
      trigger: true
    - get: mapfs-release
      passed: [ mapfs-unit ]
      trigger: true
  - do:
    - task: create-gcp-nfs-volume
      file: persi-ci/scripts/ci/create-gcp-nfs-volume.build.yml
      params:
        FILESHARE_NAME: nfs_cert_volume
        FILESTORE_INSTANCE_NAME: nfs-certification
        GCP_LOCATION: us-west2-a
        GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
        NETWORK_NAME: concourse-network
      privileged: true
    - task: driver-cert
      file: nfs-volume-release-concourse-tasks/scripts/ci/run_driver_cert.build.yml
      input_mapping:
        nfs-volume-info: gcp-nfs-volume-info
      privileged: true
    ensure:
      task: delete-gcp-nfs-volume
      file: persi-ci/scripts/ci/delete-gcp-nfs-volume.build.yml
      params:
        FILESTORE_INSTANCE_NAME: nfs-certification
        GCP_LOCATION: us-west2-a
        GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}

- name: create-nfs-volume-release
  serial_groups:
  - nfs-version
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - nfsdriver-certification
      trigger: true
    - get: nfs-volume-version
      resource: nfsvolume-version
      params:
        pre: rc
    - get: persi-ci
  - put: nfs-volume-version
    resource: nfsvolume-version
    params:
      file: nfs-volume-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: nfs-volume-release
      release-version: nfs-volume-version
    params:
      RELEASE_NAME: nfs-volume
  - put: nfs-volume-release-tarball
    params:
      file: release-tarball/nfs-volume-*.tgz

- name: shipit-nfs
  serial_groups:
  - nfs-version
  plan:
  - aggregate:
    - get: persi-ci
    - get: release-tarball
      resource: nfs-volume-release-tarball
      passed:
      - pats-nfs
    - get: release
      resource: nfs-volume-release
      passed:
      - pats-nfs
    - get: version
      resource: nfsvolume-version
      params:
        bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      BASE_RELEASE_NAME: nfs-volume
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{nfsvolume-uploader_aws_ID}}
      S3_ACCESS_KEY: {{nfsvolume-uploader_aws_secret}}
  - put: nfs-volume-version
    resource: nfsvolume-version
    params:
      file: version/number
  - task: generate-github-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      BASE_RELEASE_NAME: nfs-volume
    input_mapping:
      volume-release: release
      volume-version: version
  - put: nfs-volume-release
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: github-release-nfs
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs: []
  - put: nfsvolume-version
    params:
      bump: patch

- name: manual-bump-nfs-patch
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: patch

- name: manual-bump-nfs-minor
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: minor

- name: manual-bump-nfs-major
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: major

- name: shipit-mapfs
  serial_groups:
  - mapfs-version
  plan:
  - aggregate:
    - get: persi-ci
    - get: release-tarball
      resource: mapfs-release-tarball
      passed:
      - pats-nfs
      - pats-nfs-legacy
    - get: release
      resource: mapfs-release
      passed:
      - pats-nfs
      - pats-nfs-legacy
    - get: version
      resource: mapfs-version
      params:
        bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      BASE_RELEASE_NAME: mapfs
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{mapfs-uploader_aws_ID}}
      S3_ACCESS_KEY: {{mapfs-uploader_aws_secret}}
  - aggregate:
    - put: version
      resource: mapfs-version
      params:
        file: version/number
  - task: generate-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      BASE_RELEASE_NAME: mapfs
  - put: mapfs-release
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: github-release-mapfs
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs: []
  - put: mapfs-version
    params:
      bump: patch
- name: manual-bump-mapfs-patch
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: patch
- name: manual-bump-mapfs-minor
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: minor
- name: manual-bump-mapfs-major
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: major

- name: deploy-nfs-brokers
  serial_groups:
  - nfs
  - gorgophone-errands
  plan:
  - aggregate:
    - get: persi-ci
    - get: gorgophone-env-director-state
    - get: nfs-volume-release
      passed:
      - deploy-cf
      trigger: true
    - get: cf-deployment
      passed:
      - deploy-cf
      trigger: true
    - get: cf-deployment-concourse-tasks
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      ERRAND_NAME: nfsbrokerpush

- name: pats-nfs
  serial_groups:
  - nfs
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-nfs-brokers
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - deploy-cf
    - get: mapfs-release
      passed:
      - deploy-cf
      trigger: true
    - get: mapfs-release-tarball
      passed:
      - deploy-cf
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_BOGUS_CONFIG: '{"uid":"1000","gid":"1000"}'
      BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
      CREATE_BOGUS_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/nonexistensevol"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      CREATE_LAZY_UNMOUNT_CONFIG: '{"share":"nfstestservertwo.service.cf.internal/export/users"}'
      LAZY_UNMOUNT_REMOTE_SERVER_JOB_NAME: nfstestserver
      LAZY_UNMOUNT_REMOTE_SERVER_PROCESS_NAME: nfsd
      LAZY_UNMOUNT_VM_INSTANCE: nfstestservertwo
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      TEST_LAZY_UNMOUNT: true
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: pats-nfs-legacy
  serial_groups:
  - nfs
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-nfs-brokers
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - deploy-cf
    - get: mapfs-release
      passed:
      - deploy-cf
      trigger: true
    - get: mapfs-release-tarball
      passed:
      - deploy-cf
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_BOGUS_CONFIG: '{"uid":"1000","gid":"1000"}'
      BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
      CREATE_BOGUS_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/nonexistensevol"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs-legacy
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: pats-nfs-docker
  serial_groups:
  - nfs
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-nfs-brokers
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - deploy-cf
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      TEST_DOCKER_PORA: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: cats-nfs
  serial_groups:
  - nfs
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-nfs-brokers
      trigger: true
    - get: persi-ci
    - get: gorgophone-env-director-state
    - get: cf-acceptance-tests
  - task: run-cats
    file: persi-ci/scripts/ci/run_cats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      BBL_IAAS: gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_USERNAME: admin
      SERVICE_NAME: nfs
      PLAN_NAME: Existing
      CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'

- name: background-load-test
  serial_groups:
  - nfs
  plan:
  - aggregate:
    - get: nightly
      trigger: true
    - get: persi-ci
    - get: persi-acceptance-tests
    - get: gorgophone-env-director-state
  - task: run-test
    file: persi-ci/scripts/ci/run_background_load_test.build.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      CF_USERNAME: admin
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      APPS_DOMAIN: gorgophone.cf-app.com
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      BIND_CONFIG: '{"uid":"1000","gid":"1000"}'

#### END NFS #########################################################################################################

#### Isilon related jobs #############################################################################################
- name: create-isilon-volume
  serial_groups:
  - isilon
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-cf
      trigger: true
    - get: persi-ci
    - get: deployments-persi
    - get: gorgophone-env-director-state
  - task: create-share
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: gcp
      BBL_STATE_DIR: bbl-state-gcp
    file: deployments-persi/persi-ci/deployments/isilon-volume/create-share.build.yml

- name: pats-isilon
  serial_groups:
  - nfs
  - isilon
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - create-isilon-volume
      - deploy-nfs-brokers
      trigger: true
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
      CREATE_CONFIG: '{"share":"isilon.persi.cf-app.com/ifs/persi-pats"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true
#### END Isilon ######################################################################################################


#### EFS related jobs ################################################################################################
- name: efsdriver-unit
  public: true
  plan:
  - aggregate:
    - get: efs-volume-release-concourse-tasks
      params:
        submodules: none
    - get: efs-volume-release
      trigger: true
  - task: build
    file: efs-volume-release-concourse-tasks/scripts/ci/run_driver_unit.build.yml
- name: efsbroker-unit
  public: true
  plan:
  - aggregate:
    - get: efs-volume-release-concourse-tasks
      params:
        submodules: none
    - get: efs-volume-release
      trigger: true
  - task: build
    file: efs-volume-release-concourse-tasks/scripts/ci/run_broker_unit.build.yml

- name: efsdriver-certification
  plan:
  - aggregate:
    - get: efs-volume-release-concourse-tasks
      params:
        submodules: none
      tags: ["aws"]
    - get: efs-volume-release
      tags: ["aws"]
      passed:
      - efsdriver-unit
      - efsbroker-unit
      trigger: true
  - task: build
    tags: ["aws"]
    privileged: true
    file: efs-volume-release-concourse-tasks/scripts/ci/run_driver_cert.build.yml

- name: create-efs-volume-release
  plan:
  - aggregate:
    - get: efs-volume-release
      passed:
      - efsdriver-certification
      trigger: true
    - get: efs-volume-version
      resource: efsvolume-version
      params:
        pre: rc
    - get: persi-ci
  - put: efs-volume-version
    resource: efsvolume-version
    params:
      file: efs-volume-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: efs-volume-release
      release-version: efs-volume-version
    params:
      RELEASE_NAME: efs-volume
  - put: efs-volume-release-tarball
    params:
      file: release-tarball/efs-volume-*.tgz

#### END EFS ##########################################################################################################


#### CF related jobs ##################################################################################################
- name: volman-unit
  public: true
  plan:
  - aggregate:
    - get: diego-release
      passed:
      - cf-deployment-nightly
      trigger: true
    - get: persi-ci
  - task: run-unit
    file: persi-ci/scripts/ci/run_volman_unit.build.yml

- name: volman-unit-windows
  public: true
  plan:
  - aggregate:
    - get: diego-release
      passed:
      - cf-deployment-nightly
      trigger: true
    - get: persi-ci
  - task: run-unit-windows
    file: persi-ci/scripts/ci/run_volman_unit_windows.build.yml

- name: volman-inigo
  plan:
  - aggregate:
    - get: diego-release
      passed:
      - cf-deployment-nightly
      trigger: true
    - get: garden-runc-release-tarball
    - get: garden-runc-release-master
      params: {submodules: none}
    - get: routing-release
      params: { submodules: none }
    - get: routing-release-tarball
    - get: diego-ci
    - get: persi-ci
  - task: garden-runc-release
    file: diego-ci/concourse/checkout_garden.build.yml
  - task: routing-release
    file: diego-ci/concourse/checkout_routing.build.yml
    input_mapping:
      routing-release-master: routing-release
  - task: build
    privileged: true
    file: persi-ci/scripts/ci/run_volman_inigo.build.yml
    params:
      DEFAULT_EVENTUALLY_TIMEOUT: 5m
      GINKGO_PARALLEL: false

- name: create-diego-release
  plan:
  - aggregate:
    - get: diego-release
      trigger: true
      passed:
      - volman-unit
      - volman-unit-windows
      - volman-inigo
    - get: persi-ci
    - get: version
      resource: diego-version
      params:
        pre: dev
  - put: version
    resource: diego-version
    params:
      file: version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: diego-release
      release-version: version
    params:
      RELEASE_NAME: diego
  - put: diego-dev-release-tarball
    params:
      file: release-tarball/diego-*.tgz

#### END CF ###########################################################################################################

#### START ECS related jobs ###########################################################################################
- name: create-ecs-release
  plan:
  - aggregate:
    - get: ecs-release
      trigger: true
    - get: ecs-version
      resource: ecs-version
      params:
        pre: rc
    - get: persi-ci
  - put: ecs-version
    resource: ecs-version
    params:
      file: ecs-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: ecs-release
      release-version: ecs-version
    params:
      RELEASE_NAME: ecs-release
  - put: ecs-release-tarball
    params:
      file: release-tarball/ecs-release-*.tgz

- name: ecs-broker-unit
  public: true
  plan:
  - aggregate:
    - get: persi-ci
    - get: ecs-cf-service-broker
      trigger: true
  - task: ecs-broker-unit
    file: persi-ci/scripts/ci/ecs_broker_unit.build.yml

- name: deploy-ecs-cluster
  serial_groups:
  - ecs
  plan:
  - aggregate:
    - get: persi-ci
    - get: gorgophone-env-director-state
    - get: gorgophone-env
    - get: ecs-bosh-release
      passed:
      - create-ecs-release
      trigger: true
      resource: ecs-release
    - get: ecs-release-tarball
      passed:
      - create-ecs-release
  - task: bosh-deploy-ecs
    file: persi-ci/scripts/ci/deploy-ecs.yml
    input_mapping:
      vars-store: gorgophone-env
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      BBL_IAAS: gcp

- name: deploy-ecs-broker
  serial_groups:
  - ecs
  - gorgophone-errands
  plan:
  - aggregate:
    - get: persi-ci
    - get: gorgophone-env-director-state
    - get: ecs-version
      passed:
      - deploy-cf
      trigger: true
    - get: cf-deployment
      passed:
      - deploy-cf
      trigger: true
    - get: cf-deployment-concourse-tasks
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      ERRAND_NAME: broker-deploy

- name: pats-ecs
  serial_groups:
  - ecs
  plan:
  - aggregate:
    - get: ecs-version
      passed:
      - deploy-ecs-broker
      trigger: true
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '{}'
      BROKER_PASSWORD_KEY: ecs-broker-password
      BROKER_URL: http://ecs-v1.gorgophone.cf-app.com
      BROKER_USER: user
      PLAN_NAME: 5gb
      SERVICE_NAME: ecs-file-bucket
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      TEST_MULTI_CELL: true

#### END ECS ##########################################################################################################

#### START CSI related jobs ###########################################################################################
- name: csi-local-controller-plugin-unit
  public: true
  plan:
  - aggregate:
    - get: csi-local-volume-release
      trigger: true
    - get: csi-local-volume-release-concourse-tasks
      params:
        submodules: none
  - task: local-controller-plugin-unit
    file: csi-local-volume-release-concourse-tasks/scripts/ci/local-controller-plugin-unit.build.yml

- name: csi-local-node-plugin-unit
  public: true
  plan:
  - aggregate:
    - get: csi-local-volume-release
      trigger: true
    - get: csi-local-volume-release-concourse-tasks
      params:
        submodules: none
  - task: local-node-plugin-unit
    file: csi-local-volume-release-concourse-tasks/scripts/ci/local-node-plugin-unit.build.yml

- name: csi-local-node-plugin-unit-windows
  public: true
  plan:
  - aggregate:
    - get: csi-local-volume-release
      trigger: true
    - get: csi-local-volume-release-concourse-tasks
      params:
        submodules: none
  - task: local-node-plugin-unit-windows
    file: csi-local-volume-release-concourse-tasks/scripts/ci/local-node-plugin-unit-windows.build.yml

- name: csi-broker-unit
  public: true
  plan:
  - aggregate:
    - get: csi-local-volume-release
      trigger: true
    - get: csi-local-volume-release-concourse-tasks
      params:
        submodules: none
  - task: csi-broker-unit
    file: csi-local-volume-release-concourse-tasks/scripts/ci/csi-broker-unit.build.yml

- name: csi-plugin-certification
  plan:
  - aggregate:
    - get: csi-local-volume-release
      passed:
      - csi-local-controller-plugin-unit
      - csi-local-node-plugin-unit
      trigger: true
    - get: csi-cert
      trigger: true
    - get: csi-local-volume-release-concourse-tasks
      params:
        submodules: none
  - task: csi-plugin-certification
    privileged: true
    file: csi-local-volume-release-concourse-tasks/scripts/ci/csi-plugin-certification.build.yml

- name: certification-test-builds
  plan:
  - aggregate:
    - get: csi-local-volume-release
      passed:
      - csi-plugin-certification
      trigger: true
    - get: csi-cert
      passed:
      - csi-plugin-certification
      trigger: true
  - task: certificate-test-build
    file: csi-cert/scripts/ci/certificate-test-build.build.yml
  - put: csi-binaries
    params:
      file: binaries/csi-cert.test.tgz

- name: certification-test-publish
  plan:
  - aggregate:
    - get: persi-ci
    - get: volume-version
      resource: csi-version
    - get: csi-binaries
    - get: volume-release
      resource: csi-cert
      passed:
      - certification-test-builds

  - task: generate-release
    file: persi-ci/scripts/ci/generate_csi_github_release.build.yml
    params:
      VERSION: csi-version
      RELEASE: csi-cert
      BASE_RELEASE_NAME: csi-cert

  - put: github-release-csi
    params:
      name: generated-release/name
      tag: generated-release/version
      globs:
      - csi-binaries/*.tgz

  - put: csi-version
    params:
      bump: minor

- name: create-csi-plugins-release
  plan:
  - aggregate:
    - get: csi-plugins-release
#      passed:
#      - TODO: add unit and certification test
      trigger: true
    - get: csi-plugins-version
      resource: csi-plugins-version
      params:
        pre: rc
    - get: persi-ci
  - put: csi-plugins-version
    resource: csi-plugins-version
    params:
      file: csi-plugins-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: csi-plugins-release
      release-version: csi-plugins-version
    params:
      RELEASE_NAME: csi-plugins
  - put: csi-plugins-release-tarball
    params:
      file: release-tarball/csi-plugins-*.tgz

- name: mapfs-unit
  public: true
  plan:
  - get: mapfs-release
    trigger: true
  - task: run-unit
    file: mapfs-release/scripts/ci/run_tests.build.yml

- name: create-mapfs-release
  plan:
  - aggregate:
    - get: mapfs-release
      passed:
      - mapfs-unit
      trigger: true
    - get: mapfs-version
      resource: mapfs-version
      params:
        pre: rc
    - get: persi-ci
  - put: mapfs-version
    resource: mapfs-version
    params:
      file: mapfs-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: mapfs-release
      release-version: mapfs-version
    params:
      RELEASE_NAME: mapfs
  - put: mapfs-release-tarball
    params:
      file: release-tarball/mapfs-*.tgz

- name: create-csi-local-volume-release
  plan:
  - aggregate:
    - get: csi-local-volume-release
      passed:
      - csi-plugin-certification
      - csi-broker-unit
      trigger: true
    - get: csi-local-version
      resource: csi-local-volume-version
      params:
        pre: rc
    - get: persi-ci
  - put: csi-local-version
    resource: csi-local-volume-version
    params:
      file: csi-local-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: csi-local-volume-release
      release-version: csi-local-version
    params:
      RELEASE_NAME: csi-local-volume
  - put: csi-local-volume-release-tarball
    params:
      file: release-tarball/csi-local-volume-*.tgz

- name: pats-csi-local
  serial_groups:
  - csi-local
  plan:
  - aggregate:
    - get: csi-local-volume-release
      passed:
      - deploy-cf
      trigger: true
    - get: diego-dev-release-tarball
      passed:
      - deploy-cf
      trigger: true
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '{"mount":"/var/vcap/store"}'
      BROKER_PASSWORD_KEY: csi-localbroker-password
      BROKER_URL: http://csi-localbroker.gorgophone.cf-app.com
      BROKER_USER: csi-localbroker
      CREATE_CONFIG: '{"name":"csi-local-storage","volume_capabilities":[{"mount":{}}]}'
      PLAN_NAME: free
      SERVICE_NAME: csilocalfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state

- name: pats-csi-nfs
  serial_groups:
  - csi-nfs
  plan:
  - aggregate:
    - get: csi-plugins-release
      passed:
      - deploy-cf
      trigger: true
    - get: diego-dev-release-tarball
      passed:
      - deploy-cf
      trigger: true
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      #TODO: add uid/gid bind config and use /export/users endpoint
      BIND_CONFIG: '{}'
      BROKER_PASSWORD_KEY: csi-nfsbroker-password
      BROKER_URL: http://csi-nfsbroker.gorgophone.cf-app.com
      BROKER_USER: csi-nfsbroker
      CREATE_CONFIG: '{"name":"csi-nfs-storage","volume_capabilities":[{"mount":{}}],"parameters":{"server":"nfstestserver.service.cf.internal","share":"/export/users2000"}}'
      PLAN_NAME: free
      SERVICE_NAME: csi-nfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      TEST_MULTI_CELL: true

#### END CSI related jobs ############################################################################################

#### START SMB related jobs ###########################################################################################
- name: smbdriver-unit
  public: true
  plan:
  - aggregate:
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
    - get: smb-volume-release
      trigger: true
  - task: smbdriver-unit
    file: smb-volume-release-concourse-tasks/scripts/ci/run-submodule-unit.build.yml
    params:
      SUBMODULE_NAME: smbdriver

- name: smbdriver-unit-windows
  public: true
  plan:
  - aggregate:
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
    - get: smb-volume-release
      trigger: true
  - task: smbdriver-unit
    file: smb-volume-release-concourse-tasks/scripts/ci/smbdriver-unit-windows.build.yml

- name: volumedriver-units-windows
  public: true
  plan:
  - aggregate:
    - get: smb-volume-release
      trigger: true
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
  - task: build
    file: smb-volume-release-concourse-tasks/scripts/ci/run_driver_unit_windows.build.yml

- name: smb-azurefilebroker-unit
  public: true
  plan:
  - aggregate:
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
    - get: smb-volume-release
      trigger: true
  - task: azurefilebroker-unit
    file: smb-volume-release-concourse-tasks/scripts/ci/run-submodule-unit.build.yml
    params:
      SUBMODULE_NAME: azurefilebroker

- name: smbbroker-unit
  public: true
  plan:
  - aggregate:
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
    - get: smb-volume-release
      trigger: true
  - task: smbbroker-unit
    file: smb-volume-release-concourse-tasks/scripts/ci/run-submodule-unit.build.yml
    params:
      SUBMODULE_NAME: smbbroker

- name: smb-existingvolumebroker-unit
  public: true
  plan:
  - aggregate:
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
    - get: smb-volume-release
      trigger: true
  - task: existingvolumebroker-unit
    file: smb-volume-release-concourse-tasks/scripts/ci/run-submodule-unit.build.yml
    params:
      SUBMODULE_NAME: existingvolumebroker

- name: smb-volume-mount-options-unit
  public: true
  plan:
  - aggregate:
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
    - get: smb-volume-release
      trigger: true
  - task: volume-mount-options-unit
    file: smb-volume-release-concourse-tasks/scripts/ci/run-submodule-unit.build.yml
    params:
      SUBMODULE_NAME: volume-mount-options

- name: create-smb-volume-release
  plan:
  - aggregate:
    - get: smb-volume-release
      passed:
      - smb-azurefilebroker-unit
      - smbbroker-unit
      - smb-existingvolumebroker-unit
      - smb-volume-mount-options-unit
      - smbdriver-unit
      - smbdriver-unit-windows
      - volumedriver-units-windows
      trigger: true
    - get: smb-volume-version
      resource: smb-volume-version
      params:
        pre: rc
    - get: persi-ci
  - put: smb-volume-version
    resource: smb-volume-version
    params:
      file: smb-volume-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: smb-volume-release
      release-version: smb-volume-version
    params:
      RELEASE_NAME: smb-volume
  - put: smb-volume-release-tarball
    params:
      file: release-tarball/smb-volume-*.tgz

- name: smbdriver-certification
  plan:
  - aggregate:
    - get: persi-ci
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
    - get: smb-volume-release
      passed:
      - deploy-cf
      trigger: true
    - get: gorgophone-env-director-state
  - task: driver-cert
    privileged: true
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      SMB_REMOTE_PATH: {{smb_cert_remote_path}}
      SMB_USERNAME: {{smb_cert_username}}
      SMB_PASSWORD: {{smb_cert_password}}
      BBL_STATE_DIR: bbl-state-gcp
      BBL_IAAS: gcp
    file: smb-volume-release-concourse-tasks/scripts/ci/run_driver_cert.build.yml

- name: smbdriver-certification-windows
  plan:
  - aggregate:
    - get: persi-ci
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
    - get: smb-volume-release
      passed:
      - deploy-cf
      trigger: true
  - task: driver-cert
    privileged: true
    params:
      smbremotepath: {{smb_cert_remote_path}}
      smbusername: {{smb_cert_username}}
      smbpassword: {{smb_cert_password}}
    file: smb-volume-release-concourse-tasks/scripts/ci/run_driver_cert_windows.build.yml

- name: deploy-smb-broker
  serial_groups:
  - smb
  - gorgophone-errands
  plan:
  - aggregate:
    - get: persi-ci
    - get: gorgophone-env-director-state
    - get: smb-volume-release
      passed:
      - deploy-cf
      trigger: true
    - get: cf-deployment
      passed:
      - deploy-cf
      trigger: true
    - get: cf-deployment-concourse-tasks
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      ERRAND_NAME: smbbrokerpush

- name: pats-smb
  serial_groups:
  - smb
  plan:
  - aggregate:
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
    - get: smb-volume-release
      passed:
      - deploy-smb-broker
      - smbdriver-certification
      trigger: true
    - get: smb-volume-release-tarball
      passed:
      - deploy-cf
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - aggregate:
    - task: generate-bind-create-configs
      file: smb-volume-release-concourse-tasks/scripts/ci/generate_bind_create_config.build.yml
      params:
        SMB_REMOTE_PATH: {{smb_pats_remote_path}}
        SMB_USERNAME: {{smb_pats_username}}
        SMB_PASSWORD: {{smb_pats_password}}
    - task: generate-bind-create-configs-two
      file: smb-volume-release-concourse-tasks/scripts/ci/generate_bind_create_config.build.yml
      output_mapping:
        bind-create-config: lazy-unmount-bind-create-config
      params:
        SMB_REMOTE_PATH: {{smb_pats_remote_path_two}}
        SMB_USERNAME: {{smb_pats_username_two}}
        SMB_PASSWORD: {{smb_pats_password_two}}
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      LAZY_UNMOUNT_REMOTE_SERVER_JOB_NAME: smbtestserver
      LAZY_UNMOUNT_REMOTE_SERVER_PROCESS_NAME: smbd
      LAZY_UNMOUNT_VM_INSTANCE: smbtestservertwo
      DISALLOWED_OVERRIDE_BIND_CONFIG: '{"share":{{smb_pats_remote_path_two}}}'
      PLAN_NAME: Existing
      SERVICE_NAME: smb
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      TEST_LAZY_UNMOUNT: true
      TEST_READ_ONLY: true

- name: pats-smb-windows
  serial_groups:
  - smb
  plan:
  - aggregate:
    - get: smb-volume-release-concourse-tasks
      params:
        submodules: none
    - get: smb-volume-release
      passed:
      - deploy-smb-broker
      - smbdriver-certification-windows
      trigger: true
    - get: smb-volume-release-tarball
      passed:
      - deploy-cf
    - get: persi-acceptance-tests
    - get: persi-ci
    - get: gorgophone-env-director-state
  - task: generate-bind-create-configs
    file: smb-volume-release-concourse-tasks/scripts/ci/generate_bind_create_config.build.yml
    params:
      SMB_REMOTE_PATH: {{smb_pats_remote_path_windows}}
      SMB_USERNAME: {{smb_pats_username_windows}}
      SMB_PASSWORD: {{smb_pats_password_windows}}
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: smb
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      TEST_WINDOWS_CELL: true

- name: shipit-smb
  serial_groups:
  - smb-version
  plan:
  - aggregate:
    - get: persi-ci
    - get: release-tarball
      resource: smb-volume-release-tarball
      passed:
      - pats-smb
    - get: release
      resource: smb-volume-release
      passed:
      - pats-smb
    - get: version
      resource: smb-volume-version
      params:
        bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      BASE_RELEASE_NAME: smb-volume
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{smbvolume-uploader_aws_ID}}
      S3_ACCESS_KEY: {{smbvolume-uploader_aws_secret}}
  - put: smb-volume-version
    resource: smb-volume-version
    params:
      file: version/number
  - task: generate-github-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      BASE_RELEASE_NAME: smb-volume
  - put: smb-volume-release
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: github-release-smb
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs: []
  - put: smb-volume-version
    params:
      bump: patch
- name: manual-bump-smb-patch
  serial_groups:
  - smb-version
  plan:
  - get: smb-volume-version
    resource: smb-volume-version
    params:
      bump: final
  - put: smb-volume-version
    params:
      bump: patch
- name: manual-bump-smb-minor
  serial_groups:
  - smb-version
  plan:
  - get: smb-volume-version
    resource: smb-volume-version
    params:
      bump: final
  - put: smb-volume-version
    params:
      bump: minor
- name: manual-bump-smb-major
  serial_groups:
  - smb-version
  plan:
  - get: smb-volume-version
    resource: smb-volume-version
    params:
      bump: final
  - put: smb-volume-version
    params:
      bump: major

#### END SMB related jobs ###########################################################################################

#### START cf-deployment related jobs ################################################################################

- name: cf-deployment-nightly
  public: true
  plan:
  - aggregate:
    - get: nightly
      trigger: true
    - get: cf-deployment
    - get: diego-release

- name: bbl-up-gorgophone
  serial_groups:
  - local
  - nfs
  - ecs
  - csi-local
  - csi-nfs
  - smb
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: gorgophone-env-director-state
    - get: cf-deployment
      passed:
      - cf-deployment-nightly
      trigger: true
    - get: persi-ci
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_CONFIG_DIR: operations/bosh-gcp
      BBL_ENV_NAME: bbl-env-victoria-2018-04-23t19-08z
      BBL_GCP_REGION: us-west1
      BBL_GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
      BBL_IAAS: gcp
      BBL_LB_CERT: {{gorgophone_lbs_ssl_cert}}
      BBL_LB_KEY: {{gorgophone_lbs_ssl_signing_key}}
      BBL_STATE_DIR: bbl-state-gcp
      GIT_COMMIT_EMAIL: cf-diego-persistence@pivotal.io
      LB_DOMAIN: gorgophone.cf-app.com
    input_mapping:
      bbl-state: gorgophone-env-director-state
      bbl-config: persi-ci
    ensure:
      put: gorgophone-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: deploy-cf
  serial_groups:
  - local
  - nfs
  - ecs
  - csi-local
  - csi-nfs
  - smb
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: gorgophone-env-director-state
    - get: cf-deployment
      passed:
      - bbl-up-gorgophone
      trigger: true
    - get: persi-ci
    - get: shrinkcf
    - get: diego-dev-release-tarball
      passed: [ create-diego-release ]
      trigger: true
    - get: diego-version
      passed: [ create-diego-release ]
    - get: nfs-volume-release
      passed: [ create-nfs-volume-release ]
    - get: nfs-volume-release-tarball
      passed: [ create-nfs-volume-release ]
      trigger: true
    - get: nfsvolume-version
      passed: [ create-nfs-volume-release ]
    - get: local-volume-release
      passed: [ create-local-volume-release ]
    - get: local-volume-release-tarball
      passed: [ create-local-volume-release ]
      trigger: true
    - get: localvolume-version
      passed: [ create-local-volume-release ]
    - get: csi-local-volume-release
      passed: [ create-csi-local-volume-release ]
    - get: csi-local-volume-release-tarball
      passed: [ create-csi-local-volume-release ]
      trigger: true
    - get: csi-local-volume-version
      passed: [ create-csi-local-volume-release ]
    - get: csi-plugins-release
      passed: [ create-csi-plugins-release ]
    - get: csi-plugins-release-tarball
      passed: [ create-csi-plugins-release ]
      trigger: true
    - get: csi-plugins-version
      passed: [ create-csi-plugins-release ]
    - get: mapfs-release
      passed: [ create-mapfs-release ]
    - get: mapfs-release-tarball
      passed: [ create-mapfs-release ]
      trigger: true
    - get: mapfs-version
      passed: [ create-mapfs-release ]
    - get: ecs-release-tarball
      passed: [ create-ecs-release ]
    - get: ecs-version
      passed: [ create-ecs-release ]
    - get: ecs-release
      passed: [ create-ecs-release ]
    - get: smb-volume-release
      passed: [ create-smb-volume-release ]
    - get: smb-volume-release-tarball
      passed: [ create-smb-volume-release ]
      trigger: true
    - get: smb-volume-version
      passed: [ create-smb-volume-release ]
  - task: collect-tarballs
    file: persi-ci/scripts/ci/collect-tarballs.build.yml
    params:
      COLLECT_EFS_TARBALL: false
    input_mapping:
      persi-ci: persi-ci
      diego-tarball: diego-dev-release-tarball
      nfs-tarball: nfs-volume-release-tarball
      efs-tarball: nfsvolume-version #dummy
      csi-local-tarball: csi-local-volume-release-tarball
      csi-plugins-tarball: csi-plugins-release-tarball
      mapfs-tarball: mapfs-release-tarball
      ecs-tarball: ecs-release-tarball
      local-tarball: local-volume-release-tarball
      smb-tarball: smb-volume-release-tarball
      diego-version: diego-version
      nfs-version: nfsvolume-version
      efs-version: nfsvolume-version #dummy
      csi-local-version: csi-local-volume-version
      csi-plugins-version: csi-plugins-version
      mapfs-version: mapfs-version
      ecs-version: ecs-version
      local-version: localvolume-version
      smb-version: smb-volume-version
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/scale-up-routers-and-cells.yml
                      operations/enable-csi-local-plugin.yml
                      operations/enable-nfs-test-server-two.yml
                      operations/enable-smb-test-server-two.yml"
  - task: collect-local-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: local-volume-release
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/enable-local-volume-service.yml
                      operations/enable-local-volume-service-windows-cells.yml"
  - task: collect-ecs-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: ecs-release
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/deploy-ecs-broker-errand.yml"
  - task: collect-smb-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: smb-volume-release
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/enable-smb-volume-service-windows.yml"
  - task: collect-csi-plugins-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: csi-plugins-release
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/add-csi-nfs-plugin.yml"
  - task: collect-tarball-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/update-releases.yml"
  - task: add-tarballs
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "."
      NEW_OPS_FILES: "diego.tgz
                      nfs.tgz
                      local.tgz
                      csi-local.tgz
                      csi-plugins.tgz
                      mapfs.tgz
                      ecs.tgz
                      smb.tgz"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: gcp
      BBL_STATE_DIR: bbl-state-gcp
      GENERATE_DATADOG_VARS: true
      GENERATE_ECS_VARS: true
      GENERATE_NFS_VARS: true
      GENERATE_SMB_VARS: true
      ECS_PASSWORD: {{ecs-password}}
      ECS_USERNAME: {{ecs-user}}
      ECS_IP: 35.233.221.61
      ECS_AWS_ID: {{ecs-blob-user}}
      ECS_AWS_KEY: {{ecs-blob-key}}
      S3_BLOBSTORE_ID: {{s3-blobstore-user}}
      S3_BLOBSTORE_KEY: {{s3-blobstore-key}}
      S3_BLOBSTORE_REGION: {{s3-blobstore-region}}
      DATADOG_API_KEY: {{gorgophone-datadog-api-key}}
      DATADOG_METRIC_PREFIX: gorgophone
      SMB_USERNAME: {{smb_pats_username_two}}
      SMB_PASSWORD: {{smb_pats_password_two}}
  - task: shrink-cf
    file: shrinkcf/tasks/shrink-cf/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
      ops-files: collected-ops-files
      vars-files: generated-vars
      config-dir: persi-ci
    params:
      BBL_STATE_DIR: bbl-state-gcp
      CONFIG_FILE: config-dir/config/shrink-gorgophone-config.json
      SYSTEM_DOMAIN: gorgophone.cf-app.com # not used, this is required by the task
      VARS_FILES: "nfs-vars.yml ecs-vars.yml datadog-vars.yml smb-vars.yml"
      OPS_FILES: "operations/use-compiled-releases.yml
                  operations/scale-to-one-az.yml
                  operations/scale-up-routers-and-cells.yml
                  operations/windows2016-cell.yml
                  operations/experimental/use-compiled-releases-windows.yml
                  operations/enable-nfs-volume-service.yml
                  operations/enable-nfs-test-server-two.yml
                  operations/enable-local-volume-service.yml
                  operations/enable-local-volume-service-windows-cells.yml
                  operations/test/enable-nfs-test-server.yml
                  operations/test/enable-smb-test-server.yml
                  operations/enable-csi-local-plugin.yml
                  operations/add-csi-nfs-plugin.yml
                  operations/deploy-ecs-broker-errand.yml
                  operations/backup-and-restore/enable-backup-restore.yml
                  operations/backup-and-restore/enable-backup-restore-nfs-broker.yml
                  operations/experimental/enable-smb-volume-service.yml
                  operations/enable-smb-volume-service-windows.yml
                  operations/enable-smb-test-server-two.yml
                  operations/update-releases.yml"
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
      cf-deployment: scf-deployment
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      BBL_STATE_DIR: bbl-state-gcp
      SYSTEM_DOMAIN: gorgophone.cf-app.com # not used, this is required by the task
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      ERRAND_NAME: smoke_tests
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-gcp
      CLEAN_ALL: false

- name: drats-nfs-smb
  serial: true
  serial_groups:
  - gorgophone
  - local
  - nfs
  - ecs
  - csi-local
  - csi-nfs
  - smb
  plan:
  - aggregate:
    - get: diego-dev-release-tarball
      passed:
      - deploy-cf
      trigger: true
    - get: nfs-volume-release
      passed:
      - deploy-nfs-brokers
      trigger: true
    - get: smb-volume-release
      passed:
      - deploy-smb-broker
      trigger: true
    - get: bbr-binary-release
    - get: disaster-recovery-acceptance-tests
    - get: gorgophone-env-director-state
    - get: persi-ci
  - task: update-integration-config
    file: disaster-recovery-acceptance-tests/ci/credhub-compatible/update-integration-config/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
      integration-configs: persi-ci
    params:
      BBL_STATE_DIR: bbl-state-gcp
      INTEGRATION_CONFIG_FILE_PATH: config/drats.json
      SYSTEM_DOMAIN: gorgophone.cf-app.com
  - task: acceptance-tests
    file: disaster-recovery-acceptance-tests/ci/drats-with-integration-config/task.yml
    privileged: true
    input_mapping:
      drats-integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: config/drats.json

#### END cf-deployment related jobs ##################################################################################

#### START heleus related jobs #######################################################################################

- name: acquire-lock-heleus
  build_logs_to_retain: 100
  serial: true
  plan:
  - aggregate:
    - get: bosh-bootloader
    - get: cf-deployment-concourse-tasks
    - get: nfs-volume-release
      passed:
      - create-nfs-volume-release
    - get: nfs-volume-release-tarball
      passed:
      - create-nfs-volume-release
      trigger: true
    - get: nfsvolume-version
      passed:
      - create-nfs-volume-release
    - get: mapfs-release
      passed:
      - create-mapfs-release
    - get: mapfs-release-tarball
      passed:
      - create-mapfs-release
      trigger: true
    - get: mapfs-version
      passed:
      - create-mapfs-release
    - get: efs-volume-release
      passed:
      - create-efs-volume-release
    - get: efs-volume-release-tarball
      passed:
      - create-efs-volume-release
      trigger: true
    - get: efsvolume-version
      passed:
      - create-efs-volume-release
    - get: diego-dev-release-tarball
      passed:
      - create-diego-release
      trigger: true
    - get: diego-version
      passed:
      - create-diego-release
  - put: env-creation-gate-lock
    params:
      claim: heleus
    timeout: 3h

- name: bbl-up-heleus
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: bosh-bootloader
    - get: cf-deployment-concourse-tasks
    - get: env-creation-gate-lock
      passed:
      - acquire-lock-heleus
      trigger: true
    - get: gorgophone-env-director-state
    - get: nfs-volume-release
      passed:
      - acquire-lock-heleus
    - get: nfs-volume-release-tarball
      passed:
      - acquire-lock-heleus
    - get: nfsvolume-version
      passed:
      - acquire-lock-heleus
    - get: mapfs-release
      passed:
      - acquire-lock-heleus
    - get: mapfs-release-tarball
      passed:
      - acquire-lock-heleus
    - get: mapfs-version
      passed:
      - acquire-lock-heleus
    - get: efs-volume-release
      passed:
      - acquire-lock-heleus
    - get: efs-volume-release-tarball
      passed:
      - acquire-lock-heleus
    - get: efsvolume-version
      passed:
      - acquire-lock-heleus
    - get: diego-dev-release-tarball
      passed:
      - acquire-lock-heleus
    - get: diego-version
      passed:
      - acquire-lock-heleus
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_ACCESS_KEY_ID: {{gorgophone_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{gorgophone_aws_secret_access_key}}
      BBL_AWS_REGION: us-west-2
      BBL_CONFIG_DIR: plan-patches/s3-blobstore-aws
      BBL_STATE_DIR: bbl-state-aws-heleus
      BBL_LB_CERT: {{heleus_lbs_ssl_cert}}
      BBL_LB_KEY: {{heleus_lbs_ssl_private_key}}
      LB_DOMAIN: heleus.persi.cf-app.com
      BBL_ENV_NAME: heleus
      GIT_COMMIT_EMAIL: cf-diego-persistence@pivotal.io
    input_mapping:
      bbl-state: gorgophone-env-director-state
      bbl-config: bosh-bootloader
    ensure:
      put: gorgophone-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: deploy-cf-heleus
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: env-creation-gate-lock
      passed:
      - bbl-up-heleus
    - get: gorgophone-env-director-state
      passed:
      - bbl-up-heleus
      trigger: true
    - get: persi-ci
    - get: shrinkcf
    - get: nfs-volume-release
      passed:
      - bbl-up-heleus
    - get: nfs-volume-release-tarball
      passed:
      - bbl-up-heleus
    - get: nfsvolume-version
      passed:
      - bbl-up-heleus
    - get: mapfs-release
      passed:
      - bbl-up-heleus
    - get: mapfs-release-tarball
      passed:
      - bbl-up-heleus
    - get: mapfs-version
      passed:
      - bbl-up-heleus
    - get: efs-volume-release
      passed:
      - bbl-up-heleus
    - get: efs-volume-release-tarball
      passed:
      - bbl-up-heleus
    - get: efsvolume-version
      passed:
      - bbl-up-heleus
    - get: diego-dev-release-tarball
      passed:
      - bbl-up-heleus
    - get: diego-version
      passed:
      - bbl-up-heleus
  - task: collect-tarballs
    file: persi-ci/scripts/ci/collect-tarballs.build.yml
    params:
      COLLECT_DIEGO_TARBALL: true
      COLLECT_NFS_TARBALL: true
      COLLECT_EFS_TARBALL: true
      COLLECT_CSI_LOCAL_TARBALL: false
      COLLECT_CSI_PLUGINS_TARBALL: false
      COLLECT_ECS_TARBALL: false
      COLLECT_LOCAL_TARBALL: false
      COLLECT_SMB_TARBALL: false
      COLLECT_MAPFS_TARBALL: true
    #this task requires a lot of inputs that we don't need for this instance--we're feeding in
    #efsvolume-version as a dummy input because it is tiny and easy to copy
    input_mapping:
      persi-ci: persi-ci
      diego-tarball: diego-dev-release-tarball
      nfs-tarball: nfs-volume-release-tarball
      efs-tarball: efs-volume-release-tarball
      csi-local-tarball: efsvolume-version #dummy
      csi-plugins-tarball: efsvolume-version #dummy
      mapfs-tarball: mapfs-release-tarball
      ecs-tarball: efsvolume-version #dummy
      local-tarball: efsvolume-version #dummy
      smb-tarball: efsvolume-version #dummy
      diego-version: diego-version
      nfs-version: nfsvolume-version
      efs-version: efsvolume-version
      csi-local-version: efsvolume-version #dummy
      csi-plugins-version: efsvolume-version #dummy
      mapfs-version: mapfs-version #dummy
      ecs-version: efsvolume-version #dummy
      local-version: efsvolume-version #dummy
      smb-version: efsvolume-version #dummy
  - task: collect-efs-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment
      new-ops-files: efs-volume-release
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/deploy-efs-broker-and-install-driver.yml"
  - task: collect-tarball-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/update-releases.yml"
  - task: add-tarballs
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "."
      NEW_OPS_FILES: "diego.tgz nfs.tgz mapfs.tgz efs.tgz"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-heleus
      GENERATE_EFS_VARS: true
      GENERATE_NFS_VARS: true
      GENERATE_S3_BLOBSTORE_VARS: true
      AWS_ACCESS_KEY_ID: {{efs-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{efs-secret-access-key}}
      LDAP_HOST: "nfstestldapserver.service.cf.internal"
      LDAP_SVC_USER: {{ldap-svc-user}}
      LDAP_SVC_PASS: {{ldap-svc-pass}}
      LDAP_PORT: 636
      LDAP_PROTO: tcp
      LDAP_USER_FQDN: {{ldap-user-fqdn}}
  - task: shrink-cf
    file: shrinkcf/tasks/shrink-cf/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
      ops-files: collected-ops-files
      vars-files: generated-vars
      config-dir: persi-ci
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
      CONFIG_FILE: config-dir/config/shrink-heleus-config.json
      SYSTEM_DOMAIN: heleus.persi.cf-app.com
      VARS_FILES: "efs-vars.yml nfs-vars.yml s3-blobstore-vars.yml"
      OPS_FILES: "operations/scale-to-one-az.yml \
                  operations/use-compiled-releases.yml \
                  operations/use-external-blobstore.yml \
                  operations/use-s3-blobstore.yml \
                  operations/enable-nfs-volume-service.yml \
                  operations/enable-nfs-ldap.yml \
                  operations/test/enable-nfs-test-server.yml \
                  operations/test/enable-nfs-test-ldapserver.yml \
                  operations/deploy-efs-broker-and-install-driver.yml \
                  operations/update-releases.yml"
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
      cf-deployment: scf-deployment
      ops-files: collected-ops-files
      vars-files: scf-deployment
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
      SYSTEM_DOMAIN: heleus.persi.cf-app.com
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
      ERRAND_NAME: smoke_tests
      INSTANCE: brain/0

- name: deploy-nfs-broker-heleus
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: env-creation-gate-lock
      passed:
      - deploy-cf-heleus
    - get: gorgophone-env-director-state
      passed:
      - deploy-cf-heleus
      trigger: true
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
      ERRAND_NAME: nfsbrokerpush
      INSTANCE: brain/0

- name: pats-nfs-ldap-heleus
  plan:
  - aggregate:
    - get: env-creation-gate-lock
      passed:
      - deploy-nfs-broker-heleus
    - get: gorgophone-env-director-state
      passed:
      - deploy-nfs-broker-heleus
      trigger: true
    - get: persi-acceptance-tests
    - get: persi-ci
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-heleus
      APPS_DOMAIN: heleus.persi.cf-app.com
      CF_API_ENDPOINT: api.heleus.persi.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '{"username":"user1000","password":"secret"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      DISALLOWED_LDAP_BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-heleus
      TEST_DOCKER_PORA: true

- name: pats-nfs-ldap-legacy-heleus
  plan:
  - aggregate:
    - get: env-creation-gate-lock
      passed:
      - deploy-nfs-broker-heleus
    - get: gorgophone-env-director-state
      passed:
      - deploy-nfs-broker-heleus
      trigger: true
    - get: persi-acceptance-tests
    - get: persi-ci
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-heleus
      APPS_DOMAIN: heleus.persi.cf-app.com
      CF_API_ENDPOINT: api.heleus.persi.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '{"username":"user1000","password":"secret"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      DISALLOWED_LDAP_BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs-legacy
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-heleus

- name: pats-efs-heleus
  plan:
  - aggregate:
    - get: env-creation-gate-lock
      passed:
      - deploy-cf-heleus
    - get: gorgophone-env-director-state
      passed:
      - deploy-cf-heleus
      trigger: true
    - get: persi-acceptance-tests
    - get: persi-ci
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-heleus
      APPS_DOMAIN: heleus.persi.cf-app.com
      CF_API_ENDPOINT: api.heleus.persi.cf-app.com
      CF_USERNAME: admin
      DEFAULT_TIMEOUT: 300
      BROKER_PASSWORD_KEY: efs-broker-password
      BROKER_URL: http://efs-broker.heleus.persi.cf-app.com
      BROKER_USER: admin
      PLAN_NAME: generalPurpose
      SERVICE_NAME: efs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-heleus
      TEST_MULTI_CELL: true

- name: delete-cf-heleus-credhub
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: env-creation-gate-lock
      passed:
      - pats-nfs-ldap-heleus
      - pats-nfs-ldap-legacy-heleus
      - pats-efs-heleus
    - get: gorgophone-env-director-state
      passed:
      - pats-nfs-ldap-heleus
      - pats-nfs-ldap-legacy-heleus
      - pats-efs-heleus
      trigger: true
  - task: delete-cf
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
    input_mapping:
      bbl-state: gorgophone-env-director-state

- name: deploy-cf-heleus-sql
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: env-creation-gate-lock
      passed:
      - delete-cf-heleus-credhub
    - get: gorgophone-env-director-state
      passed:
      - delete-cf-heleus-credhub
      trigger: true
    - get: persi-ci
    - get: shrinkcf
    - get: nfs-volume-release
      passed:
      - deploy-cf-heleus
    - get: nfs-volume-release-tarball
      passed:
      - deploy-cf-heleus
    - get: nfsvolume-version
      passed:
      - deploy-cf-heleus
    - get: mapfs-release
      passed:
      - deploy-cf-heleus
    - get: mapfs-release-tarball
      passed:
      - deploy-cf-heleus
    - get: mapfs-version
      passed:
      - deploy-cf-heleus
    - get: efs-volume-release
      passed:
      - deploy-cf-heleus
    - get: efs-volume-release-tarball
      passed:
      - deploy-cf-heleus
    - get: efsvolume-version
      passed:
      - deploy-cf-heleus
    - get: diego-dev-release-tarball
      passed:
      - deploy-cf-heleus
    - get: diego-version
      passed:
      - deploy-cf-heleus
  - task: collect-tarballs
    file: persi-ci/scripts/ci/collect-tarballs.build.yml
    params:
      COLLECT_DIEGO_TARBALL: true
      COLLECT_NFS_TARBALL: true
      COLLECT_EFS_TARBALL: true
      COLLECT_CSI_LOCAL_TARBALL: false
      COLLECT_CSI_PLUGINS_TARBALL: false
      COLLECT_ECS_TARBALL: false
      COLLECT_LOCAL_TARBALL: false
      COLLECT_SMB_TARBALL: false
      COLLECT_MAPFS_TARBALL: true
    #this task requires a lot of inputs that we don't need for this instance--we're feeding in
    #efsvolume-version as a dummy input because it is tiny and easy to copy
    input_mapping:
      persi-ci: persi-ci
      diego-tarball: diego-dev-release-tarball
      nfs-tarball: nfs-volume-release-tarball
      efs-tarball: efs-volume-release-tarball
      csi-local-tarball: efsvolume-version #dummy
      csi-plugins-tarball: efsvolume-version #dummy
      mapfs-tarball: mapfs-release-tarball
      ecs-tarball: efsvolume-version #dummy
      local-tarball: efsvolume-version #dummy
      smb-tarball: efsvolume-version #dummy
      diego-version: diego-version
      nfs-version: nfsvolume-version
      efs-version: efsvolume-version
      csi-local-version: efsvolume-version #dummy
      csi-plugins-version: efsvolume-version #dummy
      mapfs-version: mapfs-version #dummy
      ecs-version: efsvolume-version #dummy
      local-version: efsvolume-version #dummy
      smb-version: efsvolume-version #dummy
  - task: collect-efs-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment
      new-ops-files: efs-volume-release
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/deploy-efs-broker-and-install-driver.yml"
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/enable-nfs-volume-service-with-sqlstore.yml \
                      operations/enable-nfs-volume-service-migration-test.yml"
  - task: collect-tarball-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/update-releases.yml"
  - task: add-tarballs
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "."
      NEW_OPS_FILES: "diego.tgz nfs.tgz mapfs.tgz efs.tgz"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-heleus
      GENERATE_EFS_VARS: true
      GENERATE_NFS_VARS: true
      GENERATE_S3_BLOBSTORE_VARS: true
      AWS_ACCESS_KEY_ID: {{efs-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{efs-secret-access-key}}
      LDAP_HOST: "nfstestldapserver.service.cf.internal"
      LDAP_SVC_USER: {{ldap-svc-user}}
      LDAP_SVC_PASS: {{ldap-svc-pass}}
      LDAP_PORT: 636
      LDAP_PROTO: tcp
      LDAP_USER_FQDN: {{ldap-user-fqdn}}
  - task: shrink-cf
    file: shrinkcf/tasks/shrink-cf/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
      ops-files: collected-ops-files
      vars-files: generated-vars
      config-dir: persi-ci
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
      CONFIG_FILE: config-dir/config/shrink-heleus-config.json
      SYSTEM_DOMAIN: heleus.persi.cf-app.com
      VARS_FILES: "efs-vars.yml nfs-vars.yml s3-blobstore-vars.yml"
      OPS_FILES: "operations/scale-to-one-az.yml \
                  operations/use-compiled-releases.yml \
                  operations/use-external-blobstore.yml \
                  operations/use-s3-blobstore.yml \
                  operations/enable-nfs-volume-service-with-sqlstore.yml \
                  operations/enable-nfs-volume-service-migration-test.yml \
                  operations/enable-nfs-ldap.yml \
                  operations/test/enable-nfs-test-server.yml \
                  operations/test/enable-nfs-test-ldapserver.yml \
                  operations/deploy-efs-broker-and-install-driver.yml \
                  operations/update-releases.yml"
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
      cf-deployment: scf-deployment
      ops-files: collected-ops-files
      vars-files: scf-deployment
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
      SYSTEM_DOMAIN: heleus.persi.cf-app.com
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
      ERRAND_NAME: smoke_tests
      INSTANCE: brain/0
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
      ERRAND_NAME: nfsbrokerpush
      INSTANCE: brain/0

- name: migrate-nfs-broker-to-credhub-heleus
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: persi-ci
    - get: persi-acceptance-tests
    - get: env-creation-gate-lock
      passed:
      - deploy-cf-heleus-sql
    - get: gorgophone-env-director-state
      passed:
      - deploy-cf-heleus-sql
      trigger: true
  - task: test-migration
    file: persi-ci/scripts/ci/test-nfs-broker-migration.build.yml
    input_mapping:
      director-state: gorgophone-env-director-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-heleus
      APPS_DOMAIN: heleus.persi.cf-app.com
      CF_API_ENDPOINT: api.heleus.persi.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '{"username":"user1000","password":"secret"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'

- name: delete-cf-heleus
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: env-creation-gate-lock
      passed:
      - migrate-nfs-broker-to-credhub-heleus
    - get: gorgophone-env-director-state
      passed:
      - migrate-nfs-broker-to-credhub-heleus
      trigger: true
  - task: delete-cf
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
    input_mapping:
      bbl-state: gorgophone-env-director-state
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: gorgophone-env-director-state
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus

- name: bbl-destroy-heleus
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: env-creation-gate-lock
      passed:
      - delete-cf-heleus
    - get: gorgophone-env-director-state
      passed:
      - delete-cf-heleus
      trigger: true
  - task: destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: bbl-state-aws-heleus
      GIT_COMMIT_EMAIL: cf-diego-persistence@pivotal.io
      BBL_AWS_ACCESS_KEY_ID: {{gorgophone_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{gorgophone_aws_secret_access_key}}
    input_mapping:
      bbl-state: gorgophone-env-director-state
    ensure:
      put: gorgophone-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - put: env-creation-gate-lock
    params:
      release: env-creation-gate-lock

#### END heleus related jobs #########################################################################################

###################################### END JOBS SECTION ##############################################################
