groups:
- name: all-jobs
  jobs:
  - acquire-lock-ephemeral-aws-environment
  - bbl-up-long-running-gcp-environment
  - bbl-up-ephemeral-aws-environment
  - build-mapfs-tests-docker-image
  - build-nfs-bosh-release-test-docker-image
  - build-nfs-broker-tests-docker-image
  - build-nfs-driver-integration-tests-docker-image
  - build-nfs-unit-tests-docker-image
  - build-smb-unit-tests-docker-image
  - build-nfs-cats-docker-image
  - cats-nfs-long-running-gcp-environment
  - cats-smb-long-running-gcp-environment
  - cf-deployment-nightly
  - create-mapfs-release
  - create-nfs-volume-release
  - create-smb-volume-release
  - delete-cf-ephemeral-aws-environment-passed-pats
  - delete-cf-ephemeral-aws-environment-passed-migration
  - deploy-cf
  - deploy-cf-ephemeral-aws-environment
  - deploy-cf-ephemeral-aws-environment-sql
  - deploy-nfs-broker-ephemeral-aws-environment
  - deploy-nfs-brokers
  - deploy-smb-broker
  - drats-nfs-smb
  - manual-bump-mapfs-major
  - manual-bump-mapfs-minor
  - manual-bump-mapfs-patch
  - manual-bump-nfs-major
  - manual-bump-nfs-minor
  - manual-bump-nfs-patch
  - manual-bump-smb-major
  - manual-bump-smb-minor
  - manual-bump-smb-patch
  - mapfs-release-job-tests
  - mapfs-unit
  - migrate-nfs-broker-to-credhub-ephemeral-aws-environment
  - nfs-volume-release-job-tests
  - nfsbroker-tests
  - nfsdriver-integration
  - nfsdriver-unit
  - pats-nfs-long-running-gcp-environment
  - pats-nfs-docker-long-running-gcp-environment
  - pats-nfs-ldap-ephemeral-aws-environment
  - pats-nfs-ldap-legacy-ephemeral-aws-environment
  - pats-nfs-legacy-long-running-gcp-environment
  - pats-smb-long-running-gcp-environment
  - shipit-mapfs
  - shipit-nfs
  - shipit-smb
  - smb-existingvolumebroker-unit
  - smb-volume-mount-options-unit
  - smb-volume-release-job-tests
  - smbbroker-unit
  - smbdriver-integration
  - smbdriver-unit

- name: upgrade-environment-test-nfs-smb
  jobs:
  - cf-deployment-nightly
  - bbl-up-long-running-gcp-environment
  - create-nfs-volume-release
  - create-mapfs-release
  - create-smb-volume-release
  - deploy-cf
  - deploy-nfs-brokers
  - deploy-smb-broker
  - pats-nfs-long-running-gcp-environment
  - pats-nfs-docker-long-running-gcp-environment
  - pats-nfs-legacy-long-running-gcp-environment
  - cats-nfs-long-running-gcp-environment
  - cats-smb-long-running-gcp-environment
  - drats-nfs-smb
  - pats-smb-long-running-gcp-environment

- name: new-environment-test-nfs-ldap
  jobs:
  - acquire-lock-ephemeral-aws-environment
  - bbl-up-ephemeral-aws-environment
  - create-nfs-volume-release
  - create-mapfs-release
  - deploy-cf-ephemeral-aws-environment
  - deploy-nfs-broker-ephemeral-aws-environment
  - pats-nfs-ldap-ephemeral-aws-environment
  - pats-nfs-ldap-legacy-ephemeral-aws-environment
  - delete-cf-ephemeral-aws-environment-passed-pats
  - delete-cf-ephemeral-aws-environment-passed-migration
  - deploy-cf-ephemeral-aws-environment-sql
  - migrate-nfs-broker-to-credhub-ephemeral-aws-environment

- name: build-docker-images
  jobs:
  - build-nfs-driver-integration-tests-docker-image
  - build-mapfs-tests-docker-image
  - build-nfs-bosh-release-test-docker-image
  - build-nfs-broker-tests-docker-image
  - build-nfs-unit-tests-docker-image
  - build-smb-unit-tests-docker-image
  - build-nfs-cats-docker-image

- name: nfs-units-integration
  jobs:
  - nfsdriver-unit
  - nfsbroker-tests
  - mapfs-unit
  - nfs-volume-release-job-tests
  - mapfs-release-job-tests
  - nfsdriver-integration

- name: smb-units-integration
  jobs:
  - smbdriver-unit
  - smbbroker-unit
  - smb-volume-release-job-tests
  - smb-existingvolumebroker-unit
  - smb-volume-mount-options-unit
  - smbdriver-integration

- name: release-nfs
  jobs:
  - shipit-nfs
  - manual-bump-nfs-patch
  - manual-bump-nfs-minor
  - manual-bump-nfs-major

- name: release-smb
  jobs:
  - shipit-smb
  - manual-bump-smb-patch
  - manual-bump-smb-minor
  - manual-bump-smb-major

- name: release-mapfs
  jobs:
  - shipit-mapfs
  - manual-bump-mapfs-patch
  - manual-bump-mapfs-minor
  - manual-bump-mapfs-major

resources:

- name: mapfs-tests-docker-image
  type: docker-image
  source:
    repository: cfpersi/mapfs-tests
    username: ((dockerhub_username))
    password: ((dockerhub_password))

- name: nfs-driver-integration-tests-docker-image
  type: docker-image
  source:
    repository: cfpersi/nfs-integration-tests
    username: ((dockerhub_username))
    password: ((dockerhub_password))

- name: nfs-bosh-release-test-docker-image
  type: docker-image
  source:
    repository: cfpersi/bosh-release-tests
    username: ((dockerhub_username))
    password: ((dockerhub_password))

- name: nfs-broker-tests-docker-image
  type: docker-image
  source:
    repository: cfpersi/nfs-broker-tests
    username: ((dockerhub_username))
    password: ((dockerhub_password))

- name: nfs-unit-tests-docker-image
  type: docker-image
  source:
    repository: cfpersi/nfs-unit-tests
    username: ((dockerhub_username))
    password: ((dockerhub_password))

- name: smb-unit-tests-docker-image
  type: docker-image
  source:
    repository: cfpersi/smb-unit-tests
    username: ((dockerhub_username))
    password: ((dockerhub_password))

- name: nfs-cats-docker-image
  type: docker-image
  source:
    repository: cfpersi/nfs-cats
    username: ((dockerhub_username))
    password: ((dockerhub_password))

- name: persi-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/persi-ci.git

- name: cf-volume-services-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-volume-services-acceptance-tests.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: credhub
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/credhub

- name: nightly
  type: time
  source:
    start: 12:00 AM
    stop: 1:00 AM
    location: America/Los_Angeles

- name: nfs-volume-release-tarball
  type: s3
  source:
    access_key_id: {{nfsvolume-uploader_aws_ID}}
    bucket: nfs-volume-release-tarballs
    regexp: nfs-volume-(.*).tgz
    secret_access_key: {{nfsvolume-uploader_aws_secret}}

- name: nfsvolume-version
  type: semver
  source:
    access_key_id: {{nfsvolume-uploader_aws_ID}}
    bucket: nfsvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{nfsvolume-uploader_aws_secret}}

- name: nfs-volume-release
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/nfs-volume-release.git
    ignore_paths:
    - scripts

- name: nfs-volume-release-concourse-tasks
  type: git
  source:
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/nfs-volume-release.git

- name: github-release-nfs
  type: github-release
  source:
    user: cloudfoundry
    repository: nfs-volume-release
    drafts: true
    access_token: {{github-release-token-nfsvolumerelease}}

- name: smb-volume-release
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/smb-volume-release.git
    ignore_paths:
    - scripts

- name: smb-volume-release-concourse-tasks
  type: git
  source:
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/smb-volume-release.git

- name: smb-volume-version
  type: semver
  source:
    access_key_id: {{smbvolume-uploader_aws_ID}}
    bucket: smb-volume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{smbvolume-uploader_aws_secret}}

- name: smb-volume-release-tarball
  type: s3
  source:
    bucket: smb-volume-release-tarballs
    regexp: smb-volume-(.*).tgz
    access_key_id: {{smbvolume-uploader_aws_ID}}
    secret_access_key: {{smbvolume-uploader_aws_secret}}

- name: github-release-smb
  type: github-release
  source:
    user: cloudfoundry
    repository: smb-volume-release
    drafts: true
    access_token: {{github-release-token-smbvolumerelease}}

- name: mapfs-release-tarball
  type: s3
  source:
    access_key_id: {{mapfs-uploader_aws_ID}}
    bucket: mapfs-release-tarballs
    regexp: mapfs-(.*).tgz
    secret_access_key: {{mapfs-uploader_aws_secret}}

- name: mapfs-version
  type: semver
  source:
    access_key_id: {{mapfs-uploader_aws_ID}}
    bucket: mapfs-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{mapfs-uploader_aws_secret}}

- name: mapfs-release
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/mapfs-release.git

- name: mapfs-release-concourse-tasks
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/mapfs-release.git

- name: mapfs
  type: git
  source:
    branch: master
    username: {{github-user}}
    password: {{github-password}}
    uri: https://github.com/cloudfoundry/mapfs.git

- name: github-release-mapfs
  type: github-release
  source:
    user: cloudfoundry
    repository: mapfs-release
    drafts: true
    access_token: {{github-release-token-mapfs}}

- name: cf-deployment
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: bbl-state
  type: git
  source:
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    branch: master
    private_key: {{deployments-persi-key}}

- name: env-creation-gate-lock
  type: pool
  source:
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    branch: master
    pool: gate-locks
    private_key: {{deployments-persi-key}}

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: {{github-release-token-bbr}}

- name: disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests.git

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

jobs:
- name: nfsdriver-unit
  public: true
  plan:
  - in_parallel:
    - get: nfs-volume-release-concourse-tasks
      params:
        submodules: none
    - get: nfs-volume-release
      trigger: true
  - task: build
    file: nfs-volume-release-concourse-tasks/scripts/ci/run_driver_unit.build.yml

- name: nfsbroker-tests
  public: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release-concourse-tasks
        params:
          submodules: none
      - get: nfs-volume-release
        trigger: true
      - get: credhub
  - task: run-test
    file: nfs-volume-release-concourse-tasks/scripts/ci/run_broker_integration.build.yml

- name: nfs-volume-release-job-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: nfs-volume-release-concourse-tasks
      - get: mapfs-release
      - get: nfs-volume-release
        trigger: true
  - task: rspec
    file: persi-ci/scripts/ci/run-rspec.build.yml
    input_mapping:
      test-repo: nfs-volume-release
  - task: bosh-release-test
    file: nfs-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
    privileged: true

- name: mapfs-release-job-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: mapfs-release
        trigger: true
      - get: mapfs-release-concourse-tasks
  - task: bosh-release-test
    file: mapfs-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
    privileged: true
    timeout: 1h


- name: nfsdriver-integration
  serial: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: nfs-volume-release-concourse-tasks
        params:
          submodules: none
      - get: nfs-volume-release
        passed:
        - nfsdriver-unit
        - nfsbroker-tests
        - nfs-volume-release-job-tests
        trigger: true
      - get: mapfs-release
        passed:
        - mapfs-unit
        - mapfs-release-job-tests
        trigger: true
  - do:
    - task: run_docker_driver_integration_tests
      file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml
      privileged: true
    - task: run_docker_driver_lazy_unmount_integration_tests
      file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_lazy_unmount_integration_tests.build.yml
      privileged: true

- name: create-nfs-volume-release
  serial_groups:
  - nfs-version
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - nfsdriver-integration
        trigger: true
      - get: nfs-volume-version
        resource: nfsvolume-version
        params:
          pre: rc
      - get: persi-ci
  - put: nfs-volume-version
    resource: nfsvolume-version
    params:
      file: nfs-volume-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: nfs-volume-release
      release-version: nfs-volume-version
    params:
      RELEASE_NAME: nfs-volume
  - put: nfs-volume-release-tarball
    params:
      file: release-tarball/nfs-volume-*.tgz

- name: shipit-nfs
  serial_groups:
  - nfs-version
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: release-tarball
        resource: nfs-volume-release-tarball
        passed:
        - pats-nfs-long-running-gcp-environment
      - get: release
        resource: nfs-volume-release
        passed:
        - pats-nfs-long-running-gcp-environment
      - get: version
        resource: nfsvolume-version
        params:
          bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      BASE_RELEASE_NAME: nfs-volume
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{nfsvolume-uploader_aws_ID}}
      S3_ACCESS_KEY: {{nfsvolume-uploader_aws_secret}}
  - put: nfs-volume-version
    resource: nfsvolume-version
    params:
      file: version/number
  - task: generate-github-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      BASE_RELEASE_NAME: nfs-volume
    input_mapping:
      volume-release: release
      volume-version: version
  - put: nfs-volume-release
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: github-release-nfs
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs: []
  - put: nfsvolume-version
    params:
      bump: patch

- name: manual-bump-nfs-patch
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: patch

- name: manual-bump-nfs-minor
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: minor

- name: manual-bump-nfs-major
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: major

- name: shipit-mapfs
  serial_groups:
  - mapfs-version
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: release-tarball
        resource: mapfs-release-tarball
        passed:
        - pats-nfs-long-running-gcp-environment
        - pats-nfs-legacy-long-running-gcp-environment
      - get: release
        resource: mapfs-release
        passed:
        - pats-nfs-long-running-gcp-environment
        - pats-nfs-legacy-long-running-gcp-environment
      - get: version
        resource: mapfs-version
        params:
          bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      BASE_RELEASE_NAME: mapfs
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{mapfs-uploader_aws_ID}}
      S3_ACCESS_KEY: {{mapfs-uploader_aws_secret}}
  - put: version
    resource: mapfs-version
    params:
      file: version/number
  - task: generate-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      BASE_RELEASE_NAME: mapfs
  - put: mapfs-release
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: github-release-mapfs
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs: []
  - put: mapfs-version
    params:
      bump: patch
- name: manual-bump-mapfs-patch
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: patch
- name: manual-bump-mapfs-minor
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: minor
- name: manual-bump-mapfs-major
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: major

- name: deploy-nfs-brokers
  serial_groups:
  - nfs
  - gorgophone-errands
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: bbl-state
      - get: nfs-volume-release
        passed:
        - deploy-cf
        trigger: true
      - get: cf-deployment
        passed:
        - deploy-cf
        trigger: true
      - get: cf-deployment-concourse-tasks
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      ERRAND_NAME: nfsbrokerpush

- name: pats-nfs-long-running-gcp-environment
  serial_groups:
  - nfs
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: nfs-volume-release-tarball
        passed:
        - deploy-cf
      - get: mapfs-release
        passed:
        - deploy-cf
        trigger: true
      - get: mapfs-release-tarball
        passed:
        - deploy-cf
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: bbl-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_BOGUS_CONFIG: '{"uid":"1000","gid":"1000"}'
      BIND_CONFIG: '["{\"uid\":\"1000\",\"gid\":\"1000\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"3.0\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"version\": \"3.0\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.1\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"version\": \"4.1\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.2\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"version\": \"4.2\",\"mount\": \"/var/vcap/data/foo\"}"]'
      CREATE_BOGUS_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/nonexistensevol"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: bbl-state
    attempts: 3
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      PARALLEL_NODES: 2
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: pats-nfs-legacy-long-running-gcp-environment
  serial_groups:
  - nfs
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: nfs-volume-release-tarball
        passed:
        - deploy-cf
      - get: mapfs-release
        passed:
        - deploy-cf
        trigger: true
      - get: mapfs-release-tarball
        passed:
        - deploy-cf
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: bbl-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_BOGUS_CONFIG: '{"uid":"1000","gid":"1000"}'
      BIND_CONFIG: '["{\"uid\":\"1000\",\"gid\":\"1000\"}"]'
      CREATE_BOGUS_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/nonexistensevol"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users", "version":"3.0"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs-legacy
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    attempts: 3
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: pats-nfs-docker-long-running-gcp-environment
  serial_groups:
  - nfs
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: nfs-volume-release-tarball
        passed:
        - deploy-cf
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: bbl-state
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '["{\"uid\":\"1000\",\"gid\":\"1000\"}"]'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      TEST_DOCKER_PORA: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: cats-nfs-long-running-gcp-environment
  serial_groups:
  - nfs
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: persi-ci
      - get: bbl-state
      - get: cf-acceptance-tests
  - task: run-cats
    file: persi-ci/scripts/ci/run_cats.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      BBL_IAAS: gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_USERNAME: admin
      SERVICE_NAME: nfs
      PLAN_NAME: Existing

- name: cats-smb-long-running-gcp-environment
  serial_groups:
  - smb
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release
        passed:
        - deploy-smb-broker
        trigger: true
      - get: persi-ci
      - get: bbl-state
      - get: cf-acceptance-tests
  - task: run-cats
    file: persi-ci/scripts/ci/run_cats.build.yml
    input_mapping:
      director-state: bbl-state
      cf-acceptance-tests: cf-acceptance-tests
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      BBL_IAAS: gcp
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_USERNAME: admin
      SERVICE_NAME: smb
      PLAN_NAME: Existing
      CREATE_CONFIG: '{\"share\": \"((smb_cats_remote_path))\", \"username\": \"((smb_cats_username))\", \"password\": \"((smb_cats_password))\"}'


- name: build-nfs-driver-integration-tests-docker-image
  plan:
    - get: nightly
      trigger: true
    - get: nfs-volume-release
      trigger: true
    - put: nfs-driver-integration-tests-docker-image
      params:
        build: nfs-volume-release/dockerfiles/nfs-integration-tests

- name: build-nfs-bosh-release-test-docker-image
  plan:
    - get: nightly
      trigger: true
    - get: nfs-volume-release
      trigger: true
    - put: nfs-bosh-release-test-docker-image
      params:
        build: nfs-volume-release/dockerfiles/bosh-release-tests

- name: build-nfs-broker-tests-docker-image
  plan:
    - get: nightly
      trigger: true
    - get: nfs-volume-release
      trigger: true
    - put: nfs-broker-tests-docker-image
      params:
        build: nfs-volume-release/dockerfiles/nfs-broker-tests

- name: build-nfs-unit-tests-docker-image
  plan:
    - get: nightly
      trigger: true
    - get: nfs-volume-release
      trigger: true
    - put: nfs-unit-tests-docker-image
      params:
        build: nfs-volume-release/dockerfiles/nfs-unit-tests

- name: build-nfs-cats-docker-image
  plan:
    - get: nightly
      trigger: true
    - get: nfs-volume-release
      trigger: true
    - put: nfs-cats-docker-image
      params:
        build: nfs-volume-release/dockerfiles/nfs-cats

- name: build-mapfs-tests-docker-image
  plan:
  - get: nightly
    trigger: true
  - get: mapfs
    trigger: true
  - put: mapfs-tests-docker-image
    params:
      build: mapfs/ci/dockerfiles/perf

- name: mapfs-unit
  public: true
  plan:
  - get: mapfs-release
    trigger: true
  - task: run-unit
    file: mapfs-release/scripts/ci/run_tests.build.yml
    privileged: true

- name: create-mapfs-release
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: mapfs-release
        passed:
        - mapfs-unit
        - mapfs-release-job-tests
        trigger: true
      - get: mapfs-version
        resource: mapfs-version
        params:
          pre: rc
      - get: persi-ci
  - put: mapfs-version
    resource: mapfs-version
    params:
      file: mapfs-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: mapfs-release
      release-version: mapfs-version
    params:
      RELEASE_NAME: mapfs
  - put: mapfs-release-tarball
    params:
      file: release-tarball/mapfs-*.tgz

- name: build-smb-unit-tests-docker-image
  plan:
    - get: nightly
      trigger: true
    - get: smb-volume-release
      trigger: true
    - put: smb-unit-tests-docker-image
      params:
        build: smb-volume-release/dockerfiles/smb-unit-tests

- name: smb-volume-release-job-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: smb-volume-release-concourse-tasks
      - get: smb-volume-release
        trigger: true
  - task: bosh-release-test
    file: smb-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
    privileged: true
    attempts: 3

- name: smbdriver-unit
  public: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release-concourse-tasks
        params:
          submodules: none
      - get: smb-volume-release
        trigger: true
  - task: smbdriver-unit
    file: smb-volume-release-concourse-tasks/scripts/ci/run-submodule-unit.build.yml
    params:
      SUBMODULE_NAME: smbdriver

- name: smbbroker-unit
  public: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release-concourse-tasks
        params:
          submodules: none
      - get: smb-volume-release
        trigger: true
  - task: smbbroker-unit
    file: smb-volume-release-concourse-tasks/scripts/ci/run-submodule-unit.build.yml
    params:
      SUBMODULE_NAME: smbbroker

- name: smb-existingvolumebroker-unit
  public: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release-concourse-tasks
        params:
          submodules: none
      - get: smb-volume-release
        trigger: true
  - task: existingvolumebroker-unit
    file: smb-volume-release-concourse-tasks/scripts/ci/run-submodule-unit.build.yml
    params:
      SUBMODULE_NAME: existingvolumebroker

- name: smb-volume-mount-options-unit
  public: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release-concourse-tasks
        params:
          submodules: none
      - get: smb-volume-release
        trigger: true
  - task: volume-mount-options-unit
    file: smb-volume-release-concourse-tasks/scripts/ci/run-submodule-unit.build.yml
    params:
      SUBMODULE_NAME: volume-mount-options

- name: create-smb-volume-release
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release
        passed:
        - smb-existingvolumebroker-unit
        - smbdriver-integration
        trigger: true
      - get: smb-volume-version
        resource: smb-volume-version
        params:
          pre: rc
      - get: persi-ci
  - put: smb-volume-version
    resource: smb-volume-version
    params:
      file: smb-volume-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create-release.build.yml
    input_mapping:
      release: smb-volume-release
      release-version: smb-volume-version
    params:
      RELEASE_NAME: smb-volume
  - put: smb-volume-release-tarball
    params:
      file: release-tarball/smb-volume-*.tgz

- name: smbdriver-integration
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: smb-volume-release-concourse-tasks
        params:
          submodules: none
      - get: smb-volume-release
        passed:
        - smbbroker-unit
        - smb-volume-mount-options-unit
        - smbdriver-unit
        - smb-volume-release-job-tests
        trigger: true
      - get: bbl-state
  - task: run_docker_driver_integration_tests
    privileged: true
    input_mapping:
      director-state: bbl-state
    params:
      SMB_REMOTE_PATH: {{smb_cert_remote_path}}
      SMB_USERNAME: {{smb_cert_username}}
      SMB_PASSWORD: {{smb_cert_password}}
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      BBL_IAAS: gcp
    file: smb-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml

- name: deploy-smb-broker
  serial_groups:
  - smb
  - gorgophone-errands
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: bbl-state
      - get: smb-volume-release
        passed:
        - deploy-cf
        trigger: true
      - get: cf-deployment
        passed:
        - deploy-cf
        trigger: true
      - get: cf-deployment-concourse-tasks
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      ERRAND_NAME: smbbrokerpush

- name: pats-smb-long-running-gcp-environment
  serial_groups:
  - smb
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release-concourse-tasks
        params:
          submodules: none
      - get: smb-volume-release
        passed:
        - deploy-smb-broker
        - smbdriver-integration
        trigger: true
      - get: smb-volume-release-tarball
        passed:
        - deploy-cf
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: bbl-state
  - in_parallel:
      fail_fast: true
      steps:
      - task: generate-bind-create-configs
        file: smb-volume-release-concourse-tasks/scripts/ci/generate_bind_create_config.build.yml
        params:
          SMB_REMOTE_PATH: {{smb_pats_remote_path}}
          SMB_USERNAME: {{smb_pats_username}}
          SMB_PASSWORD: {{smb_pats_password}}
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      APPS_DOMAIN: gorgophone.cf-app.com
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      DISALLOWED_OVERRIDE_BIND_CONFIG: '{"share"://smbtestservertwo.service.cf.internal/vol2}'
      PLAN_NAME: Existing
      SERVICE_NAME: smb
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      TEST_READ_ONLY: true

- name: shipit-smb
  serial_groups:
  - smb-version
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: release-tarball
        resource: smb-volume-release-tarball
        passed:
        - pats-smb-long-running-gcp-environment
      - get: release
        resource: smb-volume-release
        passed:
        - pats-smb-long-running-gcp-environment
      - get: version
        resource: smb-volume-version
        params:
          bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      BASE_RELEASE_NAME: smb-volume
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{smbvolume-uploader_aws_ID}}
      S3_ACCESS_KEY: {{smbvolume-uploader_aws_secret}}
  - put: smb-volume-version
    resource: smb-volume-version
    params:
      file: version/number
  - task: generate-github-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      BASE_RELEASE_NAME: smb-volume
  - put: smb-volume-release
    params:
      repository: finalized-release/release
      tag: version/number
      tag_prefix: v
  - put: github-release-smb
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs: []
  - put: smb-volume-version
    params:
      bump: patch
- name: manual-bump-smb-patch
  serial_groups:
  - smb-version
  plan:
  - get: smb-volume-version
    resource: smb-volume-version
    params:
      bump: final
  - put: smb-volume-version
    params:
      bump: patch
- name: manual-bump-smb-minor
  serial_groups:
  - smb-version
  plan:
  - get: smb-volume-version
    resource: smb-volume-version
    params:
      bump: final
  - put: smb-volume-version
    params:
      bump: minor
- name: manual-bump-smb-major
  serial_groups:
  - smb-version
  plan:
  - get: smb-volume-version
    resource: smb-volume-version
    params:
      bump: final
  - put: smb-volume-version
    params:
      bump: major

- name: cf-deployment-nightly
  public: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nightly
        trigger: true
      - get: cf-deployment

- name: bbl-up-long-running-gcp-environment
  serial_groups:
  - nfs
  - smb
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment-concourse-tasks
      - get: bbl-state
      - get: cf-deployment
        passed:
        - cf-deployment-nightly
        trigger: true
      - get: persi-ci
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_ENV_NAME: gorgophone
      BBL_GCP_REGION: us-west1
      BBL_GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
      BBL_IAAS: gcp
      BBL_LB_CERT: {{gorgophone_lbs_ssl_cert}}
      BBL_LB_KEY: {{gorgophone_lbs_ssl_signing_key}}
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      GIT_COMMIT_EMAIL: cf-diego-persistence@pivotal.io
      LB_DOMAIN: gorgophone.cf-app.com
    input_mapping:
      bbl-config: bbl-state
    ensure:
      put: bbl-state
      params:
        repository: updated-bbl-state
        rebase: true
      on_error:
        put: bbl-state
        params:
          repository: updated-bbl-state
          rebase: true

- name: deploy-cf
  serial_groups:
  - nfs
  - smb
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment-concourse-tasks
      - get: bbl-state
      - get: cf-deployment
        passed:
        - bbl-up-long-running-gcp-environment
        trigger: true
      - get: persi-ci
      - get: nfs-volume-release
        passed: [ create-nfs-volume-release ]
      - get: nfs-volume-release-tarball
        passed: [ create-nfs-volume-release ]
        trigger: true
      - get: nfsvolume-version
        passed: [ create-nfs-volume-release ]
      - get: mapfs-release
        passed: [ create-mapfs-release ]
      - get: mapfs-release-tarball
        passed: [ create-mapfs-release ]
        trigger: true
      - get: mapfs-version
        passed: [ create-mapfs-release ]
      - get: smb-volume-release
        passed: [ create-smb-volume-release ]
      - get: smb-volume-release-tarball
        passed: [ create-smb-volume-release ]
        trigger: true
      - get: smb-volume-version
        passed: [ create-smb-volume-release ]
  - task: collect-tarballs
    file: persi-ci/scripts/ci/collect-tarballs.build.yml
    params:
      COLLECT_EFS_TARBALL: false
    input_mapping:
      persi-ci: persi-ci
      nfs-tarball: nfs-volume-release-tarball
      efs-tarball: nfsvolume-version #dummy
      mapfs-tarball: mapfs-release-tarball
      smb-tarball: smb-volume-release-tarball
      nfs-version: nfsvolume-version
      efs-version: nfsvolume-version #dummy
      mapfs-version: mapfs-version
      smb-version: smb-volume-version
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/scale-up-routers-and-cells.yml
                      operations/enable-nfs-test-server-two.yml
                      operations/enable-smb-test-server-two.yml"
  - task: collect-tarball-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/update-releases.yml"
  - task: add-tarballs
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "."
      NEW_OPS_FILES: "nfs.tgz
                      mapfs.tgz
                      smb.tgz"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_IAAS: gcp
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      GENERATE_DATADOG_VARS: true
      GENERATE_NFS_VARS: true
      GENERATE_SMB_VARS: true
      GENERATE_GCS_BLOBSTORE_VARS: true
      DATADOG_API_KEY: {{gorgophone-datadog-api-key}}
      DATADOG_METRIC_PREFIX: gorgophone
      SMB_USERNAME: {{smb_pats_username_two}}
      SMB_PASSWORD: {{smb_pats_password_two}}
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      cf-deployment: cf-deployment
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      SYSTEM_DOMAIN: gorgophone.cf-app.com # not used, this is required by the task
      VARS_FILES: "nfs-vars.yml datadog-vars.yml smb-vars.yml gcs-blobstore-vars.yml"
      OPS_FILES: "operations/use-compiled-releases.yml
                  operations/scale-to-one-az.yml
                  operations/scale-up-routers-and-cells.yml
                  operations/use-external-blobstore.yml
                  operations/use-gcs-blobstore-service-account.yml
                  operations/enable-nfs-volume-service.yml
                  operations/enable-nfs-test-server-two.yml
                  operations/test/enable-nfs-test-server.yml
                  operations/test/enable-smb-test-server.yml
                  operations/backup-and-restore/enable-backup-restore.yml
                  operations/backup-and-restore/enable-restore-nfs-broker.yml
                  operations/enable-smb-volume-service.yml
                  operations/enable-smb-test-server-two.yml
                  operations/update-releases.yml"
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      ERRAND_NAME: smoke_tests
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      CLEAN_ALL: true

- name: drats-nfs-smb
  serial: true
  serial_groups:
  - gorgophone
  - nfs
  - smb
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - deploy-nfs-brokers
        trigger: true
      - get: smb-volume-release
        passed:
        - deploy-smb-broker
        trigger: true
      - get: bbr-binary-release
      - get: disaster-recovery-acceptance-tests
      - get: bbl-state
      - get: persi-ci
  - task: update-integration-config
    file: disaster-recovery-acceptance-tests/ci/credhub-compatible/update-integration-config/task.yml
    input_mapping:
      integration-configs: persi-ci
    params:
      BBL_STATE_DIR: bbl-state-gcp-gorgophone
      INTEGRATION_CONFIG_FILE_PATH: config/drats.json
      SYSTEM_DOMAIN: gorgophone.cf-app.com
  - task: add-timeout
    config:
      platform: linux
      image_resource:
        type:  docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: latest
      inputs:
      - name: updated-integration-configs
      outputs:
      - name: updated-integration-configs-timeout
      run:
        path: /bin/bash
        args: ["-c", "mkdir -p updated-integration-configs-timeout/config && jq '.timeout_in_minutes=15' updated-integration-configs/config/drats.json > updated-integration-configs-timeout/config/drats.json"]
  - task: acceptance-tests
    file: disaster-recovery-acceptance-tests/ci/drats-with-integration-config/task.yml
    attempts: 3
    privileged: true
    input_mapping:
      drats-integration-config: updated-integration-configs-timeout
    params:
      CONFIG_FILE_PATH: config/drats.json

- name: acquire-lock-ephemeral-aws-environment
  build_logs_to_retain: 100
  serial: true
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - create-nfs-volume-release
      - get: nfs-volume-release-tarball
        passed:
        - create-nfs-volume-release
        trigger: true
      - get: nfsvolume-version
        passed:
        - create-nfs-volume-release
      - get: mapfs-release
        passed:
        - create-mapfs-release
      - get: mapfs-release-tarball
        passed:
        - create-mapfs-release
        trigger: true
      - get: mapfs-version
        passed:
        - create-mapfs-release
  - put: env-creation-gate-lock
    params:
      claim: ephemeral-aws-environment
    timeout: 3h

- name: bbl-up-ephemeral-aws-environment
  serial_groups: [deploy-cf-ephemeral-aws-environment]
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment-concourse-tasks
      - get: env-creation-gate-lock
        passed:
        - acquire-lock-ephemeral-aws-environment
        trigger: true
      - get: bbl-state
      - get: nfs-volume-release
        passed:
        - acquire-lock-ephemeral-aws-environment
      - get: nfs-volume-release-tarball
        passed:
        - acquire-lock-ephemeral-aws-environment
      - get: nfsvolume-version
        passed:
        - acquire-lock-ephemeral-aws-environment
      - get: mapfs-release
        passed:
        - acquire-lock-ephemeral-aws-environment
      - get: mapfs-release-tarball
        passed:
        - acquire-lock-ephemeral-aws-environment
      - get: mapfs-version
        passed:
        - acquire-lock-ephemeral-aws-environment
      - get: persi-ci
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_ACCESS_KEY_ID: {{gorgophone_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{gorgophone_aws_secret_access_key}}
      BBL_AWS_REGION: us-east-1
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      BBL_LB_CERT: {{ephemeral-aws-environment_lbs_ssl_cert}}
      BBL_LB_KEY: {{ephemeral-aws-environment_lbs_ssl_private_key}}
      LB_DOMAIN: ephemeral-aws-environment.persi.cf-app.com
      BBL_ENV_NAME: ephemeral-aws-environment
      GIT_COMMIT_EMAIL: cf-diego-persistence@pivotal.io
    input_mapping:
      bbl-config: bbl-state
    ensure:
      put: bbl-state
      params:
        repository: updated-bbl-state
        rebase: true
      on_error:
        put: bbl-state
        params:
          repository: updated-bbl-state
          rebase: true

- name: deploy-cf-ephemeral-aws-environment
  public: true
  build_logs_to_retain: 100
  serial_groups: [deploy-cf-ephemeral-aws-environment]
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: env-creation-gate-lock
        passed:
        - bbl-up-ephemeral-aws-environment
        trigger: true
      - get: bbl-state
      - get: persi-ci
      - get: nfs-volume-release
        passed:
        - bbl-up-ephemeral-aws-environment
      - get: nfs-volume-release-tarball
        passed:
        - bbl-up-ephemeral-aws-environment
      - get: nfsvolume-version
        passed:
        - bbl-up-ephemeral-aws-environment
      - get: mapfs-release
        passed:
        - bbl-up-ephemeral-aws-environment
      - get: mapfs-release-tarball
        passed:
        - bbl-up-ephemeral-aws-environment
      - get: mapfs-version
        passed:
        - bbl-up-ephemeral-aws-environment
  - task: collect-tarballs
    file: persi-ci/scripts/ci/collect-tarballs.build.yml
    params:
      COLLECT_NFS_TARBALL: true
      COLLECT_EFS_TARBALL: true
      COLLECT_SMB_TARBALL: false
      COLLECT_MAPFS_TARBALL: true
    #this task requires a lot of inputs that we don't need for this instance--we're feeding in
    #nfsvolume-version as a dummy input because it is tiny and easy to copy
    input_mapping:
      persi-ci: persi-ci
      nfs-tarball: nfs-volume-release-tarball
      efs-tarball: nfsvolume-version #dummy
      mapfs-tarball: mapfs-release-tarball
      smb-tarball: nfsvolume-version #dummy
      nfs-version: nfsvolume-version
      efs-version: nfsvolume-version #dummy
      mapfs-version: mapfs-version #dummy
      smb-version: nfsvolume-version #dummy
  - task: collect-tarball-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/update-releases.yml"
  - task: add-tarballs
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "."
      NEW_OPS_FILES: "nfs.tgz mapfs.tgz"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      GENERATE_EFS_VARS: false
      GENERATE_NFS_VARS: true
      GENERATE_S3_BLOBSTORE_VARS: true
      LDAP_HOST: "nfstestldapserver.service.cf.internal"
      LDAP_SVC_USER: {{ldap-svc-user}}
      LDAP_SVC_PASS: {{ldap-svc-pass}}
      LDAP_PORT: 636
      LDAP_PROTO: tcp
      LDAP_USER_FQDN: {{ldap-user-fqdn}}
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    on_failure:
     put: env-creation-gate-lock
     params:
       release: env-creation-gate-lock
    input_mapping:
      cf-deployment: cf-deployment
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      SYSTEM_DOMAIN: ephemeral-aws-environment.persi.cf-app.com
      VARS_FILES: "nfs-vars.yml s3-blobstore-vars.yml"
      OPS_FILES: "operations/scale-to-one-az.yml \
                  operations/use-compiled-releases.yml \
                  operations/enable-nfs-volume-service.yml \
                  operations/enable-nfs-ldap.yml \
                  operations/test/enable-nfs-test-server.yml \
                  operations/test/enable-nfs-test-ldapserver.yml \
                  operations/update-releases.yml"

- name: deploy-nfs-broker-ephemeral-aws-environment
  serial_groups: [deploy-cf-ephemeral-aws-environment]
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment-concourse-tasks
      - get: env-creation-gate-lock
        passed:
        - deploy-cf-ephemeral-aws-environment
        trigger: true
      - get: bbl-state
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      ERRAND_NAME: nfsbrokerpush

- name: pats-nfs-ldap-ephemeral-aws-environment
  serial_groups: [deploy-cf-ephemeral-aws-environment]
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: env-creation-gate-lock
        passed:
        - deploy-nfs-broker-ephemeral-aws-environment
        trigger: true
      - get: bbl-state
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      APPS_DOMAIN: ephemeral-aws-environment.persi.cf-app.com
      CF_API_ENDPOINT: api.ephemeral-aws-environment.persi.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      DISALLOWED_LDAP_BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      TEST_DOCKER_PORA: true

- name: pats-nfs-ldap-legacy-ephemeral-aws-environment
  serial_groups: [deploy-cf-ephemeral-aws-environment]
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: env-creation-gate-lock
        passed:
        - deploy-nfs-broker-ephemeral-aws-environment
        trigger: true
      - get: bbl-state
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
  - task: generate-pats-config
    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      APPS_DOMAIN: ephemeral-aws-environment.persi.cf-app.com
      CF_API_ENDPOINT: api.ephemeral-aws-environment.persi.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'
      DISALLOWED_LDAP_BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs-legacy
  - task: run-pats
    file: persi-ci/scripts/ci/run-pats.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment

- name: delete-cf-ephemeral-aws-environment-passed-pats
  serial_groups: [deploy-cf-ephemeral-aws-environment]
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment-concourse-tasks
      - get: env-creation-gate-lock
        passed:
        - pats-nfs-ldap-ephemeral-aws-environment
        - pats-nfs-ldap-legacy-ephemeral-aws-environment
        trigger: true
      - get: bbl-state
  - task: delete-cf
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    params:
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment

- name: deploy-cf-ephemeral-aws-environment-sql
  serial_groups: [deploy-cf-ephemeral-aws-environment]
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: env-creation-gate-lock
        passed:
        - delete-cf-ephemeral-aws-environment-passed-pats
        trigger: true
      - get: bbl-state
      - get: persi-ci
      - get: nfs-volume-release
        passed:
        - deploy-cf-ephemeral-aws-environment
      - get: nfs-volume-release-tarball
        passed:
        - deploy-cf-ephemeral-aws-environment
      - get: nfsvolume-version
        passed:
        - deploy-cf-ephemeral-aws-environment
      - get: mapfs-release
        passed:
        - deploy-cf-ephemeral-aws-environment
      - get: mapfs-release-tarball
        passed:
        - deploy-cf-ephemeral-aws-environment
      - get: mapfs-version
        passed:
        - deploy-cf-ephemeral-aws-environment
  - task: collect-tarballs
    file: persi-ci/scripts/ci/collect-tarballs.build.yml
    params:
      COLLECT_NFS_TARBALL: true
      COLLECT_EFS_TARBALL: false
      COLLECT_SMB_TARBALL: false
      COLLECT_MAPFS_TARBALL: true
    #this task requires a lot of inputs that we don't need for this instance--we're feeding in
    #nfsvolume-version as a dummy input because it is tiny and easy to copy
    input_mapping:
      persi-ci: persi-ci
      nfs-tarball: nfs-volume-release-tarball
      efs-tarball: nfsvolume-version #dummy
      mapfs-tarball: mapfs-release-tarball
      smb-tarball: efsvolume-version #dummy
      nfs-version: nfsvolume-version
      efs-version: nfsvolume-version #dummy
      mapfs-version: mapfs-version #dummy
      smb-version: efsvolume-version #dummy
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/enable-nfs-volume-service-with-sqlstore.yml \
                      operations/enable-nfs-volume-service-migration-test.yml"
  - task: collect-tarball-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/update-releases.yml"
  - task: add-tarballs
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "."
      NEW_OPS_FILES: "nfs.tgz mapfs.tgz"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      GENERATE_EFS_VARS: false
      GENERATE_NFS_VARS: true
      GENERATE_S3_BLOBSTORE_VARS: true
      LDAP_HOST: "nfstestldapserver.service.cf.internal"
      LDAP_SVC_USER: {{ldap-svc-user}}
      LDAP_SVC_PASS: {{ldap-svc-pass}}
      LDAP_PORT: 636
      LDAP_PROTO: tcp
      LDAP_USER_FQDN: {{ldap-user-fqdn}}
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      cf-deployment: cf-deployment
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      SYSTEM_DOMAIN: ephemeral-aws-environment.persi.cf-app.com
      VARS_FILES: "nfs-vars.yml s3-blobstore-vars.yml"
      OPS_FILES: "operations/scale-to-one-az.yml \
                  operations/use-compiled-releases.yml \
                  operations/enable-nfs-volume-service-with-sqlstore.yml \
                  operations/enable-nfs-volume-service-migration-test.yml \
                  operations/enable-nfs-ldap.yml \
                  operations/test/enable-nfs-test-server.yml \
                  operations/test/enable-nfs-test-ldapserver.yml \
                  operations/update-releases.yml"
  - task: run-broker-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      ERRAND_NAME: nfsbrokerpush
      INSTANCE: nfs-broker-push

- name: migrate-nfs-broker-to-credhub-ephemeral-aws-environment
  serial_groups: [deploy-cf-ephemeral-aws-environment]
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment-concourse-tasks
      - get: persi-ci
      - get: cf-volume-services-acceptance-tests
      - get: env-creation-gate-lock
        passed:
        - deploy-cf-ephemeral-aws-environment-sql
        trigger: true
      - get: bbl-state
  - task: test-migration
    file: persi-ci/scripts/ci/test-nfs-broker-migration.build.yml
    input_mapping:
      director-state: bbl-state
    params:
      BBL_IAAS: aws
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
      APPS_DOMAIN: ephemeral-aws-environment.persi.cf-app.com
      CF_API_ENDPOINT: api.ephemeral-aws-environment.persi.cf-app.com
      CF_USERNAME: admin
      BIND_CONFIG: '{"username":"user1000","password":"secret"}'
      CREATE_CONFIG: '{"share":"nfstestserver.service.cf.internal/export/users"}'

- name: delete-cf-ephemeral-aws-environment-passed-migration
  serial_groups: [deploy-cf-ephemeral-aws-environment]
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-deployment-concourse-tasks
      - get: env-creation-gate-lock
        passed:
        - migrate-nfs-broker-to-credhub-ephemeral-aws-environment
        trigger: true
      - get: bbl-state
  - task: delete-cf
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    params:
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: bbl-state-aws-ephemeral-aws-environment
  - put: env-creation-gate-lock
    params:
      release: env-creation-gate-lock
