######################################################################################################################
###################################### GROUPS SECTION ################################################################
######################################################################################################################
groups:
- name: persi
  jobs:
  - unit-cephfs-driver
  - unit-cephfs-broker
  - unit-local-controller-plugin
  - unit-local-node-plugin
  - csi-plugin-certification
  - certification-test-builds
  - certification-test-publish
  - create-cephfs-release
  - deploy-cephfs-cluster
  - deploy-nfs-test-server
  - cephdriver-certification
  - create-cf-release
  - cf-deploy
  - volman-unit
  - volman-inigo
  - create-diego-release
  - set-runtime-config
  - diego-deploy
  - pats-cephfs
  - pats-local
  - pats-nfs
  - pats-nfs-pushed-broker
  - pats-nfs-docker
  - pats-nfs-ldap
  - pats-isilon
  - pats-efs
  - localdriver-unit
  - localbroker-unit
  - localdriver-certification
  - localdriver-docker-certification
  - create-local-volume-release
  - deploy-local-broker
  - efsdriver-unit
  - efsbroker-unit
  - efsdriver-certification
  - create-efs-volume-release
  - create-nfs-volume-release
  - deploy-efs-broker
  - nfsdriver-unit
  - nfsbroker-unit
  - nfsdriver-certification
  - deploy-nfs-broker
  - create-isilon-volume
  - create-ecs-release
  - ecs-broker-unit
  - deploy-ecs
  - deploy-ecs-broker
  - pats-ecs
- name: util
  jobs:
  - teardown-cephfs-cluster
  - nightly-stemcell
  - bosh-cleanup
  - deploy-datadog-firehose-nozzle
- name: release-nfs
  jobs:
  - shipit-nfs
  - manual-bump-nfs-patch
  - manual-bump-nfs-minor
  - manual-bump-nfs-major
- name: gorgophone
  jobs:
  - nfsdriver-unit
  - nfsbroker-unit
  - nfsdriver-certification
  - create-nfs-volume-release
  - volman-unit
  - volman-inigo
  - create-diego-release
  - setup-cf-infrastructure
  - pats-nfs-cf-deployment
  - pats-isilon-cf-deployment
  - pats-nfs-docker-cf-deployment
  - pats-nfs-ldap-cf-deployment
  - pats-nfs-pushed-broker-cf-deployment
###################################### END GROUPS SECTION ############################################################

######################################################################################################################
###################################### RESOURCES SECTION #############################################################
######################################################################################################################
resources:

#### Misc resources ###############################################################################################
- name: nightly
  type: time
  source:
    interval: 24h
    start: 01:00 AM -0800
    stop: 1:15 AM -0800
- name: persi-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/persi-ci.git
- name: datadog-firehose-nozzle-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/datadog-firehose-nozzle-release
- name: datadog-firehose-nozzle-deployment
  type: bosh-deployment
  source:
    deployment: datadog-firehose-nozzle
    username: {{bosh-director-username}}
    password: {{bosh-director-password}}
    target: {{bosh-director-ip}}
- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
#### END Misc resources ###############################################################################################

#### CEPH resources ###############################################################################################
- name: cephfs-bosh-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/cephfs-bosh-release.git
- name: cephfs-bosh-release-tarball
  type: s3
  source:
    bucket: cephfs-bosh-release-tarballs
    regexp: cephfs-(.*).tgz
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
- name: cephfs-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: cephfs-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: cephfs-cluster-deployment
  type: bosh-deployment
  source:
    deployment: cephfs
    ignore_ssl: true
    target: {{bosh-director-ip}}
    username: {{bosh-director-username}}
    password: {{bosh-director-password}}
#### END CEPH resources ###############################################################################################

#### NFS resources ###############################################################################################
- name: nfs-test-server-deployment
  type: bosh-deployment
  source:
    deployment: nfs-server
    username: {{bosh-director-username}}
    password: {{bosh-director-password}}
    target: {{bosh-director-ip}}
- name: nfs-volume-release-tarball
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: nfs-volume-release-tarballs
    regexp: nfsvolume-(.*).tgz
    secret_access_key: {{aws-secret-access-key}}
- name: nfsvolume-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: nfsvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: nfs-volume-deployment
  type: bosh-deployment
  source:
    deployment: nfs-volume
    ignore_ssl: true
    target: {{bosh-director-ip}}
    username: {{bosh-director-username}}
    password: {{bosh-director-password}}
- name: nfsvolume-final-release
  type: s3
  source:
    bucket: nfsvolume-final-releases
    regexp: nfs-volume-(.*).tgz
    access_key_id: {{nfsvolume-uploader_aws_ID}}
    secret_access_key: {{nfsvolume-uploader_aws_secret}}
- name: nfs-volume-release
  type: git
  source:
    username: {{github-user}}
    password: {{github-password}}
    branch: master
    uri: https://github.com/cloudfoundry/nfs-volume-release.git
- name: github-release-nfs
  type: github-release
  source:
    user: cloudfoundry
    repository: nfs-volume-release
    drafts: true
    access_token: {{github-release-token}}
- name: lib-nfs
  type: git
  source:
    branch: master
    uri: https://github.com/sahlberg/libnfs.git
- name: fuse-nfs
  type: git
  source:
    branch: master
    uri: https://github.com/sahlberg/fuse-nfs.git
#### END NFS resources ###############################################################################################

#### local volume resources ##########################################################################################
- name: local-volume-release-tarball
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: local-volume-release-tarballs
    regexp: localvolume-(.*).tgz
    secret_access_key: {{aws-secret-access-key}}
- name: localvolume-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: localvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: local-volume-deployment
  type: bosh-deployment
  source:
    deployment: localbroker
    ignore_ssl: true
    target: {{bosh-director-ip}}
    username: {{bosh-director-username}}
    password: {{bosh-director-password}}
- name: local-volume-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/local-volume-release.git
#### END local volume resources ######################################################################################

#### EFS resources ################################################################################################
- name: efs-volume-release-tarball
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: efs-volume-release-tarballs
    regexp: efsvolume-(.*).tgz
    secret_access_key: {{aws-secret-access-key}}
- name: efsvolume-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: efsvolume-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: efs-volume-deployment
  type: bosh-deployment
  source:
    deployment: efs-volume
    ignore_ssl: true
    target: {{bosh-director-ip}}
    username: {{bosh-director-username}}
    password: {{bosh-director-password}}
- name: efs-volume-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/efs-volume-release.git
#### END EFS resources ################################################################################################

#### Diego resources ################################################################################################
- name: diego-dev-release
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: persi-diego-dev-releases
    regexp: diego-0\.1476\.1-dev\.(\d+)\.tgz
    secret_access_key: {{aws-secret-access-key}}
- name: diego-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: persi-diego-release-versions
    initial_version: 9999.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: garden-runc-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release
- name: garden-runc-release-master
  type: git
  source:
    uri: https://github.com/cloudfoundry/garden-runc-release
    branch: master
- name: diego-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/diego-ci
- name: cflinuxfs2-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-release
- name: diego-release
  type: git
  source:
    branch: develop
    fetch:
    - master
    ignore_paths:
    - dev_releases
    - git-hooks
    - releases
    - .final_builds
    uri: https://github.com/cloudfoundry/diego-release
- name: cf-release
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-release
- name: cf-dev-release
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: persi-cf-releases
    regexp: cf-dev-release-(.*).tgz
    secret_access_key: {{aws-secret-access-key}}
- name: cf-deployment
  type: bosh-deployment
  source:
    deployment: persi-cf
    ignore_ssl: true
    password: {{bosh-director-password}}
    target: {{bosh-director-ip}}
    username: {{bosh-director-username}}
- name: diego-deployment
  type: bosh-deployment
  source:
    deployment: persi-cf-diego
    ignore_ssl: true
    password: {{bosh-director-password}}
    target: {{bosh-director-ip}}
    username: {{bosh-director-username}}
- name: routing-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/routing-release.git
- name: routing-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cf-routing-release
#### End Diego resources ################################################################################################

#### Persi resources ################################################################################################
- name: deployments-persi
  type: git
  source:
    private_key: {{deployments-persi-key}}
    uri: git@github.com:cloudfoundry/deployments-persi.git
- name: runtime-config
  type: bosh-config
  source:
    username: {{bosh-director-username}}
    password: {{bosh-director-password}}
    ignore_ssl: true
    target: {{bosh-director-ip}}
    type: runtime-config

- name: dummy-deployment
  type: bosh-deployment
  source:
    deployment: dummy
    username: {{bosh-director-username}}
    password: {{bosh-director-password}}
    ignore_ssl: true
    target: {{bosh-director-ip}}

- name: github-release-dummy
  type: github-release
  source:
    user: pivotal-cf-experimental
    repository: dummy-boshrelease

#### End Persi resources ################################################################################################

#### ECS resources ###################################################################################################
- name: ecs-release
  type: git
  source:
    uri: https://github.com/EMC-Dojo/ecs-release.git
- name: ecs-release-tarball
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: ecs-release-tarballs
    regexp: ecs-release-(.*).tgz
    secret_access_key: {{aws-secret-access-key}}
- name: ecs-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: ecs-release-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}
- name: ecs-deployment
  type: bosh-deployment
  source:
    deployment: ecs_multi
    ignore_ssl: true
    target: {{bosh-director-ip}}
    username: {{bosh-director-username}}
    password: {{bosh-director-password}}
- name: ecs-cf-service-broker
  type: git
  source:
    uri: https://github.com/codedellemc/ecs-cf-service-broker
- name: ecs-broker-deployment
  type: bosh-deployment
  source:
    deployment: ecs-broker-aws-ec2
    ignore_ssl: true
    password: {{bosh-director-password}}
    target: {{bosh-director-ip}}
    username: {{bosh-director-username}}

#### End ECS resources ###############################################################################################

#### CSI resources ###################################################################################################
- name: csi-local-volume-release
  type: git
  source:
    uri: https://github.com/jeffpak/csi-local-volume-release.git

- name: csi-cert
  type: git
  source:
    uri: https://github.com/paulcwarren/csi-cert

- name: csi-version
  type: semver
  source:
    access_key_id: {{aws-access-key-id}}
    bucket: csi-versions
    initial_version: 0.0.0
    key: current-version
    region_name: us-east-1
    secret_access_key: {{aws-secret-access-key}}

- name: csi-binaries
  type: s3
  source:
    access_key_id: {{aws-access-key-id}}
    versioned_file: csi-cert.test.tgz
    bucket: csi-binaries
    secret_access_key: {{aws-secret-access-key}}

- name: github-release-csi
  type: github-release
  source:
    user: paulcwarren
    repository: csi-cert
    drafts: true
    access_token: {{github-release-token}}

#### End CSI resources ###############################################################################################

#### cf-deployment resources #########################################################################################

- name: cf-deployment-release-candidate
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: gorgophone-env-director-state
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    private_key: {{deployments-persi-key}}
    paths:
    - bbl-state.json
#- name: gorgophone-env-integration-configs
#  type: git
#  source:
#    branch: master
#    uri: git@github.com:cloudfoundry/gorgophone-env.git
#    private_key: {{deployments-persi-key}}
#    paths:
#    - integration_config.json
#    - wats_integration_config.json
#    - rats_integration_config.json
- name: gorgophone-env-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/gorgophone-env.git
    private_key: {{deployments-persi-key}}
    paths:
    - deployment-vars.yml
#    - datadog-deployment-vars.yml
#    - rds-vars.yml

#### End cf-deployment resources #####################################################################################

###################################### END RESOURCES SECTION #########################################################


######################################################################################################################
###################################### RESOURCE_TYPES SECTION ########################################################
######################################################################################################################
resource_types:
- name: bosh-config
  type: docker-image
  source:
    repository: dellemcdojo/bosh-config-resource
###################################### END RESOURCE_TYPES SECTION ####################################################


######################################################################################################################
###################################### JOBS SECTION ##################################################################
######################################################################################################################
jobs:

#### Setup related jobs ###############################################################################################
- name: nightly-stemcell
  plan:
  - aggregate:
    - get: nightly
      trigger: true
    - get: persi-ci
    - get: bosh-stemcell
      resource: aws-stemcell
    - get: github-release-dummy
  - put: dummy-deployment
    params:
      manifest: persi-ci/dummy.yml
      releases:
      - github-release-dummy/*.tgz
      stemcells:
      - bosh-stemcell/*.tgz
- name: bosh-cleanup
  serial: true
  plan:
  - aggregate:
    - get: persi-ci
    - get: nightly
      trigger: true
  - task: cleanup
    file: persi-ci/scripts/ci/bosh_cleanup.build.yml
    params:
      BOSH_PASSWORD: {{bosh-director-password}}
      BOSH_TARGET: {{bosh-director-ip}}
      BOSH_USER: {{bosh-director-username}}


#### End Setup ########################################################################################################

##### CEPH related jobs ################################################################################################
- name: teardown-cephfs-cluster
  serial_groups:
  - cephfs-deploy
  plan:
  - aggregate:
    - get: cephfs-bosh-release
    - get: aws-stemcell
      passed:
      - nightly-stemcell
    - get: deployments-persi
  - task: teardown
    file: cephfs-bosh-release/scripts/ci/teardown.build.yml
    params:
      BOSH_PASSWORD: {{bosh-director-password}}
      BOSH_TARGET: {{bosh-director-ip}}
      BOSH_USERNAME: {{bosh-director-username}}
      DEPLOYMENT_NAME: cephfs
- name: unit-cephfs-driver
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      trigger: true
  - task: build
    file: cephfs-bosh-release/scripts/ci/run_cephdriver_unit.build.yml
- name: unit-cephfs-broker
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      trigger: true
  - task: build
    file: cephfs-bosh-release/scripts/ci/run_cephbroker_unit.build.yml
- name: deploy-cephfs-cluster
  serial_groups:
  - cephfs-deploy
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      passed:
      - set-runtime-config
      trigger: true
    - get: cf-release
      passed:
      - create-cf-release
    - get: cephfs-bosh-release-tarball
      passed:
      - set-runtime-config
    - get: aws-stemcell
      passed:
      - nightly-stemcell
      trigger: true
    - get: deployments-persi
  - task: generate-deployment-manifests
    file: cephfs-bosh-release/scripts/ci/generate_deployment_manifests.build.yml
    params:
      DEPLOYMENTS_DIR: deployments-persi/persi-ci/deployments
      ENVIRONMENT_NAME: persi-cf
      INFRASTRUCTURE: aws
      USE_GARDEN_RUNC: false
      USE_SQL: false
      PATS_BROKER_USERNAME: {{pats-broker-username}}
      PATS_BROKER_PASSWORD: {{pats-broker-password}}
  - put: cephfs-cluster-deployment
    params:
      manifest: generated-manifest-ceph/cephfs-manifest.yml
      releases:
      - cephfs-bosh-release-tarball/*.tgz
      stemcells:
      - aws-stemcell/*.tgz
- name: create-cephfs-release
  serial_groups:
  - cephfs-deploy
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      passed:
      - unit-cephfs-broker
      - unit-cephfs-driver
      trigger: true
    - get: ceph-version
      resource: cephfs-version
      params:
        pre: rc
  - put: ceph-version
    resource: cephfs-version
    params:
      file: ceph-version/number
  - task: create-release
    file: cephfs-bosh-release/scripts/ci/create_cephfs_release.build.yml
  - put: cephfs-bosh-release-tarball
    params:
      file: created-cephfs-bosh-release/cephfs-*.tgz
- name: cephdriver-certification
  serial_groups:
  - cephfs-deploy
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      passed:
      - deploy-cephfs-cluster
      trigger: true
    - get: deployments-persi
      passed:
      - deploy-cephfs-cluster
  - task: certification
    privileged: true
    file: cephfs-bosh-release/scripts/ci/run_driver_cert.build.yml
- name: pats-cephfs
  serial_groups:
  - cf-deploy
  - diego-deploy
  - cephfs-deploy
  plan:
  - aggregate:
    - get: cephfs-bosh-release
      passed:
      - diego-deploy
      trigger: true
    - get: diego-deployment
      passed:
      - diego-deploy
      trigger: true
    - get: cf-deployment
      passed:
      - cf-deploy
      trigger: true
  - task: run-pats
    file: cephfs-bosh-release/scripts/ci/run_pats_ceph.build.yml
    params:
      APPLICATION_PATH: cephfs-bosh-release/assets/pora
      APPS_DOMAIN: persi.cf-app.com
      BROKER_PASSWORD: {{pats-broker-password}}
      BROKER_URL: http://ceph-broker.persi.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      CF_API_ENDPOINT: api.persi.cf-app.com
      CF_PASSWORD: {{cf-password}}
      CF_USERNAME: {{cf-username}}
      PLAN_NAME: ceph-plan
      SERVICE_NAME: ceph-service
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false

#### END CEPH #########################################################################################################

#### Local Volume related jobs ########################################################################################
- name: localdriver-unit
  plan:
  - get: local-volume-release
    trigger: true
  - task: build
    file: local-volume-release/scripts/ci/run_driver_unit.build.yml
- name: localbroker-unit
  plan:
  - get: local-volume-release
    trigger: true
  - task: build
    file: local-volume-release/scripts/ci/run_broker_unit.build.yml
- name: localdriver-certification
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - localdriver-unit
      trigger: true
  - task: build
    file: local-volume-release/scripts/ci/run_driver_cert.build.yml
- name: deploy-local-broker
  serial_groups:
  - localbroker-deploy
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - set-runtime-config
      trigger: true
    - get: diego-release
      passed:
      - diego-deploy
    - get: cf-release
      passed:
      - cf-deploy
    - get: local-volume-release-tarball
      passed:
      - set-runtime-config
    - get: aws-stemcell
      passed:
      - nightly-stemcell
      trigger: true
    - get: deployments-persi
  - task: generate-deployment-manifests
    file: local-volume-release/scripts/ci/generate_deployment_manifests.build.yml
    params:
      BOSH_PASSWORD: {{bosh-director-password}}
      BOSH_TARGET: {{bosh-director-ip}}
      BOSH_USERNAME: {{bosh-director-username}}
      DEPLOYMENTS_DIR: deployments-persi/persi-ci/deployments
      ENVIRONMENT_NAME: persi-cf
      INFRASTRUCTURE: aws
  - put: local-volume-deployment
    params:
      manifest: generated-manifest-localvolume/localvolume-manifest.yml
      releases:
      - local-volume-release-tarball/*.tgz
      stemcells:
      - aws-stemcell/*.tgz
- name: localdriver-docker-certification
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - localdriver-unit
      trigger: true
  - task: build
    privileged: true
    file: local-volume-release/scripts/ci/run_docker_cert.build.yml
- name: create-local-volume-release
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - localdriver-certification
      - localdriver-docker-certification
      - localbroker-unit
      trigger: true
    - get: local-volume-version
      resource: localvolume-version
      params:
        pre: rc
  - put: local-volume-version
    resource: localvolume-version
    params:
      file: local-volume-version/number
  - task: create-release
    file: local-volume-release/scripts/ci/create_local_volume_release.build.yml
  - put: local-volume-release-tarball
    params:
      file: created-local-volume-release/local*.tgz
- name: pats-local
  serial_groups:
  - cf-deploy
  - diego-deploy
  - localbroker-deploy
  plan:
  - aggregate:
    - get: local-volume-release
      passed:
      - deploy-local-broker
      trigger: true
    - get: diego-deployment
      passed:
      - diego-deploy
      trigger: true
    - get: cf-deployment
      passed:
      - cf-deploy
      trigger: true
  - task: run-pats
    file: local-volume-release/scripts/ci/run_pats_localvolume.build.yml
    params:
      APPLICATION_PATH: local-volume-release/assets/pora
      APPS_DOMAIN: persi.cf-app.com
      BROKER_PASSWORD: {{pats-broker-password}}
      BROKER_URL: http://local-broker.persi.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      CF_API_ENDPOINT: api.persi.cf-app.com
      CF_PASSWORD: {{cf-password}}
      CF_USERNAME: {{cf-username}}
      PLAN_NAME: local-plan
      SERVICE_NAME: local-service
      TEST_MULTI_CELL: false
      TEST_MOUNT_OPTIONS: false

#### END Local volume #################################################################################################

#### NFS related jobs #################################################################################################
- name: deploy-nfs-test-server
  serial_groups:
  - nfs-test-server-deploy
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - set-runtime-config
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - set-runtime-config
    - get: aws-stemcell
      passed:
      - nightly-stemcell
      trigger: true
    - get: persi-ci
    - get: deployments-persi
  - task: generate-deployment-manifests
    file: nfs-volume-release/scripts/ci/generate_nfs_test_server_manifests.build.yml
    params:
      BOSH_PASSWORD: {{bosh-director-password}}
      BOSH_TARGET: {{bosh-director-ip}}
      BOSH_USERNAME: {{bosh-director-username}}
      DEPLOYMENTS_DIR: deployments-persi/persi-ci/deployments
      ENVIRONMENT_NAME: persi-cf
      INFRASTRUCTURE: aws
  - put: nfs-test-server-deployment
    params:
      manifest: generated-manifest-nfs/nfs-test-server-manifest.yml
      releases:
      - nfs-volume-release-tarball/*.tgz
      stemcells:
      - aws-stemcell/*.tgz
- name: nfsdriver-unit
  plan:
  - get: nfs-volume-release
    trigger: true
  - task: build
    file: nfs-volume-release/scripts/ci/run_driver_unit.build.yml
- name: nfsbroker-unit
  plan:
  - get: nfs-volume-release
    trigger: true
  - task: build
    file: nfs-volume-release/scripts/ci/run_broker_unit.build.yml
- name: nfsdriver-certification
  serial_groups:
  - nfs-test-server-deployment
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-nfs-test-server
      trigger: true
    - get: lib-nfs
    - get: fuse-nfs
  - task: fuse-nfs-cert
    privileged: true
    file: nfs-volume-release/scripts/ci/run_fuse_nfs_cert.build.yml
    params:
      FUSE_MOUNT: nfs://10.10.200.72/export2/certs?uid=3000&gid=3050
      NFS_MOUNT: 10.10.200.72:/export2/certs
  - task: driver-cert
    privileged: true
    file: nfs-volume-release/scripts/ci/run_driver_cert_tcp.build.yml
    params:
      SOURCE: nfs://10.10.200.72/export2/certs
- name: create-nfs-volume-release
  serial_groups:
  - nfs-version
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - nfsdriver-unit
      - nfsbroker-unit
      trigger: true
    - get: nfs-volume-version
      resource: nfsvolume-version
      params:
        pre: rc
  - put: nfs-volume-version
    resource: nfsvolume-version
    params:
      file: nfs-volume-version/number
  - task: create-release
    file: nfs-volume-release/scripts/ci/create_nfs_volume_release.build.yml
  - put: nfs-volume-release-tarball
    params:
      file: created-nfs-volume-release/nfs*.tgz
- name: deploy-nfs-broker
  serial_groups:
  - nfsbroker-deploy
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - set-runtime-config
      trigger: true
    - get: cf-release
      passed:
      - cf-deploy
    - get: nfs-volume-release-tarball
      passed:
      - set-runtime-config
    - get: aws-stemcell
      passed:
      - nightly-stemcell
      trigger: true
    - get: deployments-persi
  - task: generate-deployment-manifests
    file: nfs-volume-release/scripts/ci/generate_deployment_manifests.build.yml
    params:
      BOSH_PASSWORD: {{bosh-director-password}}
      BOSH_TARGET: {{bosh-director-ip}}
      BOSH_USERNAME: {{bosh-director-username}}
      DEPLOYMENTS_DIR: deployments-persi/persi-ci/deployments
      ENVIRONMENT_NAME: persi-cf
      INFRASTRUCTURE: aws
  - put: nfs-volume-deployment
    params:
      manifest: generated-manifest-nfs/nfsvolume-manifest.yml
      releases:
      - nfs-volume-release-tarball/*.tgz
      stemcells:
      - aws-stemcell/*.tgz
- name: pats-nfs
  serial_groups:
  - cf-deploy
  - diego-deploy
  - nfsbroker-deploy
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-nfs-broker
      trigger: true
    - get: diego-deployment
      passed:
      - diego-deploy
      trigger: true
    - get: cf-deployment
      passed:
      - cf-deploy
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - deploy-nfs-broker
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: nfs-volume-release #dummy input
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: persi.cf-app.com
      BROKER_PASSWORD: {{pats-broker-password}}
      BROKER_URL: http://nfs-broker.persi.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      CF_API_ENDPOINT: api.persi.cf-app.com
      CF_PASSWORD: {{cf-password}}
      CF_USERNAME: {{cf-username}}
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      #SERVER_ADDRESS: {{existing-nfs-server}}
      #SHARE: /var/vcap/store
      SERVER_ADDRESS: 10.10.200.72
      SHARE: /export/users
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: true
- name: pats-nfs-docker
  serial_groups:
  - cf-deploy
  - diego-deploy
  - nfsbroker-deploy
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-nfs-broker
      trigger: true
    - get: diego-deployment
      passed:
      - diego-deploy
      trigger: true
    - get: cf-deployment
      passed:
      - cf-deploy
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - deploy-nfs-broker
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: nfs-volume-release #dummy input
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: persi.cf-app.com
      BROKER_PASSWORD: {{pats-broker-password}}
      BROKER_URL: http://nfs-broker.persi.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      CF_API_ENDPOINT: api.persi.cf-app.com
      CF_PASSWORD: {{cf-password}}
      CF_USERNAME: {{cf-username}}
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      SERVER_ADDRESS: 10.10.200.72
      SHARE: /export/users
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: true
      TEST_DOCKER_PORA: true
- name: pats-nfs-ldap
  serial_groups:
  - cf-deploy
  - diego-deploy
  - nfsbroker-deploy
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-nfs-broker
      trigger: true
    - get: diego-deployment
      passed:
      - diego-deploy
      trigger: true
    - get: cf-deployment
      passed:
      - cf-deploy
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - deploy-nfs-broker
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: nfs-volume-release #dummy input
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: persi.cf-app.com
      BROKER_PASSWORD: {{pats-broker-password}}
      BROKER_URL: http://nfs-broker.persi.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      CF_API_ENDPOINT: api.persi.cf-app.com
      CF_PASSWORD: {{cf-password}}
      CF_USERNAME: {{cf-username}}
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      #SERVER_ADDRESS: {{existing-nfs-server}}
      #SHARE: /var/vcap/store
      SERVER_ADDRESS: 10.10.200.72
      SHARE: /export/users
      BIND_CONFIG: '{\"username\":\"user1000\",\"password\":\"abc123!\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false
      TEST_READ_ONLY: false

- name: pats-nfs-pushed-broker
  serial_groups:
  - cf-deploy
  - diego-deploy
  - nfsbroker-deploy
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-nfs-broker
      trigger: true
    - get: diego-deployment
      passed:
      - diego-deploy
      trigger: true
    - get: cf-deployment
      passed:
      - cf-deploy
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - deploy-nfs-broker
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: nfs-volume-release #dummy input
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: persi.cf-app.com
      BROKER_PASSWORD: admin
      BROKER_URL: http://nfsbrokerpatsapp.persi.cf-app.com
      BROKER_USER: admin
      CF_API_ENDPOINT: api.persi.cf-app.com
      CF_PASSWORD: {{cf-password}}
      CF_USERNAME: {{cf-username}}
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      SERVER_ADDRESS: 10.10.200.72
      SHARE: /export/users
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      PUSHED_BROKER_NAME: nfsbrokerpatsapp
      DB_DRIVER_NAME: mysql
      DB_HOST: {{nfsbroker-mysql-host}}
      DB_PORT: 3306
      DB_NAME: nfsbroker
      DB_USERNAME: {{nfsbroker-mysql-user}}
      DB_PASSWORD: {{nfsbroker-mysql-password}}
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: true


- name: shipit-nfs
  serial_groups:
  - nfs-version
  plan:
  - aggregate:
    - get: persi-ci
    - get: nfs-volume-release-tarball
      passed:
      - pats-nfs
    - get: nfs-volume-release
      passed:
      - pats-nfs
    - get: nfs-volume-version
      resource: nfsvolume-version
      params:
        bump: final
  - task: finalize-release
    file: persi-ci/scripts/ci/finalize_release.build.yml
    params:
      VERSION: nfs-volume-version
      RELEASE: nfs-volume-release
      TARBALL: nfs-volume-release-tarball
      BASE_RELEASE_NAME: nfs-volume
      GIT_USER: {{github-user}}
      GIT_EMAIL: {{github-email}}
      S3_ACCESS_KEY_ID: {{nfsvolume-uploader_aws_ID}}
      S3_ACCESS_KEY: {{nfsvolume-uploader_aws_secret}}
      S3_BUCKET_NAME: {{nfsvolume-uploader_s3_bucket}}
  - aggregate:
    - put: nfs-volume-version
      resource: nfsvolume-version
      params:
        file: nfs-volume-version/number
    - put: nfsvolume-final-release
      params:
        file: finalized-release/nfs-volume-*.tgz
  - task: generate-release
    file: persi-ci/scripts/ci/generate_github_release.build.yml
    params:
      VERSION: nfs-volume-version
      RELEASE: nfs-volume-release
      BASE_RELEASE_NAME: nfs-volume
  - aggregate:
    - put: nfs-volume-release
      params:
        repository: finalized-release/nfs-volume-release
        tag: nfs-volume-version/number
        tag_prefix: v
    - put: github-release-nfs
      params:
        commitish: generated-release/commitish
        name: generated-release/name
        tag: generated-release/version
        globs: []
        # - nfsvolume-final-release/*.tgz
    - put: nfsvolume-version
      params:
        bump: patch
- name: manual-bump-nfs-patch
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: patch
- name: manual-bump-nfs-minor
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: minor
- name: manual-bump-nfs-major
  serial_groups:
  - nfs-version
  plan:
  - get: nfs-volume-version
    resource: nfsvolume-version
    params:
      bump: final
  - put: nfsvolume-version
    params:
      bump: major
#### END NFS #########################################################################################################

#### Isilon related jobs #############################################################################################
- name: create-isilon-volume
  plan:
  - aggregate:
    - get: deployments-persi
    - get: diego-deployment
      passed:
      - diego-deploy
      trigger: true
  - task: create-share
    file: deployments-persi/persi-ci/deployments/isilon-volume/create-share.build.yml
    params:
      BOSH_PASSWORD: {{bosh-director-password}}
      BOSH_TARGET: {{bosh-director-ip}}
      BOSH_USERNAME: {{bosh-director-username}}

- name: pats-isilon
  serial_groups:
  - cf-deploy
  - diego-deploy
  - nfsbroker-deploy
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - deploy-nfs-broker
      trigger: true
    - get: diego-deployment
      passed:
      - create-isilon-volume
      trigger: true
    - get: cf-deployment
      passed:
      - cf-deploy
      trigger: true
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: nfs-volume-release #dummy input
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: persi.cf-app.com
      BROKER_PASSWORD: {{pats-broker-password}}
      BROKER_URL: http://nfs-broker.persi.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      CF_API_ENDPOINT: api.persi.cf-app.com
      CF_PASSWORD: {{cf-password}}
      CF_USERNAME: {{cf-username}}
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      SERVER_ADDRESS: isilon.persi.cf-app.com
      SHARE: /ifs/persi-pats
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false
      TEST_READ_ONLY: false

#### END Isilon ######################################################################################################

#### EFS related jobs ################################################################################################
- name: efsdriver-unit
  plan:
  - get: efs-volume-release
    trigger: true
  - task: build
    file: efs-volume-release/scripts/ci/run_driver_unit.build.yml
- name: efsbroker-unit
  plan:
  - get: efs-volume-release
    trigger: true
  - task: build
    file: efs-volume-release/scripts/ci/run_broker_unit.build.yml
- name: efsdriver-certification
  plan:
  - aggregate:
    - get: efs-volume-release
      passed:
      - efsdriver-unit
      - efsbroker-unit
      trigger: true
  - task: build
    privileged: true
    file: efs-volume-release/scripts/ci/run_driver_cert.build.yml
- name: create-efs-volume-release
  plan:
  - aggregate:
    - get: efs-volume-release
      passed:
      - efsdriver-certification
      - efsdriver-unit
      - efsbroker-unit
      trigger: true
    - get: efs-volume-version
      resource: efsvolume-version
      params:
        pre: rc
  - put: efs-volume-version
    resource: efsvolume-version
    params:
      file: efs-volume-version/number
  - task: create-release
    file: efs-volume-release/scripts/ci/create_efs_volume_release.build.yml
  - put: efs-volume-release-tarball
    params:
      file: created-efs-volume-release/efs*.tgz
- name: deploy-efs-broker
  serial_groups:
  - efsbroker-deploy
  plan:
  - aggregate:
    - get: efs-volume-release
      passed:
      - set-runtime-config
      - create-efs-volume-release
      - efsdriver-certification
      - efsdriver-unit
      - efsbroker-unit
      trigger: true
    - get: cf-release
      passed:
      - cf-deploy
    - get: efs-volume-release-tarball
      passed:
      - set-runtime-config
    - get: aws-stemcell
      passed:
      - nightly-stemcell
      trigger: true
    - get: deployments-persi
  - task: generate-deployment-manifests
    file: efs-volume-release/scripts/ci/generate_deployment_manifests.build.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{aws-secret-access-key}}
      AWS_SECURITY_GROUP: sg-18931265
      AWS_SUBNET_ID: subnet-6e5d3444
      BOSH_PASSWORD: {{bosh-director-password}}
      BOSH_TARGET: {{bosh-director-ip}}
      BOSH_USERNAME: {{bosh-director-username}}
      DEPLOYMENTS_DIR: deployments-persi/persi-ci/deployments
      ENVIRONMENT_NAME: persi-cf
      INFRASTRUCTURE: aws
  - put: efs-volume-deployment
    params:
      manifest: generated-manifest-efs/efsvolume-manifest.yml
      releases:
      - efs-volume-release-tarball/*.tgz
      stemcells:
      - aws-stemcell/*.tgz
- name: pats-efs
  serial_groups:
  - cf-deploy
  - diego-deploy
  - efsbroker-deploy
  plan:
  - aggregate:
    - get: efs-volume-release
      passed:
      - deploy-efs-broker
      trigger: true
    - get: diego-deployment
      passed:
      - diego-deploy
      trigger: true
    - get: cf-deployment
      passed:
      - cf-deploy
      trigger: true
  - task: run-pats
    file: efs-volume-release/scripts/ci/run_pats_efsvolume.build.yml
    params:
      APPLICATION_PATH: efs-volume-release/assets/pora
      APPS_DOMAIN: persi.cf-app.com
      BROKER_PASSWORD: {{pats-broker-password}}
      BROKER_URL: http://efs-broker.persi.cf-app.com
      BROKER_USER: {{pats-broker-username}}
      CF_API_ENDPOINT: api.persi.cf-app.com
      CF_PASSWORD: {{cf-password}}
      CF_USERNAME: {{cf-username}}
      PLAN_NAME: generalPurpose
      SERVICE_NAME: efs
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false

#### END EFS ##########################################################################################################

#### DataDog related jobs #############################################################################################
- name: deploy-datadog-firehose-nozzle
  plan:
  - aggregate:
    - get: datadog-firehose-nozzle-release
    - get: aws-stemcell
      passed:
      - nightly-stemcell
      trigger: true
    - get: deployments-persi
  - put: datadog-firehose-nozzle-deployment
    params:
      manifest: deployments-persi/persi-ci/deployments/persi-cf/deployments/datadog-firehose-nozzle/datadog.yml
      releases:
      - datadog-firehose-nozzle-release/*.tgz
      stemcells:
      - aws-stemcell/*.tgz
#### END DATADOG ######################################################################################################

#### CF related jobs ##################################################################################################
- name: volman-unit
  plan:
  - aggregate:
    - get: diego-release
      trigger: true
    - get: persi-ci
  - task: run-unit
    file: persi-ci/scripts/ci/run_volman_unit.build.yml
- name: volman-inigo
  plan:
  - aggregate:
    - get: diego-release
      trigger: true
    - get: garden-runc-release-tarball
    - get: garden-runc-release-master
      params: {submodules: none}
    - get: routing-release
      params: { submodules: none }
    - get: routing-release-tarball
    - get: diego-ci
    - get: persi-ci
  - task: garden-runc-release
    file: diego-ci/concourse/checkout_garden_runc.build.yml
  - task: routing-release
    file: diego-ci/concourse/checkout_routing.build.yml
    input_mapping:
      routing-release-master: routing-release
  - task: build
    privileged: true
    file: persi-ci/scripts/ci/run_volman_inigo.build.yml
    params:
      DEFAULT_EVENTUALLY_TIMEOUT: 5m
- name: create-cf-release
  plan:
  - aggregate:
    - get: cf-release
      trigger: true
    - get: persi-ci
  - task: create-release
    file: persi-ci/scripts/ci/create_cf_dev_release.build.yml
  - put: cf-dev-release
    params:
      file: created-cf-release/cf-dev-release-*.tgz

- name: cf-deploy
  serial_groups:
  - cf-deploy
  plan:
  - aggregate:
    - get: cf-dev-release
    - get: diego-release
    - get: cf-release
      passed:
      - create-cf-release
      trigger: true
    - get: persi-ci
      trigger: true
    - get: bosh-stemcell
      passed:
      - nightly-stemcell
      trigger: true
      resource: aws-stemcell
    - get: deployments-persi
  - task: generate-deployment-manifests
    file: persi-ci/scripts/ci/generate_deployment_manifests.build.yml
    params:
      DEPLOYMENTS_DIR: deployments-persi/persi-ci/deployments
      ENVIRONMENT_NAME: persi-cf
      INFRASTRUCTURE: aws
      USE_GARDEN_RUNC: false
      USE_SQL: false
  - put: cf-deployment
    params:
      manifest: generated-manifest-persi/cf-deployment.yml
      releases:
      - cf-dev-release/*.tgz
      stemcells:
      - bosh-stemcell/*.tgz
  - task: wait-for-cf
    file: persi-ci/scripts/ci/wait_for_cf.build.yml
    params:
      CF_API_ENDPOINT: api.persi.cf-app.com

- name: create-diego-release
  plan:
  - aggregate:
    - get: diego-release
      trigger: true
      passed:
      - volman-unit
      - volman-inigo
    - get: persi-ci
      trigger: true
    - get: version
      resource: diego-version
      params:
        pre: dev
  - put: version
    resource: diego-version
    params:
      file: version/number
  - task: create-release
    file: persi-ci/scripts/ci/create_diego_dev_release.build.yml
  - put: diego-dev-release
    params:
      file: created-diego-release/diego-*.tgz


- name: set-runtime-config # install drivers as add-ons here
  serial_groups:
  - diego-deploy
  plan:
  - aggregate:
    - get: persi-ci
      trigger: true
    - get: cephfs-bosh-release
      passed:
      - create-cephfs-release
      trigger: true
    - get: cephfs-bosh-release-tarball
      passed:
      - create-cephfs-release
      trigger: true
    - get: efs-volume-release
      passed:
      - create-efs-volume-release
      trigger: true
    - get: efs-volume-release-tarball
      passed:
      - create-efs-volume-release
      trigger: true
    - get: local-volume-release
      passed:
      - create-local-volume-release
      trigger: true
    - get: local-volume-release-tarball
      passed:
      - create-local-volume-release
      trigger: true
    - get: nfs-volume-release
      passed:
      - create-nfs-volume-release
    - get: nfs-volume-release-tarball
      passed:
      - create-nfs-volume-release
      trigger: true
  - task: update_runtime_config
    file: persi-ci/scripts/ci/update_runtime_config.build.yml
    params:
      LDAP_SVC_USER: {{ldap-svc-user}}
      LDAP_SVC_PASS: {{ldap-svc-pass}}
      LDAP_HOST: {{ldap-host}}
      LDAP_PORT: 389
      LDAP_PROTO: tcp
      LDAP_USER_FQDN: {{ldap-user-fqdn}}
  - put: runtime-config
    params:
      manifest: runtime-config-out/addons.yml
      releases:
      - cephfs-bosh-release-tarball/cephfs*.tgz
      - local-volume-release-tarball/local*.tgz
      - efs-volume-release-tarball/efs*.tgz
      - nfs-volume-release-tarball/nfs*.tgz

- name: diego-deploy
  serial_groups:
  - diego-deploy
  plan:
  - aggregate:
    - get: diego-dev-release
      passed:
      - create-diego-release
      trigger: true
      params:
        submodules: none
    - get: diego-release
      passed:
      - create-diego-release
    - get: persi-ci
      trigger: true
    - get: cf-release
      passed:
      - create-cf-release
      trigger: true
      params:
        submodules:
        - src/loggregator
    - get: cf-dev-release
    - get: garden-runc-release-tarball
    - get: cflinuxfs2-release-tarball
    - get: local-volume-release
      passed:
      - set-runtime-config
      trigger: true
    - get: efs-volume-release
      passed:
      - set-runtime-config
      trigger: true
    - get: nfs-volume-release
      passed:
      - set-runtime-config
      trigger: true
    - get: cephfs-bosh-release
      passed:
      - set-runtime-config
      trigger: true
    - get: bosh-stemcell
      passed:
      - nightly-stemcell
      trigger: true
      resource: aws-stemcell
    - get: deployments-persi
  - task: generate-deployment-manifests
    file: persi-ci/scripts/ci/generate_deployment_manifests.build.yml
    params:
      DEPLOYMENTS_DIR: deployments-persi/persi-ci/deployments
      ENVIRONMENT_NAME: persi-cf
      INFRASTRUCTURE: aws
      USE_GARDEN_RUNC: true
      USE_SQL: false
  - put: diego-deployment
    params:
      manifest: generated-manifest-persi/diego-deployment.yml
      releases:
      - cf-dev-release/*.tgz
      - diego-dev-release/*.tgz
      - garden-runc-release-tarball/*.tgz
      - cflinuxfs2-release-tarball/*.tgz
      stemcells:
      - bosh-stemcell/*.tgz
#### END CF ###########################################################################################################

#### START ECS related jobs ###########################################################################################
- name: create-ecs-release
  plan:
  - aggregate:
    - get: ecs-release
      trigger: true
    - get: persi-ci
    - get: ecs-version
      resource: ecs-version
      params:
        pre: rc
  - put: ecs-version
    resource: ecs-version
    params:
      file: ecs-version/number
  - task: create-release
    file: persi-ci/scripts/ci/create_ecs_release.build.yml
  - put: ecs-release-tarball
    params:
      file: created-ecs-release/ecs*.tgz
- name: ecs-broker-unit
  plan:
  - aggregate:
    - get: persi-ci
    - get: ecs-cf-service-broker
      trigger: true
  - task: ecs-broker-unit
    file: persi-ci/scripts/ci/ecs_broker_unit.build.yml
- name: deploy-ecs
  serial_groups:
  - ecs-deploy
  plan:
  - aggregate:
    - get: ecs-release
      passed:
      - create-ecs-release
      trigger: true
    - get: ecs-release-tarball
      passed:
      - create-ecs-release
    - get: aws-stemcell
      passed:
      - nightly-stemcell
      trigger: true
    - get: deployments-persi
    - get: persi-ci
# TODO-stop hard coding the manifest!!!
#  - task: generate-deployment-manifests
#    file: nfs-volume-release/scripts/ci/generate_nfs_test_server_manifests.build.yml
#    params:
#      BOSH_PASSWORD: {{bosh-director-password}}
#      BOSH_TARGET: {{bosh-director-ip}}
#      BOSH_USERNAME: {{bosh-director-username}}
#      DEPLOYMENTS_DIR: deployments-persi/persi-ci/deployments
#      ENVIRONMENT_NAME: persi-cf
#      INFRASTRUCTURE: aws
  - put: ecs-deployment
    params:
      manifest: deployments-persi/ecs-manifest.yml
      releases:
      - ecs-release-tarball/*.tgz
      stemcells:
      - aws-stemcell/*.tgz
  - task: run-prov-errand
    file: persi-ci/scripts/ci/run_ecs_provision_errand.build.yml
    params:
      BOSH_PASSWORD: {{bosh-director-password}}
      BOSH_TARGET: {{bosh-director-ip}}
      BOSH_USER: {{bosh-director-username}}
- name: deploy-ecs-broker
  serial_groups:
  - ecs-deploy
  plan:
  - aggregate:
    - get: ecs-release
      passed:
      - deploy-ecs
      trigger: true
    - get: ecs-release-tarball
      passed:
      - deploy-ecs
    - get: aws-stemcell
      passed:
      - nightly-stemcell
      trigger: true
    - get: deployments-persi
    - get: persi-ci
  - task: generate-ecs-broker-manifests
    file: ecs-release/scripts/ci/generate_ecs_broker_manifests.build.yml
    params:
      DEPLOYMENTS_DIR: deployments-persi/persi-ci/deployments
      CF_APP_DOMAIN: persi.cf-app.com
      ECS_BASE_URL: https://34.206.233.96:4443
      BROKER_PASSWORD: {{pats-broker-password}}
      BROKER_USER: {{pats-broker-username}}
      CF_PASSWORD: {{cf-password}}
      CF_USER: {{cf-username}}
      ECS_PASSWORD: {{ecs-password}}
      ECS_USERNAME: {{ecs-user}}
      ENCRYPTION_KEY: {{ecs-secret}}
      ERRAND_PUBLIC_IP: 34.200.85.71
      ERRAND_SUBNET_NAME: nfsvolume-subnet
      MANAGEMENT_ENDPOINT: https://34.206.233.96:4443
      ECS_NAMESPACE: bosh-namespace
      OBJECT_ENDPOINT: http://bosh-namespace.34.206.233.96.nip.io:9020
      REPOSITORY_ENDPOINT: http://bosh-namespace.34.206.233.96.nip.io:9020
      ECS_BROKER_SECRET: {{ecs-secret}}
  - put: ecs-broker-deployment
    params:
      manifest: generated-manifest-ecs-broker/ecsbroker-aws-manifest.yml
      releases:
      - ecs-release-tarball/*.tgz
      stemcells:
      - aws-stemcell/*.tgz
  - task: run-broker-errand
    file: persi-ci/scripts/ci/run_ecs_broker_errand.build.yml
    params:
      BOSH_PASSWORD: {{bosh-director-password}}
      BOSH_TARGET: {{bosh-director-ip}}
      BOSH_USER: {{bosh-director-username}}
- name: pats-ecs
  serial_groups:
  - cf-deploy
  - diego-deploy
  - ecs-deploy
  plan:
  - aggregate:
    - get: ecs-release
      passed:
      - deploy-ecs-broker
      trigger: true
    - get: nfs-volume-release
    - get: diego-deployment
      passed:
      - diego-deploy
      trigger: true
    - get: cf-deployment
      passed:
      - cf-deploy
      trigger: true
    - get: deployments-persi
    - get: persi-ci
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: nfs-volume-release #dummy input
    params:
      APPS_DOMAIN: persi.cf-app.com
      BROKER_PASSWORD: {{pats-broker-password}}
      BROKER_URL: http://ecs-v1.persi.cf-app.com
      BROKER_USER: user
      CF_API_ENDPOINT: api.persi.cf-app.com
      CF_PASSWORD: {{cf-password}}
      CF_USERNAME: {{cf-username}}
      PLAN_NAME: 5gb
      SERVICE_NAME: ecs-file-bucket
      SERVER_ADDRESS: NotUsed
      SHARE: NotUsed
      BIND_CONFIG: '{}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false
      TEST_READ_ONLY: false

#### END ECS ##########################################################################################################

#### START CSI related jobs ###########################################################################################
- name: unit-local-controller-plugin
  plan:
  - aggregate:
    - get: csi-local-volume-release
      trigger: true
  - task: local-controller-plugin-unit
    file: csi-local-volume-release/scripts/ci/local-controller-plugin-unit.build.yml

- name: unit-local-node-plugin
  plan:
  - aggregate:
    - get: csi-local-volume-release
      trigger: true
  - task: local-node-plugin-unit
    file: csi-local-volume-release/scripts/ci/local-node-plugin-unit.build.yml

- name: csi-plugin-certification
  plan:
  - aggregate:
    - get: csi-local-volume-release
      passed:
      - unit-local-controller-plugin
      - unit-local-node-plugin
      trigger: true
    - get: csi-cert
      trigger: true
  - task: csi-plugin-certification
    file: csi-local-volume-release/scripts/ci/csi-plugin-certification.build.yml

- name: certification-test-builds
  plan:
  - aggregate:
    - get: csi-local-volume-release
      passed:
      - csi-plugin-certification
      trigger: true
    - get: csi-cert
      passed:
      - csi-plugin-certification
      trigger: true
  - task: certificate-test-build
    file: csi-cert/scripts/ci/certificate-test-build.build.yml
  - put: csi-binaries
    params:
      file: binaries/csi-cert.test.tgz

- name: certification-test-publish
  plan:
  - aggregate:
    - get: persi-ci
    - get: csi-version
    - get: csi-binaries
    - get: csi-cert
      passed:
      - certification-test-builds

  - task: generate-release
    file: persi-ci/scripts/ci/generate_csi_github_release.build.yml
    params:
      VERSION: csi-version
      RELEASE: csi-cert
      BASE_RELEASE_NAME: csi-cert

  - put: github-release-csi
    params:
      name: generated-release/name
      tag: generated-release/version
      globs:
      - csi-binaries/*.tgz

  - put: csi-version
    params:
      bump: minor

#### END CSI related jobs ############################################################################################

#### START cf-deployment related jobs ################################################################################

- name: setup-cf-infrastructure
  serial_groups: [gorgophone]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: gorgophone-env-director-state
    - get: cf-deployment-release-candidate
    - get: gorgophone-env-vars-store
    - get: persi-ci
    - get: diego-dev-release
      passed: [ create-diego-release ]
      trigger: true
    - get: diego-version
      passed: [ create-diego-release ]
    - get: nfs-volume-release
      passed: [ create-nfs-volume-release ]
    - get: nfs-volume-release-tarball
      passed: [ create-nfs-volume-release ]
      trigger: true
    - get: nfsvolume-version
      passed: [ create-nfs-volume-release ]
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: aws
      BBL_AWS_REGION: us-west-1
      BBL_AWS_ACCESS_KEY_ID: {{gorgophone_aws_access_key_id}}
      BBL_AWS_SECRET_ACCESS_KEY: {{gorgophone_aws_secret_access_key}}
      BBL_LB_CERT: {{gorgophone_lbs_ssl_cert}}
      BBL_LB_KEY: {{gorgophone_lbs_ssl_signing_key}}
      BBL_ENV_NAME: gorgophone
    input_mapping:
      bbl-state: gorgophone-env-director-state
      ops-files: gorgophone-env-director-state #placeholder since we don't use ops files here yet
    ensure:
      put: gorgophone-env-director-state
      params:
        repository: updated-bbl-state
        rebase: true
  - task: bosh-upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment: cf-deployment-release-candidate
      bbl-state: gorgophone-env-director-state
    params:
      INFRASTRUCTURE: aws
  - task: collect-tarballs
    file: persi-ci/scripts/ci/collect-tarballs.build.yml
    params: {}
    input_mapping:
      persi-ci: persi-ci
      diego-tarball: diego-dev-release
      nfs-tarball: nfs-volume-release-tarball
      diego-version: diego-version
      nfs-version: nfsvolume-version
  - task: collect-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-release-candidate
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/enable-volume-service-nfs.yml operations/enable-nfs-test-server.yml operations/enable-ldap-nfs.yml"
  - task: collect-more-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: "operations/update-releases.yml"
  - task: add-tarballs
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: collected-ops-files
      new-ops-files: collected-tarballs
    params:
      BASE_OPS_FILE_DIR: "."
      NEW_OPS_FILES: "diego.tgz nfs.tgz"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    params:
      LDAP_SVC_USER: {{ldap-svc-user}}
      LDAP_SVC_PASS: {{ldap-svc-pass}}
      LDAP_HOST: {{ldap-host}}
      LDAP_PORT: 389
      LDAP_PROTO: tcp
      LDAP_USER_FQDN: {{ldap-user-fqdn}}
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      cf-deployment: cf-deployment-release-candidate
      vars-store: gorgophone-env-vars-store
      bbl-state: gorgophone-env-director-state
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      MANIFEST_FILE: cf-deployment.yml
      SYSTEM_DOMAIN: gorgophone.cf-app.com # not used, this is a required by the task
      VARS_STORE_FILE: deployment-vars.yml
      VARS_FILES: "nfs-vars.yml"
      OPS_FILES: "operations/aws.yml operations/scale-to-one-az.yml operations/enable-volume-service-nfs.yml operations/enable-nfs-test-server.yml operations/update-releases.yml operations/enable-ldap-nfs.yml"
    ensure:
      put: gorgophone-env-vars-store
      params:
        repository: updated-vars-store
        rebase: true

- name: pats-isilon-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://nfs-broker.gorgophone.cf-app.com
      BROKER_USER: nfs-broker
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      SERVER_ADDRESS: isilon.persi.cf-app.com
      SHARE: /ifs/persi-pats
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false
      TEST_READ_ONLY: true

- name: pats-nfs-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://nfs-broker.gorgophone.cf-app.com
      BROKER_USER: nfs-broker
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      SERVER_ADDRESS: nfstestserver.service.cf.internal
      SHARE: /export/users
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: true
      TEST_READ_ONLY: true

- name: pats-nfs-docker-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://nfs-broker.gorgophone.cf-app.com
      BROKER_USER: nfs-broker
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      SERVER_ADDRESS: nfstestserver.service.cf.internal
      SHARE: /export/users
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: true
      TEST_READ_ONLY: true
      TEST_DOCKER_PORA: true

- name: pats-nfs-ldap-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_URL: http://nfs-broker.gorgophone.cf-app.com
      BROKER_USER: nfs-broker
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      SERVER_ADDRESS: nfstestserver.service.cf.internal
      SHARE: /export/users
      BIND_CONFIG: '{\"username\":\"user1000\",\"password\":\"abc123!\"}'
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: false
      TEST_READ_ONLY: false
      TEST_DOCKER_PORA: true

- name: pats-nfs-pushed-broker-cf-deployment
  serial_groups:
  - gorgophone
  plan:
  - aggregate:
    - get: nfs-volume-release
      passed:
      - setup-cf-infrastructure
      trigger: true
    - get: nfs-volume-release-tarball
      passed:
      - setup-cf-infrastructure
    - get: gorgophone-env-vars-store
  - task: run-pats
    file: nfs-volume-release/scripts/ci/run_pats_nfsvolume.build.yml
    input_mapping:
      vars-store: gorgophone-env-vars-store
    params:
      APPLICATION_PATH: nfs-volume-release/assets/pora
      APPS_DOMAIN: gorgophone.cf-app.com
      BROKER_PASSWORD: foo
      BROKER_URL: http://nfsbrokerpatsapp.gorgophone.cf-app.com
      BROKER_USER: fooser
      CF_API_ENDPOINT: api.gorgophone.cf-app.com
      CF_USERNAME: admin
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
      SERVER_ADDRESS: nfstestserver.service.cf.internal
      SHARE: /export/users
      BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      PUSHED_BROKER_NAME: nfsbrokerpatsapp
      DB_DRIVER_NAME: mysql
      DB_HOST: {{gorgophone-nfsbroker-mysql-host}}
      DB_PORT: 3306
      DB_NAME: nfsdb1
      DB_USERNAME: {{gorgophone-nfsbroker-mysql-user}}
      DB_PASSWORD: {{gorgophone-nfsbroker-mysql-password}}
      TEST_MULTI_CELL: true
      TEST_MOUNT_OPTIONS: true

#### END cf-deployment related jobs ##################################################################################

###################################### END JOBS SECTION ##############################################################
