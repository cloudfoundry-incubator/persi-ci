shared_functions:
  - on_failure: &on_failure_unclaim
      do:
        - task: wait-1-hour
          config:
            platform: linux
            image_resource:
              type: docker-image
              source: {repository: alpine}
            run:
              path: sleep
              args: [ 1 ]
        - put: smith-env
          params:
            action: unclaim
            env_file: smith-env/metadata
          tags: [ toolsmiths-shared-vsphere ]
  - on_error: &on_error_unclaim
      do:
        - task: wait-1-hour
          config:
            platform: linux
            image_resource:
              type: docker-image
              source: {repository: alpine}
            run:
              path: sleep
              args: [ 1 ]
        - put: smith-env
          params:
            action: unclaim
            env_file: smith-env/metadata
          tags: [ toolsmiths-shared-vsphere ]

resources:
  - name: nfs-volume-release-concourse-tasks
    type: git
    source:
      branch: {{lts-nfs-branch}}
      username: {{github-user}}
      password: {{github-password}}
      uri: https://github.com/cloudfoundry/nfs-volume-release.git
  - name: smith-env
    type: pcf-pool
    source:
      api_token: ((persi_toolsmiths_env_api_token))
      hostname: environments.toolsmiths.cf-app.com
      pool_name: us_2_8
    tags: [ toolsmiths-shared-vsphere ]
  - name: docker_driver_integration_tests
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/docker_driver_integration_tests
  - name: credhub
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry-incubator/credhub
  - name: persi-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/persi-ci
      branch: master

  - name: nfs-volume-release
    type: git
    source:
      branch: v5.0
      username: {{github-user}}
      password: {{github-password}}
      uri: https://github.com/cloudfoundry/nfs-volume-release.git
      ignore_paths:
        - scripts

  - name: mapfs-release
    type: git
    source:
      branch: master
      tag_filter: {{mapfs-tag}}
      username: {{github-user}}
      password: {{github-password}}
      uri: https://github.com/cloudfoundry/mapfs-release.git

  - name: cf-deployment
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-deployment.git

  - name: cf-deployment-concourse-tasks
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

  - name: cf-volume-services-acceptance-tests
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-volume-services-acceptance-tests.git

resource_types:
  - name: pcf-pool
    type: docker-image
    source:
      repository: cftoolsmiths/toolsmiths-envs-resource

jobs:
  - name: nfs-security-scan
    plan:
      - in_parallel:
          - get: persi-ci
          - get: nfs-volume-release
            trigger: true
      - task: build
        file: persi-ci/scripts/ci/security-scan.build.yml
        params:
          PATHS: "src/code.cloudfoundry.org/nfsv3driver/:src/code.cloudfoundry.org/nfsbroker/"
          RELEASE_DIR: nfs-volume-release
        input_mapping:
          release-dir: nfs-volume-release

  - name: nfsdriver-unit
    public: true
    plan:
      - in_parallel:
          - get: nfs-volume-release-concourse-tasks
            params:
              submodules: none
          - get: nfs-volume-release
            trigger: true
      - task: build
        file: nfs-volume-release-concourse-tasks/scripts/ci/run_driver_unit.build.yml

  - name: nfsbroker-tests
    public: true
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: nfs-volume-release-concourse-tasks
              params:
                submodules: none
            - get: nfs-volume-release
              trigger: true
            - get: credhub
      - task: run-test
        file: nfs-volume-release-concourse-tasks/scripts/ci/run_broker_integration.build.yml

  - name: nfs-volume-release-job-tests
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: persi-ci
            - get: nfs-volume-release-concourse-tasks
            - get: mapfs-release
            - get: nfs-volume-release
              trigger: true
      - task: rspec
        file: persi-ci/scripts/ci/run-rspec.build.yml
        input_mapping:
          test-repo: nfs-volume-release
      - task: bosh-release-test
        attempts: 3
        file: nfs-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
        privileged: true

  - name: nfsdriver-integration
    serial: true
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: persi-ci
            - get: docker_driver_integration_tests
            - get: nfs-volume-release-concourse-tasks
              params:
                submodules: none
            - get: nfs-volume-release
              passed:
                - nfsdriver-unit
                - nfsbroker-tests
              trigger: true
            - get: mapfs-release
              trigger: true
      - in_parallel:
          fail_fast: true
          steps:
            - task: run_docker_driver_integration_tests
              file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml
              privileged: true
              params:
                TEST_PACKAGE: docker_driver_integration_tests/
            - task: run_docker_driver_lazy_unmount_integration_tests
              file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml
              privileged: true
              params:
                TEST_PACKAGE: docker_driver_integration_tests/lazy_unmount
            - task: run_driver_broker_compatibility_tests
              privileged: true
              input_mapping:
                director-state: bbl-state
              params:
                TEST_PACKAGE: docker_driver_integration_tests/compatibility
              file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml

  - name: claim-env
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: persi-ci
            - get: nfs-volume-release
              trigger: true
              passed:
                - nfsdriver-integration
                - nfs-volume-release-job-tests
            - get: mapfs-release
              trigger: true
      - put: smith-env
        params:
          action: claim
        tags: [ toolsmiths-shared-vsphere ]
      - task: output-env-details
        file: persi-ci/scripts/ci/claim-pooled-env.build.yml
        input_mapping:
          pooled-env: smith-env

  - name: deploy-cf
    public: true
    build_logs_to_retain: 100
    on_failure: *on_failure_unclaim
    on_error: *on_error_unclaim
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: smith-env
              tags: [ toolsmiths-shared-vsphere ]
              passed: [ claim-env ]
              trigger: true
            - get: cf-deployment-concourse-tasks
            - get: cf-deployment
            - get: persi-ci
            - get: nfs-volume-release
              passed: [ claim-env ]
            - get: mapfs-release
              passed: [ claim-env ]
      - task: bosh-deploy
        tags: [ toolsmiths-shared-vsphere ]
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cfpersi/lts-smith
              tag: latest
          inputs:
            - name: nfs-volume-release
            - name: persi-ci
            - name: mapfs-release
            - name: smith-env
          params:
            TOOLSMITHS_API_TOKEN: ((persi_toolsmiths_env_api_token))
          run:
            path: bash
            args:
              - -exc
              - |
                BOSH_ENV_NAME=$(cat smith-env/name)
                export env=$BOSH_ENV_NAME
                eval "$(smith -e $BOSH_ENV_NAME bosh)"
                export BOSH_DEPLOYMENT=$(smith bosh deployments -- --column=Name --json | jq -r ."Tables[0].Rows[0].name")
                pushd nfs-volume-release
                  bosh create-release
                  bosh upload-release
                  bosh manifest > /tmp/cf.yml
                popd
                bosh deploy -n /tmp/cf.yml \
                -o persi-ci/operations/pas/use-latest-releases.yml \
                -o persi-ci/operations/pas/nfs-pas-mixin.yml \
                -o persi-ci/operations/pas/remove-paths-from-releases.yml
                bosh run-errand nfsbrokerpush
                smith cf-login
                cf enable-feature-flag diego_docker

  - name: pats-nfs
    on_failure: *on_failure_unclaim
    on_error: *on_error_unclaim
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: cf-volume-services-acceptance-tests
            - get: persi-ci
            - get: smith-env
              tags: [ toolsmiths-shared-vsphere ]
              passed: [ deploy-cf ]
              trigger: true
            - get: nfs-volume-release
              passed: [ deploy-cf ]
            - get: mapfs-release
              passed: [ deploy-cf ]
      - task: generate-pats-config-nfs
        file: persi-ci/scripts/ci/generate_pats_config.build.yml
        params:
          CF_USERNAME: admin
          BIND_BOGUS_CONFIG: '{"uid":"1000","gid":"1000"}'
          BIND_CONFIG: '["{\"uid\":\"1000\",\"gid\":\"1000\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"3.0\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"version\": \"3.0\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.1\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"version\": \"4.1\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.2\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"version\": \"4.2\",\"mount\": \"/var/vcap/data/foo\"}"]'
          CREATE_BOGUS_CONFIG: '{"share":"mysql.service.cf.internal/export/nonexistensevol"}'
          CREATE_CONFIG: '{"share":"mysql.service.cf.internal/export/users"}'
          PLAN_NAME: Existing
          SERVICE_NAME: nfs
        output_mapping:
          pats-config: nfs-pats-config
      - in_parallel:
          fail_fast: true
          steps:
            - task: run-pats-nfs
              input_mapping:
                pats-config: nfs-pats-config
              file: persi-ci/scripts/ci/run-pats.build.yml
              attempts: 3
              params:
                PARALLEL_NODES: 2
                TEST_MOUNT_FAIL_LOGGING: true
                TEST_MOUNT_OPTIONS: true
                TEST_MULTI_CELL: true
                TEST_READ_ONLY: true

  - name: deploy-cf-with-ldap
    public: true
    build_logs_to_retain: 100
    on_failure: *on_failure_unclaim
    on_error: *on_error_unclaim
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: smith-env
              tags: [ toolsmiths-shared-vsphere ]
              passed:
                - pats-nfs
              trigger: true
            - get: cf-deployment-concourse-tasks
            - get: cf-deployment
            - get: persi-ci
            - get: nfs-volume-release
              passed:
                - pats-nfs
            - get: mapfs-release
              passed:
                - pats-nfs
      - task: pin-cf-deployment-version
        file: persi-ci/scripts/ci/pin_cf_deployment_version.build.yml
        input_mapping:
          toolsmiths-env: smith-env
      - task: collect-persi-ci-ops-files
        file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
        input_mapping:
          base-ops-files: cf-deployment-pinned
          new-ops-files: persi-ci
        params:
          BASE_OPS_FILE_DIR: "operations"
          NEW_OPS_FILES: "operations/enable-nfs-test-server-two.yml"
      - task: generate-variables
        file: persi-ci/scripts/ci/generate_variables.build.yml
        params:
          GENERATE_DATADOG_VARS: false
          GENERATE_NFS_VARS: true
          GENERATE_SMB_VARS: false
          GENERATE_GCS_BLOBSTORE_VARS: false
          LDAP_HOST: "nfstestldapserver.service.cf.internal"
          LDAP_SVC_USER: "cn=admin,dc=domain,dc=com"
          LDAP_SVC_PASS: "secret"
          LDAP_PORT: 636
          LDAP_PROTO: tcp
          LDAP_USER_FQDN: "ou=Users,dc=domain,dc=com"
      - task: bosh-deploy-cf
        file: persi-ci/scripts/ci/deploy-cf-with-multiple-releases.build.yml
        input_mapping:
          toolsmiths-env: smith-env
          cf-deployment: cf-deployment-pinned
          ops-files: collected-ops-files
          vars-files: generated-vars
        params:
          VARS_FILES: "nfs-vars.yml"
          OPS_FILES: "operations/use-compiled-releases.yml
                  operations/scale-to-one-az.yml
                  operations/enable-nfs-volume-service.yml
                  operations/enable-nfs-test-server-two.yml
                  operations/enable-nfs-ldap.yml
                  operations/test/enable-nfs-test-server.yml
                  operations/test/enable-nfs-test-ldapserver.yml
                  operations/backup-and-restore/enable-backup-restore.yml
                  operations/backup-and-restore/enable-restore-nfs-broker.yml"
      - task: run-smoke-tests
        file: cf-deployment-concourse-tasks/run-errand/task.yml
        input_mapping:
          toolsmiths-env: smith-env
        params:
          ERRAND_NAME: smoke_tests

  - name: pats-nfs-ldap
    on_failure: *on_failure_unclaim
    on_error: *on_error_unclaim
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: smith-env
              tags: [ toolsmiths-shared-vsphere ]
              passed:
                - deploy-cf-with-ldap
              trigger: true
            - get: cf-volume-services-acceptance-tests
            - get: persi-ci
            - get: nfs-volume-release
              passed:
                - deploy-cf-with-ldap
            - get: mapfs-release
              passed:
                - deploy-cf-with-ldap
      - in_parallel:
          fail_fast: true
          steps:
            - task: generate-legacy-pats-config
              file: persi-ci/scripts/ci/generate_pats_config.build.yml
              params:
                BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
                CREATE_CONFIG: '{"share":"mysql.service.cf.internal/export/users"}'
                DISALLOWED_LDAP_BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
                PLAN_NAME: Existing
                SERVICE_NAME: nfs-legacy
              output_mapping:
                pats-config: nfs-legacy-pats-config
            - task: generate-pats-config
              file: persi-ci/scripts/ci/generate_pats_config.build.yml
              params:
                BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
                CREATE_CONFIG: '{"share":"mysql.service.cf.internal/export/users"}'
                DISALLOWED_LDAP_BIND_CONFIG: '{"uid":"1000","gid":"1000"}'
                PLAN_NAME: Existing
                SERVICE_NAME: nfs
              output_mapping:
                pats-config: nfs-pats-config
      - in_parallel:
          fail_fast: true
          steps:
            - task: run-legacy-pats
              input_mapping:
                pats-config: nfs-legacy-pats-config
              file: persi-ci/scripts/ci/run-pats.build.yml
              params:
                TEST_DOCKER_PORA: true
            - task: run-pats
              input_mapping:
                pats-config: nfs-pats-config
              file: persi-ci/scripts/ci/run-pats.build.yml
              params:
                TEST_DOCKER_PORA: true

  - name: unclaim-env
    plan:
      - get: smith-env
        tags: [ toolsmiths-shared-vsphere ]
        passed:
          - pats-nfs-ldap
        trigger: true
      - put: smith-env
        params:
          action: unclaim
          env_file: smith-env/metadata
        tags: [ toolsmiths-shared-vsphere ]
