#!/bin/bash -e

collect_versions() {
  if [ ! -d ${ROOT_DIR}/diego-version ]; then
    echo "[ERROR] diego-version input is missing."
    exit 1
  fi
  if [ ! -d ${ROOT_DIR}/nfs-version ]; then
    echo "[ERROR] nfs-version input is missing."
    exit 1
  fi
  if [ ! -d ${ROOT_DIR}/csi-local-version ]; then
    echo "[ERROR] csi-local-version input is missing."
    exit 1
  fi
  if [ ! -d ${ROOT_DIR}/ecs-version ]; then
    echo "[ERROR] ecs-version input is missing."
    exit 1
  fi

  DIEGO_VERSION="$(cat diego-version/number)"
  NFS_VERSION="$(cat nfs-version/number)"
  CSI_LOCAL_VERSION="$(cat csi-local-version/number)"
  ECS_VERSION="$(cat ecs-version/number)"
}

check_params() {
  if [ ! -d ${ROOT_DIR}/diego-tarball ]; then
    echo "[ERROR] diego-tarball input is missing."
    exit 1
  fi
  if [ ! -d ${ROOT_DIR}/nfs-tarball ]; then
    echo "[ERROR] nfs-tarball input is missing."
    exit 1
  fi
  if [ ! -d ${ROOT_DIR}/csi-local-tarball ]; then
    echo "[ERROR] csi-local-tarball input is missing."
    exit 1
  fi
  if [ ! -d ${ROOT_DIR}/ecs-tarball ]; then
    echo "[ERROR] ecs-tarball input is missing."
    exit 1
  fi

  if [ -z "${DIEGO_VERSION}" ]; then
    echo "[ERROR] DIEGO_VERSION is missing."
    exit 1
  fi
  if [ -z "${NFS_VERSION}" ]; then
    echo "[ERROR] NFS_VERSION is missing."
    exit 1
  fi
  if [ -z "${CSI_LOCAL_VERSION}" ]; then
    echo "[ERROR] CSI_LOCAL_VERSION is missing."
    exit 1
  fi
  if [ -z "${ECS_VERSION}" ]; then
    echo "[ERROR] ECS_VERSION is missing."
    exit 1
  fi
}

# Create collection directory (task output)
create_collection_directory() {
  mkdir -p ${ROOT_DIR}/collected-tarballs/operations
}

# Copy tarballs to collection with easy names
collect_tarballs() {
  cp ${ROOT_DIR}/diego-tarball/*.tgz ${ROOT_DIR}/collected-tarballs/diego.tgz
  cp ${ROOT_DIR}/nfs-tarball/*.tgz ${ROOT_DIR}/collected-tarballs/nfs.tgz
  cp ${ROOT_DIR}/csi-local-tarball/*.tgz ${ROOT_DIR}/collected-tarballs/csi-local.tgz
  cp ${ROOT_DIR}/ecs-tarball/*.tgz ${ROOT_DIR}/collected-tarballs/ecs.tgz
}

# Copy each new operation to collection
create_operation_file() {
    cat << EOF > ${ROOT_DIR}/collected-tarballs/operations/update-releases.yml
---
- type: replace
  path: /releases/name=diego
  value:
    name: diego
    version: ${DIEGO_VERSION}
    url: ops-files/diego.tgz
- type: replace
  path: /releases/name=nfs-volume
  value:
    name: nfs-volume
    version: ${NFS_VERSION}
    url: ops-files/nfs.tgz
- type: replace
  path: /releases/name=csi-local-volume
  value:
    name: csi-local-volume
    version: ${CSI_LOCAL_VERSION}
    url: ops-files/csi-local.tgz
- type: replace
  path: /releases/name=ecs-release
  value:
    name: ecs-volume
    version: ${ECS_VERSION}
    url: ops-files/ecs.tgz
EOF
}

main() {
  ROOT_DIR="${1}"

  collect_versions
  check_params
  create_collection_directory
  collect_tarballs
  create_operation_file
}

main ${PWD}