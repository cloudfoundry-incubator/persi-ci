#!/bin/bash -eu

set -e -x

source bosh-env/set-env.sh

export CA_CERT="$PWD/bosh-env/ca-cert.pem"
#export BBR_PRIVATE_KEY=$(cat bosh-env/ssh-key)

export DEPLOYMENT_TO_BACKUP=cf
export DEPLOYMENT_TO_RESTORE=cf
export BOSH_URL=${BOSH_ENVIRONMENT}
export BOSH_CLIENT=${BOSH_CLIENT}
export BOSH_CLIENT_SECRET=${BOSH_CLIENT_SECRET}
export BOSH_CERT_PATH=${CA_CERT}
export BBR_BUILD_PATH=$(pwd)/binary/bbr


#install bosh
wget https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-2.0.28-linux-amd64
chmod +x bosh-cli-*
mv bosh-cli-* /usr/local/bin/bosh-cli

#install cf cli
#wget -O cf-cli.deb "https://cli.run.pivotal.io/stable?release=debian64&source=github"
#dpkg -i cf-cli.deb && apt-get install -f

#wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
#echo "deb http://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
#sudo apt-get update
#sudo apt-get install cf-cli

pushd nfs-volume-release
    GOPATH=$PWD
    PATH=$GOPATH/bin:$PATH

    pushd /src/code.cloudfoundry.org/nfsbroker
        go build
    popd
popd

# make a go project
mkdir -p runme
pushd runme/
    GOPATH=$PWD
    PATH=$GOPATH/bin:$PATH

    # install glide because drats doesn't
    mkdir -p $GOPATH/bin
    curl https://glide.sh/get | sh

    mkdir -p src/github.com/cloudfoundry-incubator/
    pushd src/github.com/cloudfoundry-incubator/
      git clone https://github.com/jeffpak/disaster-recovery-acceptance-tests disaster-recovery-acceptance-tests
    popd


    # run drats
    pushd src/github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests/

        rm ${APPLICATION_PATH}/manifest.yml
cat << EOF > ${APPLICATION_PATH}/manifest.yml
---
  buildpack: binary_buildpack
  env:
    DBDRIVERNAME: ${DB_DRIVER_NAME}
    SERVICENAME: ${SERVICE_NAME}
    USERNAME: ${BROKER_USER}
    PASSWORD: ${BROKER_PASSWORD}
    LOGLEVEL: debug
    DBHOST: ${DB_HOST}
    DBPORT: ${DB_PORT}
    DBNAME: ${DB_NAME}
    DB_USERNAME: ${DB_USERNAME}
    DB_PASSWORD: ${DB_PASSWORD}
EOF
        scripts/run_acceptance_tests.sh
    popd
popd
