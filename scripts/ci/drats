#!/bin/bash -eu

set -e -x

source bosh-env/set-env.sh

export CA_CERT="$PWD/bosh-env/ca-cert.pem"
#export BBR_PRIVATE_KEY=$(cat bosh-env/ssh-key)

export DEPLOYMENT_TO_BACKUP=cf
export DEPLOYMENT_TO_RESTORE=cf
export BOSH_URL=${BOSH_ENVIRONMENT}
export BOSH_CLIENT=${BOSH_CLIENT}
export BOSH_CLIENT_SECRET=${BOSH_CLIENT_SECRET}
export BOSH_CERT_PATH=${CA_CERT}
export BBR_BUILD_PATH=$(pwd)/binary/bbr


# install bosh
wget https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-2.0.28-linux-amd64
chmod +x bosh-cli-*
mv bosh-cli-* /usr/local/bin/bosh-cli

if [ -z "$BROKER_PASSWORD" ]; then
    if [ -e "vars-store/deployment-vars.yml" ]; then
        BROKER_PASSWORD=`grep nfs-broker-password vars-store/deployment-vars.yml | awk  '{print $2}'`
    fi
fi
if [ -z "$DB_PASSWORD" ]; then
    if [ -e "vars-store/deployment-vars.yml" ]; then
        DB_PASSWORD=`grep nfs-broker-database-password vars-store/deployment-vars.yml | awk  '{print $2}'`
    fi
fi

# make a go project
mkdir -p runme
pushd runme/
    GOPATH=$PWD
    PATH=$GOPATH/bin:$PATH

    # install glide because drats doesn't
    mkdir -p $GOPATH/bin
    curl https://glide.sh/get | sh

    mkdir -p src/github.com/paulcwarren/
    pushd src/github.com/paulcwarren/
        git clone https://github.com/paulcwarren/disaster-recovery-acceptance-tests.git

        # run drats
        pushd disaster-recovery-acceptance-tests/
            scripts/run_acceptance_tests.sh
        popd
    popd
popd
