#!/bin/bash
# vim: set ft=sh

set -e -x

CF_ORG=background-load-test-org
CF_SPACE=background-load-test-space
APP_NAME=background-load-test-app
SERVICE_INSTANCE_NAME=background-load-test-service
APP_SCALE_UP_COUNT=8
APP_SCALE_DOWN_COUNT=1
ITERATION_COUNT=200

bbl --state-dir bbl-state/${BBL_STATE_DIR} print-env > set-env.sh
source set-env.sh

echo "Retrieving CF password from credhub..."
bosh_manifest_password_variable_name=cf_admin_password
CF_PASSWORD=`credhub find -j -n ${bosh_manifest_password_variable_name} | jq -r .credentials[].name | xargs credhub get -j -n | jq -r .value`

echo "Logging in with CF CLI..."
cf api "${CF_API_ENDPOINT}" --skip-ssl-validation
cf auth "${CF_USERNAME}" "${CF_PASSWORD}"

function cleanup {
    echo "Cleaning up..."
    cf delete "${APP_NAME}" -f
    cf delete-service "${SERVICE_INSTANCE_NAME}" -f
    cf delete-org "${CF_ORG}" -f
}
trap cleanup EXIT

cf create-org "${CF_ORG}"
cf target -o "${CF_ORG}"
cf create-space "${CF_SPACE}"
cf target -s "${CF_SPACE}"

echo "Validating service broker is in the list..."
cf service-brokers | grep "${SERVICE_BROKER_NAME}"

echo "Enabling service access..."
cf enable-service-access "${SERVICE_NAME}" -o "${CF_ORG}"

echo "Validating service access..."
cf service-access | grep "${SERVICE_NAME}"

echo "Creating service..."
cf create-service "${SERVICE_NAME}" "${PLAN_NAME}" "${SERVICE_INSTANCE_NAME}" -c "${CREATE_CONFIG}"

echo "Pushing app..."
cd persi-acceptance-tests/assets/pora
cf push "${APP_NAME}" --no-start

echo "Binding service..."
cf bind-service "${APP_NAME}" "${SERVICE_INSTANCE_NAME}" -c "${BIND_CONFIG}"

echo "Starting app..."
cf start "${APP_NAME}"

echo "Validating bound service..."
cf services | grep "${SERVICE_INSTANCE_NAME}" | grep "${APP_NAME}"

echo "Creating background load test directory..."
curl http://${APP_NAME}.${APPS_DOMAIN}/mkdir-for-background-load

echo "Starting background load test..."
counter=0

while [ ${counter} -lt ${ITERATION_COUNT} ]; do
  echo "Scaling up..."
  cf scale "${APP_NAME}" -i ${APP_SCALE_UP_COUNT}
  sleep 8

  cf app "${APP_NAME}"

  echo "Checking for errors..."
  set +e
  cf logs "${APP_NAME}" --recent | grep waiting
  rv=$?
  set -e
  if [ ${rv} -eq 0 ]; then
      echo
      echo "Test failed."
      exit 1
  fi

  echo "Scaling down..."
  cf scale "${APP_NAME}" -i ${APP_SCALE_DOWN_COUNT}
  sleep 4

  cf app "${APP_NAME}"

  counter=$((counter + 1))
done

echo
echo "Test passed."


